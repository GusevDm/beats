"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(e,t){"object"===("undefined"==typeof module?"undefined":_typeof(module))&&"object"===_typeof(module.exports)?module.exports=e.document?t(e,!0):function(e){if(e.document)return t(e);throw new Error("jQuery requires a window with a document")}:t(e)}("undefined"!=typeof window?window:void 0,function(S,O){function b(e){return"function"==typeof e&&"number"!=typeof e.nodeType&&"function"!=typeof e.item}function g(e){return null!=e&&e===e.window}var t=[],N=Object.getPrototypeOf,a=t.slice,R=t.flat?function(e){return t.flat.call(e)}:function(e){return t.concat.apply([],e)},_=t.push,$=t.indexOf,F={},V=F.toString,W=F.hasOwnProperty,X=W.toString,z=X.call(Object),v={},x=S.document,j={type:!0,src:!0,nonce:!0,noModule:!0};function q(e,t,n){var i,o,r=(n=n||x).createElement("script");if(r.text=e,t)for(i in j)(o=t[i]||t.getAttribute&&t.getAttribute(i))&&r.setAttribute(i,o);n.head.appendChild(r).parentNode.removeChild(r)}function p(e){return null==e?e+"":"object"===_typeof(e)||"function"==typeof e?F[V.call(e)]||"object":_typeof(e)}var e="3.6.1",P=function e(t,n){return new e.fn.init(t,n)};function U(e){var t=!!e&&"length"in e&&e.length,n=p(e);return!b(e)&&!g(e)&&("array"===n||0===t||"number"==typeof t&&0<t&&t-1 in e)}P.fn=P.prototype={jquery:e,constructor:P,length:0,toArray:function(){return a.call(this)},get:function(e){return null==e?a.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){e=P.merge(this.constructor(),e);return e.prevObject=this,e},each:function(e){return P.each(this,e)},map:function(n){return this.pushStack(P.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(a.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(P.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(P.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,e=+e+(e<0?t:0);return this.pushStack(0<=e&&e<t?[this[e]]:[])},end:function(){return this.prevObject||this.constructor()},push:_,sort:t.sort,splice:t.splice},P.extend=P.fn.extend=function(){var e,t,n,i,o,r=arguments[0]||{},s=1,a=arguments.length,l=!1;for("boolean"==typeof r&&(l=r,r=arguments[s]||{},s++),"object"===_typeof(r)||b(r)||(r={}),s===a&&(r=this,s--);s<a;s++)if(null!=(e=arguments[s]))for(t in e)n=e[t],"__proto__"!==t&&r!==n&&(l&&n&&(P.isPlainObject(n)||(i=Array.isArray(n)))?(o=r[t],o=i&&!Array.isArray(o)?[]:i||P.isPlainObject(o)?o:{},i=!1,r[t]=P.extend(l,o,n)):void 0!==n&&(r[t]=n));return r},P.extend({expando:"jQuery"+(e+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){return!(!e||"[object Object]"!==V.call(e))&&(!(e=N(e))||"function"==typeof(e=W.call(e,"constructor")&&e.constructor)&&X.call(e)===z)},isEmptyObject:function(e){for(var t in e)return!1;return!0},globalEval:function(e,t,n){q(e,{nonce:t&&t.nonce},n)},each:function(e,t){var n,i=0;if(U(e))for(n=e.length;i<n&&!1!==t.call(e[i],i,e[i]);i++);else for(i in e)if(!1===t.call(e[i],i,e[i]))break;return e},makeArray:function(e,t){t=t||[];return null!=e&&(U(Object(e))?P.merge(t,"string"==typeof e?[e]:e):_.call(t,e)),t},inArray:function(e,t,n){return null==t?-1:$.call(t,e,n)},merge:function(e,t){for(var n=+t.length,i=0,o=e.length;i<n;i++)e[o++]=t[i];return e.length=o,e},grep:function(e,t,n){for(var i=[],o=0,r=e.length,s=!n;o<r;o++)!t(e[o],o)!=s&&i.push(e[o]);return i},map:function(e,t,n){var i,o,r=0,s=[];if(U(e))for(i=e.length;r<i;r++)null!=(o=t(e[r],r,n))&&s.push(o);else for(r in e)null!=(o=t(e[r],r,n))&&s.push(o);return R(s)},guid:1,support:v}),"function"==typeof Symbol&&(P.fn[Symbol.iterator]=t[Symbol.iterator]),P.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){F["[object "+t+"]"]=t.toLowerCase()});function i(e,t,n){for(var i=[],o=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(o&&P(e).is(n))break;i.push(e)}return i}function K(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}var e=function(O){function d(e,t){return e="0x"+e.slice(1)-65536,t||(e<0?String.fromCharCode(65536+e):String.fromCharCode(e>>10|55296,1023&e|56320))}function N(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e}function R(){x()}var e,h,T,r,_,f,$,F,S,l,c,x,P,n,w,p,i,o,g,A="sizzle"+ +new Date,u=O.document,C=0,V=0,W=H(),X=H(),z=H(),v=H(),j=function(e,t){return e===t&&(c=!0),0},q={}.hasOwnProperty,t=[],U=t.pop,K=t.push,M=t.push,Y=t.slice,b=function(e,t){for(var n=0,i=e.length;n<i;n++)if(e[n]===t)return n;return-1},Q="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",s="[\\x20\\t\\r\\n\\f]",a="(?:\\\\[\\da-fA-F]{1,6}"+s+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",Z="\\["+s+"*("+a+")(?:"+s+"*([*^$|!~]?=)"+s+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+a+"))|)"+s+"*\\]",J=":("+a+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+Z+")*)|.*)\\)|)",ee=new RegExp(s+"+","g"),m=new RegExp("^"+s+"+|((?:^|[^\\\\])(?:\\\\.)*)"+s+"+$","g"),te=new RegExp("^"+s+"*,"+s+"*"),ne=new RegExp("^"+s+"*([>+~]|"+s+")"+s+"*"),ie=new RegExp(s+"|>"),oe=new RegExp(J),re=new RegExp("^"+a+"$"),y={ID:new RegExp("^#("+a+")"),CLASS:new RegExp("^\\.("+a+")"),TAG:new RegExp("^("+a+"|[*])"),ATTR:new RegExp("^"+Z),PSEUDO:new RegExp("^"+J),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+s+"*(even|odd|(([+-]|)(\\d*)n|)"+s+"*(?:([+-]|)"+s+"*(\\d+)|))"+s+"*\\)|)","i"),bool:new RegExp("^(?:"+Q+")$","i"),needsContext:new RegExp("^"+s+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+s+"*((?:-\\d)?\\d*)"+s+"*\\)|)(?=[^-]|$)","i")},se=/HTML$/i,ae=/^(?:input|select|textarea|button)$/i,le=/^h\d$/i,E=/^[^{]+\{\s*\[native \w/,ce=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ue=/[+~]/,k=new RegExp("\\\\[\\da-fA-F]{1,6}"+s+"?|\\\\([^\\r\\n\\f])","g"),de=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,he=be(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{M.apply(t=Y.call(u.childNodes),u.childNodes),t[u.childNodes.length].nodeType}catch(e){M={apply:t.length?function(e,t){K.apply(e,Y.call(t))}:function(e,t){for(var n=e.length,i=0;e[n++]=t[i++];);e.length=n-1}}}function G(t,e,n,i){var o,r,s,a,l,c,u=e&&e.ownerDocument,d=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==d&&9!==d&&11!==d)return n;if(!i&&(x(e),e=e||P,w)){if(11!==d&&(a=ce.exec(t)))if(o=a[1]){if(9===d){if(!(c=e.getElementById(o)))return n;if(c.id===o)return n.push(c),n}else if(u&&(c=u.getElementById(o))&&g(e,c)&&c.id===o)return n.push(c),n}else{if(a[2])return M.apply(n,e.getElementsByTagName(t)),n;if((o=a[3])&&h.getElementsByClassName&&e.getElementsByClassName)return M.apply(n,e.getElementsByClassName(o)),n}if(h.qsa&&!v[t+" "]&&!(p&&p.test(t)||1===d&&"object"===e.nodeName.toLowerCase())){if(c=t,u=e,1===d&&(ie.test(t)||ne.test(t))){for((u=ue.test(t)&&ve(e.parentNode)||e)===e&&h.scope||((s=e.getAttribute("id"))?s=s.replace(de,N):e.setAttribute("id",s=A)),r=(l=f(t)).length;r--;)l[r]=(s?"#"+s:":scope")+" "+D(l[r]);c=l.join(",")}try{return M.apply(n,u.querySelectorAll(c)),n}catch(e){v(t,!0)}finally{s===A&&e.removeAttribute("id")}}}return F(t.replace(m,"$1"),e,n,i)}function H(){var n=[];function i(e,t){return n.push(e+" ")>T.cacheLength&&delete i[n.shift()],i[e+" "]=t}return i}function B(e){return e[A]=!0,e}function I(e){var t=P.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t)}}function fe(e,t){for(var n=e.split("|"),i=n.length;i--;)T.attrHandle[n[i]]=t}function pe(e,t){var n=t&&e,i=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(i)return i;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function ge(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&he(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function L(s){return B(function(r){return r=+r,B(function(e,t){for(var n,i=s([],e.length,r),o=i.length;o--;)e[n=i[o]]&&(e[n]=!(t[n]=e[n]))})})}function ve(e){return e&&void 0!==e.getElementsByTagName&&e}for(e in h=G.support={},_=G.isXML=function(e){var t=e&&e.namespaceURI,e=e&&(e.ownerDocument||e).documentElement;return!se.test(t||e&&e.nodeName||"HTML")},x=G.setDocument=function(e){var e=e?e.ownerDocument||e:u;return e!=P&&9===e.nodeType&&e.documentElement&&(n=(P=e).documentElement,w=!_(P),u!=P&&(e=P.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener("unload",R,!1):e.attachEvent&&e.attachEvent("onunload",R)),h.scope=I(function(e){return n.appendChild(e).appendChild(P.createElement("div")),void 0!==e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length}),h.attributes=I(function(e){return e.className="i",!e.getAttribute("className")}),h.getElementsByTagName=I(function(e){return e.appendChild(P.createComment("")),!e.getElementsByTagName("*").length}),h.getElementsByClassName=E.test(P.getElementsByClassName),h.getById=I(function(e){return n.appendChild(e).id=A,!P.getElementsByName||!P.getElementsByName(A).length}),h.getById?(T.filter.ID=function(e){var t=e.replace(k,d);return function(e){return e.getAttribute("id")===t}},T.find.ID=function(e,t){if(void 0!==t.getElementById&&w)return(t=t.getElementById(e))?[t]:[]}):(T.filter.ID=function(e){var t=e.replace(k,d);return function(e){e=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return e&&e.value===t}},T.find.ID=function(e,t){if(void 0!==t.getElementById&&w){var n,i,o,r=t.getElementById(e);if(r){if((n=r.getAttributeNode("id"))&&n.value===e)return[r];for(o=t.getElementsByName(e),i=0;r=o[i++];)if((n=r.getAttributeNode("id"))&&n.value===e)return[r]}return[]}}),T.find.TAG=h.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):h.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,i=[],o=0,r=t.getElementsByTagName(e);if("*"!==e)return r;for(;n=r[o++];)1===n.nodeType&&i.push(n);return i},T.find.CLASS=h.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&w)return t.getElementsByClassName(e)},i=[],p=[],(h.qsa=E.test(P.querySelectorAll))&&(I(function(e){var t;n.appendChild(e).innerHTML="<a id='"+A+"'></a><select id='"+A+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&p.push("[*^$]="+s+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||p.push("\\["+s+"*(?:value|"+Q+")"),e.querySelectorAll("[id~="+A+"-]").length||p.push("~="),(t=P.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||p.push("\\["+s+"*name"+s+"*="+s+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||p.push(":checked"),e.querySelectorAll("a#"+A+"+*").length||p.push(".#.+[+~]"),e.querySelectorAll("\\\f"),p.push("[\\r\\n\\f]")}),I(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=P.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&p.push("name"+s+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&p.push(":enabled",":disabled"),n.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&p.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),p.push(",.*:")})),(h.matchesSelector=E.test(o=n.matches||n.webkitMatchesSelector||n.mozMatchesSelector||n.oMatchesSelector||n.msMatchesSelector))&&I(function(e){h.disconnectedMatch=o.call(e,"*"),o.call(e,"[s!='']:x"),i.push("!=",J)}),p=p.length&&new RegExp(p.join("|")),i=i.length&&new RegExp(i.join("|")),e=E.test(n.compareDocumentPosition),g=e||E.test(n.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,t=t&&t.parentNode;return e===t||!(!t||1!==t.nodeType||!(n.contains?n.contains(t):e.compareDocumentPosition&&16&e.compareDocumentPosition(t)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},j=e?function(e,t){var n;return e===t?(c=!0,0):(n=!e.compareDocumentPosition-!t.compareDocumentPosition)||(1&(n=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!h.sortDetached&&t.compareDocumentPosition(e)===n?e==P||e.ownerDocument==u&&g(u,e)?-1:t==P||t.ownerDocument==u&&g(u,t)?1:l?b(l,e)-b(l,t):0:4&n?-1:1)}:function(e,t){if(e===t)return c=!0,0;var n,i=0,o=e.parentNode,r=t.parentNode,s=[e],a=[t];if(!o||!r)return e==P?-1:t==P?1:o?-1:r?1:l?b(l,e)-b(l,t):0;if(o===r)return pe(e,t);for(n=e;n=n.parentNode;)s.unshift(n);for(n=t;n=n.parentNode;)a.unshift(n);for(;s[i]===a[i];)i++;return i?pe(s[i],a[i]):s[i]==u?-1:a[i]==u?1:0}),P},G.matches=function(e,t){return G(e,null,null,t)},G.matchesSelector=function(e,t){if(x(e),h.matchesSelector&&w&&!v[t+" "]&&!(i&&i.test(t)||p&&p.test(t)))try{var n=o.call(e,t);if(n||h.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){v(t,!0)}return 0<G(t,P,null,[e]).length},G.contains=function(e,t){return(e.ownerDocument||e)!=P&&x(e),g(e,t)},G.attr=function(e,t){(e.ownerDocument||e)!=P&&x(e);var n=T.attrHandle[t.toLowerCase()],n=n&&q.call(T.attrHandle,t.toLowerCase())?n(e,t,!w):void 0;return void 0!==n?n:h.attributes||!w?e.getAttribute(t):(n=e.getAttributeNode(t))&&n.specified?n.value:null},G.escape=function(e){return(e+"").replace(de,N)},G.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},G.uniqueSort=function(e){var t,n=[],i=0,o=0;if(c=!h.detectDuplicates,l=!h.sortStable&&e.slice(0),e.sort(j),c){for(;t=e[o++];)t===e[o]&&(i=n.push(o));for(;i--;)e.splice(n[i],1)}return l=null,e},r=G.getText=function(e){var t,n="",i=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=r(e)}else if(3===o||4===o)return e.nodeValue}else for(;t=e[i++];)n+=r(t);return n},(T=G.selectors={cacheLength:50,createPseudo:B,match:y,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(k,d),e[3]=(e[3]||e[4]||e[5]||"").replace(k,d),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||G.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&G.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return y.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&oe.test(n)&&(t=(t=f(n,!0))&&n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(k,d).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=W[e+" "];return t||(t=new RegExp("(^|"+s+")"+e+"("+s+"|$)"))&&W(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(t,n,i){return function(e){e=G.attr(e,t);return null==e?"!="===n:!n||(e+="","="===n?e===i:"!="===n?e!==i:"^="===n?i&&0===e.indexOf(i):"*="===n?i&&-1<e.indexOf(i):"$="===n?i&&e.slice(-i.length)===i:"~="===n?-1<(" "+e.replace(ee," ")+" ").indexOf(i):"|="===n&&(e===i||e.slice(0,i.length+1)===i+"-"))}},CHILD:function(p,e,t,g,v){var m="nth"!==p.slice(0,3),b="last"!==p.slice(-4),y="of-type"===e;return 1===g&&0===v?function(e){return!!e.parentNode}:function(e,t,n){var i,o,r,s,a,l,c=m!=b?"nextSibling":"previousSibling",u=e.parentNode,d=y&&e.nodeName.toLowerCase(),h=!n&&!y,f=!1;if(u){if(m){for(;c;){for(s=e;s=s[c];)if(y?s.nodeName.toLowerCase()===d:1===s.nodeType)return!1;l=c="only"===p&&!l&&"nextSibling"}return!0}if(l=[b?u.firstChild:u.lastChild],b&&h){for(f=(a=(i=(o=(r=(s=u)[A]||(s[A]={}))[s.uniqueID]||(r[s.uniqueID]={}))[p]||[])[0]===C&&i[1])&&i[2],s=a&&u.childNodes[a];s=++a&&s&&s[c]||(f=a=0,l.pop());)if(1===s.nodeType&&++f&&s===e){o[p]=[C,a,f];break}}else if(!1===(f=h?a=(i=(o=(r=(s=e)[A]||(s[A]={}))[s.uniqueID]||(r[s.uniqueID]={}))[p]||[])[0]===C&&i[1]:f))for(;(s=++a&&s&&s[c]||(f=a=0,l.pop()))&&((y?s.nodeName.toLowerCase()!==d:1!==s.nodeType)||!++f||(h&&((o=(r=s[A]||(s[A]={}))[s.uniqueID]||(r[s.uniqueID]={}))[p]=[C,f]),s!==e)););return(f-=v)===g||f%g==0&&0<=f/g}}},PSEUDO:function(e,r){var t,s=T.pseudos[e]||T.setFilters[e.toLowerCase()]||G.error("unsupported pseudo: "+e);return s[A]?s(r):1<s.length?(t=[e,e,"",r],T.setFilters.hasOwnProperty(e.toLowerCase())?B(function(e,t){for(var n,i=s(e,r),o=i.length;o--;)e[n=b(e,i[o])]=!(t[n]=i[o])}):function(e){return s(e,0,t)}):s}},pseudos:{not:B(function(e){var i=[],o=[],a=$(e.replace(m,"$1"));return a[A]?B(function(e,t,n,i){for(var o,r=a(e,null,i,[]),s=e.length;s--;)(o=r[s])&&(e[s]=!(t[s]=o))}):function(e,t,n){return i[0]=e,a(i,null,n,o),i[0]=null,!o.pop()}}),has:B(function(t){return function(e){return 0<G(t,e).length}}),contains:B(function(t){return t=t.replace(k,d),function(e){return-1<(e.textContent||r(e)).indexOf(t)}}),lang:B(function(n){return re.test(n||"")||G.error("unsupported lang: "+n),n=n.replace(k,d).toLowerCase(),function(e){var t;do{if(t=w?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===n||0===t.indexOf(n+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=O.location&&O.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===n},focus:function(e){return e===P.activeElement&&(!P.hasFocus||P.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:ge(!1),disabled:ge(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!T.pseudos.empty(e)},header:function(e){return le.test(e.nodeName)},input:function(e){return ae.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(e=e.getAttribute("type"))||"text"===e.toLowerCase())},first:L(function(){return[0]}),last:L(function(e,t){return[t-1]}),eq:L(function(e,t,n){return[n<0?n+t:n]}),even:L(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:L(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:L(function(e,t,n){for(var i=n<0?n+t:t<n?t:n;0<=--i;)e.push(i);return e}),gt:L(function(e,t,n){for(var i=n<0?n+t:n;++i<t;)e.push(i);return e})}}).pseudos.nth=T.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})T.pseudos[e]=function(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}(e);for(e in{submit:!0,reset:!0})T.pseudos[e]=function(n){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===n}}(e);function me(){}function D(e){for(var t=0,n=e.length,i="";t<n;t++)i+=e[t].value;return i}function be(s,e,t){var a=e.dir,l=e.next,c=l||a,u=t&&"parentNode"===c,d=V++;return e.first?function(e,t,n){for(;e=e[a];)if(1===e.nodeType||u)return s(e,t,n);return!1}:function(e,t,n){var i,o,r=[C,d];if(n){for(;e=e[a];)if((1===e.nodeType||u)&&s(e,t,n))return!0}else for(;e=e[a];)if(1===e.nodeType||u)if(o=(o=e[A]||(e[A]={}))[e.uniqueID]||(o[e.uniqueID]={}),l&&l===e.nodeName.toLowerCase())e=e[a]||e;else{if((i=o[c])&&i[0]===C&&i[1]===d)return r[2]=i[2];if((o[c]=r)[2]=s(e,t,n))return!0}return!1}}function ye(o){return 1<o.length?function(e,t,n){for(var i=o.length;i--;)if(!o[i](e,t,n))return!1;return!0}:o[0]}function Te(e,t,n,i,o){for(var r,s=[],a=0,l=e.length,c=null!=t;a<l;a++)!(r=e[a])||n&&!n(r,i,o)||(s.push(r),c&&t.push(a));return s}function Se(f,p,g,v,m,e){return v&&!v[A]&&(v=Se(v)),m&&!m[A]&&(m=Se(m,e)),B(function(e,t,n,i){var o,r,s,a=[],l=[],c=t.length,u=e||function(e,t,n){for(var i=0,o=t.length;i<o;i++)G(e,t[i],n);return n}(p||"*",n.nodeType?[n]:n,[]),d=!f||!e&&p?u:Te(u,a,f,n,i),h=g?m||(e?f:c||v)?[]:t:d;if(g&&g(d,h,n,i),v)for(o=Te(h,l),v(o,[],n,i),r=o.length;r--;)(s=o[r])&&(h[l[r]]=!(d[l[r]]=s));if(e){if(m||f){if(m){for(o=[],r=h.length;r--;)(s=h[r])&&o.push(d[r]=s);m(null,h=[],o,i)}for(r=h.length;r--;)(s=h[r])&&-1<(o=m?b(e,s):a[r])&&(e[o]=!(t[o]=s))}}else h=Te(h===t?h.splice(c,h.length):h),m?m(null,t,h,i):M.apply(t,h)})}function xe(v,m){function e(e,t,n,i,o){var r,s,a,l=0,c="0",u=e&&[],d=[],h=S,f=e||y&&T.find.TAG("*",o),p=C+=null==h?1:Math.random()||.1,g=f.length;for(o&&(S=t==P||t||o);c!==g&&null!=(r=f[c]);c++){if(y&&r){for(s=0,t||r.ownerDocument==P||(x(r),n=!w);a=v[s++];)if(a(r,t||P,n)){i.push(r);break}o&&(C=p)}b&&((r=!a&&r)&&l--,e&&u.push(r))}if(l+=c,b&&c!==l){for(s=0;a=m[s++];)a(u,d,t,n);if(e){if(0<l)for(;c--;)u[c]||d[c]||(d[c]=U.call(i));d=Te(d)}M.apply(i,d),o&&!e&&0<d.length&&1<l+m.length&&G.uniqueSort(i)}return o&&(C=p,S=h),u}var b=0<m.length,y=0<v.length;return b?B(e):e}return me.prototype=T.filters=T.pseudos,T.setFilters=new me,f=G.tokenize=function(e,t){var n,i,o,r,s,a,l,c=X[e+" "];if(c)return t?0:c.slice(0);for(s=e,a=[],l=T.preFilter;s;){for(r in n&&!(i=te.exec(s))||(i&&(s=s.slice(i[0].length)||s),a.push(o=[])),n=!1,(i=ne.exec(s))&&(n=i.shift(),o.push({value:n,type:i[0].replace(m," ")}),s=s.slice(n.length)),T.filter)!(i=y[r].exec(s))||l[r]&&!(i=l[r](i))||(n=i.shift(),o.push({value:n,type:r,matches:i}),s=s.slice(n.length));if(!n)break}return t?s.length:s?G.error(e):X(e,a).slice(0)},$=G.compile=function(e,t){var n,i=[],o=[],r=z[e+" "];if(!r){for(n=(t=t||f(e)).length;n--;)((r=function e(t){for(var i,n,o,r=t.length,s=T.relative[t[0].type],a=s||T.relative[" "],l=s?1:0,c=be(function(e){return e===i},a,!0),u=be(function(e){return-1<b(i,e)},a,!0),d=[function(e,t,n){return e=!s&&(n||t!==S)||((i=t).nodeType?c:u)(e,t,n),i=null,e}];l<r;l++)if(n=T.relative[t[l].type])d=[be(ye(d),n)];else{if((n=T.filter[t[l].type].apply(null,t[l].matches))[A]){for(o=++l;o<r&&!T.relative[t[o].type];o++);return Se(1<l&&ye(d),1<l&&D(t.slice(0,l-1).concat({value:" "===t[l-2].type?"*":""})).replace(m,"$1"),n,l<o&&e(t.slice(l,o)),o<r&&e(t=t.slice(o)),o<r&&D(t))}d.push(n)}return ye(d)}(t[n]))[A]?i:o).push(r);(r=z(e,xe(o,i))).selector=e}return r},F=G.select=function(e,t,n,i){var o,r,s,a,l,c="function"==typeof e&&e,u=!i&&f(e=c.selector||e);if(n=n||[],1===u.length){if(2<(r=u[0]=u[0].slice(0)).length&&"ID"===(s=r[0]).type&&9===t.nodeType&&w&&T.relative[r[1].type]){if(!(t=(T.find.ID(s.matches[0].replace(k,d),t)||[])[0]))return n;c&&(t=t.parentNode),e=e.slice(r.shift().value.length)}for(o=y.needsContext.test(e)?0:r.length;o--&&(s=r[o],!T.relative[a=s.type]);)if((l=T.find[a])&&(i=l(s.matches[0].replace(k,d),ue.test(r[0].type)&&ve(t.parentNode)||t))){if(r.splice(o,1),e=i.length&&D(r))break;return M.apply(n,i),n}}return(c||$(e,u))(i,t,!w,n,!t||ue.test(e)&&ve(t.parentNode)||t),n},h.sortStable=A.split("").sort(j).join("")===A,h.detectDuplicates=!!c,x(),h.sortDetached=I(function(e){return 1&e.compareDocumentPosition(P.createElement("fieldset"))}),I(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||fe("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),h.attributes&&I(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||fe("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),I(function(e){return null==e.getAttribute("disabled")})||fe(Q,function(e,t,n){if(!n)return!0===e[t]?t.toLowerCase():(n=e.getAttributeNode(t))&&n.specified?n.value:null}),G}(S),Y=(P.find=e,P.expr=e.selectors,P.expr[":"]=P.expr.pseudos,P.uniqueSort=P.unique=e.uniqueSort,P.text=e.getText,P.isXMLDoc=e.isXML,P.contains=e.contains,P.escapeSelector=e.escape,P.expr.match.needsContext);function l(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var Q=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function Z(e,n,i){return b(n)?P.grep(e,function(e,t){return!!n.call(e,t,e)!==i}):n.nodeType?P.grep(e,function(e){return e===n!==i}):"string"!=typeof n?P.grep(e,function(e){return-1<$.call(n,e)!==i}):P.filter(n,e,i)}P.filter=function(e,t,n){var i=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===i.nodeType?P.find.matchesSelector(i,e)?[i]:[]:P.find.matches(e,P.grep(t,function(e){return 1===e.nodeType}))},P.fn.extend({find:function(e){var t,n,i=this.length,o=this;if("string"!=typeof e)return this.pushStack(P(e).filter(function(){for(t=0;t<i;t++)if(P.contains(o[t],this))return!0}));for(n=this.pushStack([]),t=0;t<i;t++)P.find(e,o[t],n);return 1<i?P.uniqueSort(n):n},filter:function(e){return this.pushStack(Z(this,e||[],!1))},not:function(e){return this.pushStack(Z(this,e||[],!0))},is:function(e){return!!Z(this,"string"==typeof e&&Y.test(e)?P(e):e||[],!1).length}});var J,ee=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,te=((P.fn.init=function(e,t,n){if(e){if(n=n||J,"string"!=typeof e)return e.nodeType?(this[0]=e,this.length=1,this):b(e)?void 0!==n.ready?n.ready(e):e(P):P.makeArray(e,this);if(!(i="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:ee.exec(e))||!i[1]&&t)return(!t||t.jquery?t||n:this.constructor(t)).find(e);if(i[1]){if(t=t instanceof P?t[0]:t,P.merge(this,P.parseHTML(i[1],t&&t.nodeType?t.ownerDocument||t:x,!0)),Q.test(i[1])&&P.isPlainObject(t))for(var i in t)b(this[i])?this[i](t[i]):this.attr(i,t[i])}else(n=x.getElementById(i[2]))&&(this[0]=n,this.length=1)}return this}).prototype=P.fn,J=P(x),/^(?:parents|prev(?:Until|All))/),ne={children:!0,contents:!0,next:!0,prev:!0};function ie(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}P.fn.extend({has:function(e){var t=P(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(P.contains(this,t[e]))return!0})},closest:function(e,t){var n,i=0,o=this.length,r=[],s="string"!=typeof e&&P(e);if(!Y.test(e))for(;i<o;i++)for(n=this[i];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(s?-1<s.index(n):1===n.nodeType&&P.find.matchesSelector(n,e))){r.push(n);break}return this.pushStack(1<r.length?P.uniqueSort(r):r)},index:function(e){return e?"string"==typeof e?$.call(P(e),this[0]):$.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(P.uniqueSort(P.merge(this.get(),P(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),P.each({parent:function(e){return(e=e.parentNode)&&11!==e.nodeType?e:null},parents:function(e){return i(e,"parentNode")},parentsUntil:function(e,t,n){return i(e,"parentNode",n)},next:function(e){return ie(e,"nextSibling")},prev:function(e){return ie(e,"previousSibling")},nextAll:function(e){return i(e,"nextSibling")},prevAll:function(e){return i(e,"previousSibling")},nextUntil:function(e,t,n){return i(e,"nextSibling",n)},prevUntil:function(e,t,n){return i(e,"previousSibling",n)},siblings:function(e){return K((e.parentNode||{}).firstChild,e)},children:function(e){return K(e.firstChild)},contents:function(e){return null!=e.contentDocument&&N(e.contentDocument)?e.contentDocument:(l(e,"template")&&(e=e.content||e),P.merge([],e.childNodes))}},function(i,o){P.fn[i]=function(e,t){var n=P.map(this,o,e);return(t="Until"!==i.slice(-5)?e:t)&&"string"==typeof t&&(n=P.filter(t,n)),1<this.length&&(ne[i]||P.uniqueSort(n),te.test(i)&&n.reverse()),this.pushStack(n)}});var w=/[^\x20\t\r\n\f]+/g;function u(e){return e}function oe(e){throw e}function re(e,t,n,i){var o;try{e&&b(o=e.promise)?o.call(e).done(t).fail(n):e&&b(o=e.then)?o.call(e,t,n):t.apply(void 0,[e].slice(i))}catch(e){n.apply(void 0,[e])}}P.Callbacks=function(i){var e,n;i="string"==typeof i?(e=i,n={},P.each(e.match(w)||[],function(e,t){n[t]=!0}),n):P.extend({},i);function o(){for(a=a||i.once,s=r=!0;c.length;u=-1)for(t=c.shift();++u<l.length;)!1===l[u].apply(t[0],t[1])&&i.stopOnFalse&&(u=l.length,t=!1);i.memory||(t=!1),r=!1,a&&(l=t?[]:"")}var r,t,s,a,l=[],c=[],u=-1,d={add:function(){return l&&(t&&!r&&(u=l.length-1,c.push(t)),function n(e){P.each(e,function(e,t){b(t)?i.unique&&d.has(t)||l.push(t):t&&t.length&&"string"!==p(t)&&n(t)})}(arguments),t&&!r&&o()),this},remove:function(){return P.each(arguments,function(e,t){for(var n;-1<(n=P.inArray(t,l,n));)l.splice(n,1),n<=u&&u--}),this},has:function(e){return e?-1<P.inArray(e,l):0<l.length},empty:function(){return l=l&&[],this},disable:function(){return a=c=[],l=t="",this},disabled:function(){return!l},lock:function(){return a=c=[],t||r||(l=t=""),this},locked:function(){return!!a},fireWith:function(e,t){return a||(t=[e,(t=t||[]).slice?t.slice():t],c.push(t),r||o()),this},fire:function(){return d.fireWith(this,arguments),this},fired:function(){return!!s}};return d},P.extend({Deferred:function(e){var r=[["notify","progress",P.Callbacks("memory"),P.Callbacks("memory"),2],["resolve","done",P.Callbacks("once memory"),P.Callbacks("once memory"),0,"resolved"],["reject","fail",P.Callbacks("once memory"),P.Callbacks("once memory"),1,"rejected"]],o="pending",s={state:function(){return o},always:function(){return a.done(arguments).fail(arguments),this},catch:function(e){return s.then(null,e)},pipe:function(){var o=arguments;return P.Deferred(function(i){P.each(r,function(e,t){var n=b(o[t[4]])&&o[t[4]];a[t[1]](function(){var e=n&&n.apply(this,arguments);e&&b(e.promise)?e.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[t[0]+"With"](this,n?[e]:arguments)})}),o=null}).promise()},then:function(t,n,i){var l=0;function c(o,r,s,a){return function(){function e(){var e,t;if(!(o<l)){if((e=s.apply(n,i))===r.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"===_typeof(e)||"function"==typeof e)&&e.then,b(t)?a?t.call(e,c(l,r,u,a),c(l,r,oe,a)):(l++,t.call(e,c(l,r,u,a),c(l,r,oe,a),c(l,r,u,r.notifyWith))):(s!==u&&(n=void 0,i=[e]),(a||r.resolveWith)(n,i))}}var n=this,i=arguments,t=a?e:function(){try{e()}catch(e){P.Deferred.exceptionHook&&P.Deferred.exceptionHook(e,t.stackTrace),l<=o+1&&(s!==oe&&(n=void 0,i=[e]),r.rejectWith(n,i))}};o?t():(P.Deferred.getStackHook&&(t.stackTrace=P.Deferred.getStackHook()),S.setTimeout(t))}}return P.Deferred(function(e){r[0][3].add(c(0,e,b(i)?i:u,e.notifyWith)),r[1][3].add(c(0,e,b(t)?t:u)),r[2][3].add(c(0,e,b(n)?n:oe))}).promise()},promise:function(e){return null!=e?P.extend(e,s):s}},a={};return P.each(r,function(e,t){var n=t[2],i=t[5];s[t[1]]=n.add,i&&n.add(function(){o=i},r[3-e][2].disable,r[3-e][3].disable,r[0][2].lock,r[0][3].lock),n.add(t[3].fire),a[t[0]]=function(){return a[t[0]+"With"](this===a?void 0:this,arguments),this},a[t[0]+"With"]=n.fireWith}),s.promise(a),e&&e.call(a,a),a},when:function(e){function t(t){return function(e){o[t]=this,r[t]=1<arguments.length?a.call(arguments):e,--n||s.resolveWith(o,r)}}var n=arguments.length,i=n,o=Array(i),r=a.call(arguments),s=P.Deferred();if(n<=1&&(re(e,s.done(t(i)).resolve,s.reject,!n),"pending"===s.state()||b(r[i]&&r[i].then)))return s.then();for(;i--;)re(r[i],t(i),s.reject);return s.promise()}});var se=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/,ae=(P.Deferred.exceptionHook=function(e,t){S.console&&S.console.warn&&e&&se.test(e.name)&&S.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},P.readyException=function(e){S.setTimeout(function(){throw e})},P.Deferred());function le(){x.removeEventListener("DOMContentLoaded",le),S.removeEventListener("load",le),P.ready()}P.fn.ready=function(e){return ae.then(e).catch(function(e){P.readyException(e)}),this},P.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--P.readyWait:P.isReady)||(P.isReady=!0)!==e&&0<--P.readyWait||ae.resolveWith(x,[P])}}),P.ready.then=ae.then,"complete"===x.readyState||"loading"!==x.readyState&&!x.documentElement.doScroll?S.setTimeout(P.ready):(x.addEventListener("DOMContentLoaded",le),S.addEventListener("load",le));function d(e,t,n,i,o,r,s){var a=0,l=e.length,c=null==n;if("object"===p(n))for(a in o=!0,n)d(e,t,a,n[a],!0,r,s);else if(void 0!==i&&(o=!0,b(i)||(s=!0),t=c?s?(t.call(e,i),null):(c=t,function(e,t,n){return c.call(P(e),n)}):t))for(;a<l;a++)t(e[a],n,s?i:i.call(e[a],a,t(e[a],n)));return o?e:c?t.call(e):l?t(e[0],n):r}var ce=/^-ms-/,ue=/-([a-z])/g;function de(e,t){return t.toUpperCase()}function y(e){return e.replace(ce,"ms-").replace(ue,de)}function m(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType}function he(){this.expando=P.expando+he.uid++}he.uid=1,he.prototype={cache:function(e){var t=e[this.expando];return t||(t={},m(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var i,o=this.cache(e);if("string"==typeof t)o[y(t)]=n;else for(i in t)o[y(i)]=t[i];return o},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][y(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,i=e[this.expando];if(void 0!==i){if(void 0!==t){n=(t=Array.isArray(t)?t.map(y):(t=y(t))in i?[t]:t.match(w)||[]).length;for(;n--;)delete i[t[n]]}void 0!==t&&!P.isEmptyObject(i)||(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){e=e[this.expando];return void 0!==e&&!P.isEmptyObject(e)}};var T=new he,c=new he,fe=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,pe=/[A-Z]/g;function ge(e,t,n){var i,o;if(void 0===n&&1===e.nodeType)if(i="data-"+t.replace(pe,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(i))){try{n="true"===(o=n)||"false"!==o&&("null"===o?null:o===+o+""?+o:fe.test(o)?JSON.parse(o):o)}catch(e){}c.set(e,t,n)}else n=void 0;return n}P.extend({hasData:function(e){return c.hasData(e)||T.hasData(e)},data:function(e,t,n){return c.access(e,t,n)},removeData:function(e,t){c.remove(e,t)},_data:function(e,t,n){return T.access(e,t,n)},_removeData:function(e,t){T.remove(e,t)}}),P.fn.extend({data:function(n,e){var t,i,o,r=this[0],s=r&&r.attributes;if(void 0!==n)return"object"===_typeof(n)?this.each(function(){c.set(this,n)}):d(this,function(e){var t;if(r&&void 0===e)return void 0!==(t=c.get(r,n))||void 0!==(t=ge(r,n))?t:void 0;this.each(function(){c.set(this,n,e)})},null,e,1<arguments.length,null,!0);if(this.length&&(o=c.get(r),1===r.nodeType&&!T.get(r,"hasDataAttrs"))){for(t=s.length;t--;)s[t]&&0===(i=s[t].name).indexOf("data-")&&(i=y(i.slice(5)),ge(r,i,o[i]));T.set(r,"hasDataAttrs",!0)}return o},removeData:function(e){return this.each(function(){c.remove(this,e)})}}),P.extend({queue:function(e,t,n){var i;if(e)return i=T.get(e,t=(t||"fx")+"queue"),n&&(!i||Array.isArray(n)?i=T.access(e,t,P.makeArray(n)):i.push(n)),i||[]},dequeue:function(e,t){t=t||"fx";var n=P.queue(e,t),i=n.length,o=n.shift(),r=P._queueHooks(e,t);"inprogress"===o&&(o=n.shift(),i--),o&&("fx"===t&&n.unshift("inprogress"),delete r.stop,o.call(e,function(){P.dequeue(e,t)},r)),!i&&r&&r.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return T.get(e,n)||T.access(e,n,{empty:P.Callbacks("once memory").add(function(){T.remove(e,[t+"queue",n])})})}}),P.fn.extend({queue:function(t,n){var e=2;return"string"!=typeof t&&(n=t,t="fx",e--),arguments.length<e?P.queue(this[0],t):void 0===n?this:this.each(function(){var e=P.queue(this,t,n);P._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&P.dequeue(this,t)})},dequeue:function(e){return this.each(function(){P.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function n(){--o||r.resolveWith(s,[s])}var i,o=1,r=P.Deferred(),s=this,a=this.length;for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";a--;)(i=T.get(s[a],e+"queueHooks"))&&i.empty&&(o++,i.empty.add(n));return n(),r.promise(t)}});function ve(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&C(e)&&"none"===P.css(e,"display")}var e=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,me=new RegExp("^(?:([+-])=|)("+e+")([a-z%]*)$","i"),h=["Top","Right","Bottom","Left"],A=x.documentElement,C=function(e){return P.contains(e.ownerDocument,e)},be={composed:!0};A.getRootNode&&(C=function(e){return P.contains(e.ownerDocument,e)||e.getRootNode(be)===e.ownerDocument});function ye(e,t,n,i){var o,r,s=20,a=i?function(){return i.cur()}:function(){return P.css(e,t,"")},l=a(),c=n&&n[3]||(P.cssNumber[t]?"":"px"),u=e.nodeType&&(P.cssNumber[t]||"px"!==c&&+l)&&me.exec(P.css(e,t));if(u&&u[3]!==c){for(c=c||u[3],u=+(l/=2)||1;s--;)P.style(e,t,u+c),(1-r)*(1-(r=a()/l||.5))<=0&&(s=0),u/=r;P.style(e,t,(u*=2)+c),n=n||[]}return n&&(u=+u||+l||0,o=n[1]?u+(n[1]+1)*n[2]:+n[2],i&&(i.unit=c,i.start=u,i.end=o)),o}var Te={};function M(e,t){for(var n,i,o,r,s,a=[],l=0,c=e.length;l<c;l++)(i=e[l]).style&&(n=i.style.display,t?("none"===n&&(a[l]=T.get(i,"display")||null,a[l]||(i.style.display="")),""===i.style.display&&ve(i)&&(a[l]=(s=r=void 0,r=(o=i).ownerDocument,o=o.nodeName,(s=Te[o])||(r=r.body.appendChild(r.createElement(o)),s=P.css(r,"display"),r.parentNode.removeChild(r),Te[o]=s="none"===s?"block":s),s))):"none"!==n&&(a[l]="none",T.set(i,"display",n)));for(l=0;l<c;l++)null!=a[l]&&(e[l].style.display=a[l]);return e}P.fn.extend({show:function(){return M(this,!0)},hide:function(){return M(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){ve(this)?P(this).show():P(this).hide()})}});var Se=/^(?:checkbox|radio)$/i,xe=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,Pe=/^$|^module$|\/(?:java|ecma)script/i,E=(B=x.createDocumentFragment().appendChild(x.createElement("div")),(r=x.createElement("input")).setAttribute("type","radio"),r.setAttribute("checked","checked"),r.setAttribute("name","t"),B.appendChild(r),v.checkClone=B.cloneNode(!0).cloneNode(!0).lastChild.checked,B.innerHTML="<textarea>x</textarea>",v.noCloneChecked=!!B.cloneNode(!0).lastChild.defaultValue,B.innerHTML="<option></option>",v.option=!!B.lastChild,{thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]});function k(e,t){var n=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&l(e,t)?P.merge([e],n):n}function we(e,t){for(var n=0,i=e.length;n<i;n++)T.set(e[n],"globalEval",!t||T.get(t[n],"globalEval"))}E.tbody=E.tfoot=E.colgroup=E.caption=E.thead,E.th=E.td,v.option||(E.optgroup=E.option=[1,"<select multiple='multiple'>","</select>"]);var Ae=/<|&#?\w+;/;function Ce(e,t,n,i,o){for(var r,s,a,l,c,u=t.createDocumentFragment(),d=[],h=0,f=e.length;h<f;h++)if((r=e[h])||0===r)if("object"===p(r))P.merge(d,r.nodeType?[r]:r);else if(Ae.test(r)){for(s=s||u.appendChild(t.createElement("div")),a=(xe.exec(r)||["",""])[1].toLowerCase(),a=E[a]||E._default,s.innerHTML=a[1]+P.htmlPrefilter(r)+a[2],c=a[0];c--;)s=s.lastChild;P.merge(d,s.childNodes),(s=u.firstChild).textContent=""}else d.push(t.createTextNode(r));for(u.textContent="",h=0;r=d[h++];)if(i&&-1<P.inArray(r,i))o&&o.push(r);else if(l=C(r),s=k(u.appendChild(r),"script"),l&&we(s),n)for(c=0;r=s[c++];)Pe.test(r.type||"")&&n.push(r);return u}var Me=/^([^.]*)(?:\.(.+)|)/;function n(){return!0}function f(){return!1}function Ee(e,t){return e===function(){try{return x.activeElement}catch(e){}}()==("focus"===t)}function ke(e,t,n,i,o,r){var s,a;if("object"===_typeof(t)){for(a in"string"!=typeof n&&(i=i||n,n=void 0),t)ke(e,a,n,i,t[a],r);return e}if(null==i&&null==o?(o=n,i=n=void 0):null==o&&("string"==typeof n?(o=i,i=void 0):(o=i,i=n,n=void 0)),!1===o)o=f;else if(!o)return e;return 1===r&&(s=o,(o=function(e){return P().off(e),s.apply(this,arguments)}).guid=s.guid||(s.guid=P.guid++)),e.each(function(){P.event.add(this,t,o,i,n)})}function Ge(e,o,r){r?(T.set(e,o,!1),P.event.add(e,o,{namespace:!1,handler:function(e){var t,n,i=T.get(this,o);if(1&e.isTrigger&&this[o]){if(i.length)(P.event.special[o]||{}).delegateType&&e.stopPropagation();else if(i=a.call(arguments),T.set(this,o,i),t=r(this,o),this[o](),i!==(n=T.get(this,o))||t?T.set(this,o,!1):n={},i!==n)return e.stopImmediatePropagation(),e.preventDefault(),n&&n.value}else i.length&&(T.set(this,o,{value:P.event.trigger(P.extend(i[0],P.Event.prototype),i.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===T.get(e,o)&&P.event.add(e,o,n)}P.event={global:{},add:function(t,e,n,i,o){var r,s,a,l,c,u,d,h,f,p=T.get(t);if(m(t))for(n.handler&&(n=(r=n).handler,o=r.selector),o&&P.find.matchesSelector(A,o),n.guid||(n.guid=P.guid++),a=(a=p.events)||(p.events=Object.create(null)),s=(s=p.handle)||(p.handle=function(e){return void 0!==P&&P.event.triggered!==e.type?P.event.dispatch.apply(t,arguments):void 0}),l=(e=(e||"").match(w)||[""]).length;l--;)d=f=(h=Me.exec(e[l])||[])[1],h=(h[2]||"").split(".").sort(),d&&(c=P.event.special[d]||{},d=(o?c.delegateType:c.bindType)||d,c=P.event.special[d]||{},f=P.extend({type:d,origType:f,data:i,handler:n,guid:n.guid,selector:o,needsContext:o&&P.expr.match.needsContext.test(o),namespace:h.join(".")},r),(u=a[d])||((u=a[d]=[]).delegateCount=0,c.setup&&!1!==c.setup.call(t,i,h,s)||t.addEventListener&&t.addEventListener(d,s)),c.add&&(c.add.call(t,f),f.handler.guid||(f.handler.guid=n.guid)),o?u.splice(u.delegateCount++,0,f):u.push(f),P.event.global[d]=!0)},remove:function(e,t,n,i,o){var r,s,a,l,c,u,d,h,f,p,g,v=T.hasData(e)&&T.get(e);if(v&&(l=v.events)){for(c=(t=(t||"").match(w)||[""]).length;c--;)if(f=g=(a=Me.exec(t[c])||[])[1],p=(a[2]||"").split(".").sort(),f){for(d=P.event.special[f]||{},h=l[f=(i?d.delegateType:d.bindType)||f]||[],a=a[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),s=r=h.length;r--;)u=h[r],!o&&g!==u.origType||n&&n.guid!==u.guid||a&&!a.test(u.namespace)||i&&i!==u.selector&&("**"!==i||!u.selector)||(h.splice(r,1),u.selector&&h.delegateCount--,d.remove&&d.remove.call(e,u));s&&!h.length&&(d.teardown&&!1!==d.teardown.call(e,p,v.handle)||P.removeEvent(e,f,v.handle),delete l[f])}else for(f in l)P.event.remove(e,f+t[c],n,i,!0);P.isEmptyObject(l)&&T.remove(e,"handle events")}},dispatch:function(e){var t,n,i,o,r,s=new Array(arguments.length),a=P.event.fix(e),e=(T.get(this,"events")||Object.create(null))[a.type]||[],l=P.event.special[a.type]||{};for(s[0]=a,t=1;t<arguments.length;t++)s[t]=arguments[t];if(a.delegateTarget=this,!l.preDispatch||!1!==l.preDispatch.call(this,a)){for(r=P.event.handlers.call(this,a,e),t=0;(i=r[t++])&&!a.isPropagationStopped();)for(a.currentTarget=i.elem,n=0;(o=i.handlers[n++])&&!a.isImmediatePropagationStopped();)a.rnamespace&&!1!==o.namespace&&!a.rnamespace.test(o.namespace)||(a.handleObj=o,a.data=o.data,void 0!==(o=((P.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,s))&&!1===(a.result=o)&&(a.preventDefault(),a.stopPropagation()));return l.postDispatch&&l.postDispatch.call(this,a),a.result}},handlers:function(e,t){var n,i,o,r,s,a=[],l=t.delegateCount,c=e.target;if(l&&c.nodeType&&!("click"===e.type&&1<=e.button))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==e.type||!0!==c.disabled)){for(r=[],s={},n=0;n<l;n++)void 0===s[o=(i=t[n]).selector+" "]&&(s[o]=i.needsContext?-1<P(o,this).index(c):P.find(o,this,null,[c]).length),s[o]&&r.push(i);r.length&&a.push({elem:c,handlers:r})}return c=this,l<t.length&&a.push({elem:c,handlers:t.slice(l)}),a},addProp:function(t,e){Object.defineProperty(P.Event.prototype,t,{enumerable:!0,configurable:!0,get:b(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[P.expando]?e:new P.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){e=this||e;return Se.test(e.type)&&e.click&&l(e,"input")&&Ge(e,"click",n),!1},trigger:function(e){e=this||e;return Se.test(e.type)&&e.click&&l(e,"input")&&Ge(e,"click"),!0},_default:function(e){e=e.target;return Se.test(e.type)&&e.click&&l(e,"input")&&T.get(e,"click")||l(e,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},P.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},P.Event=function(e,t){if(!(this instanceof P.Event))return new P.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?n:f,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&P.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[P.expando]=!0},P.Event.prototype={constructor:P.Event,isDefaultPrevented:f,isPropagationStopped:f,isImmediatePropagationStopped:f,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=n,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=n,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=n,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},P.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},P.event.addProp),P.each({focus:"focusin",blur:"focusout"},function(t,e){P.event.special[t]={setup:function(){return Ge(this,t,Ee),!1},trigger:function(){return Ge(this,t),!0},_default:function(e){return T.get(e.target,t)},delegateType:e}}),P.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,o){P.event.special[e]={delegateType:o,bindType:o,handle:function(e){var t,n=e.relatedTarget,i=e.handleObj;return n&&(n===this||P.contains(this,n))||(e.type=i.origType,t=i.handler.apply(this,arguments),e.type=o),t}}}),P.fn.extend({on:function(e,t,n,i){return ke(this,e,t,n,i)},one:function(e,t,n,i){return ke(this,e,t,n,i,1)},off:function(e,t,n){var i,o;if(e&&e.preventDefault&&e.handleObj)i=e.handleObj,P(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler);else{if("object"!==_typeof(e))return!1!==t&&"function"!=typeof t||(n=t,t=void 0),!1===n&&(n=f),this.each(function(){P.event.remove(this,e,n,t)});for(o in e)this.off(o,t,e[o])}return this}});var He=/<script|<style|<link/i,Be=/checked\s*(?:[^=]|=\s*.checked.)/i,Ie=/^\s*<!\[CDATA\[|\]\]>\s*$/g;function Le(e,t){return l(e,"table")&&l(11!==t.nodeType?t:t.firstChild,"tr")&&P(e).children("tbody")[0]||e}function De(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Oe(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Ne(e,t){var n,i,o,r;if(1===t.nodeType){if(T.hasData(e)&&(r=T.get(e).events))for(o in T.remove(t,"handle events"),r)for(n=0,i=r[o].length;n<i;n++)P.event.add(t,o,r[o][n]);c.hasData(e)&&(e=c.access(e),e=P.extend({},e),c.set(t,e))}}function G(n,i,o,r){i=R(i);var e,t,s,a,l,c,u=0,d=n.length,h=d-1,f=i[0],p=b(f);if(p||1<d&&"string"==typeof f&&!v.checkClone&&Be.test(f))return n.each(function(e){var t=n.eq(e);p&&(i[0]=f.call(this,e,t.html())),G(t,i,o,r)});if(d&&(t=(e=Ce(i,n[0].ownerDocument,!1,n,r)).firstChild,1===e.childNodes.length&&(e=t),t||r)){for(a=(s=P.map(k(e,"script"),De)).length;u<d;u++)l=e,u!==h&&(l=P.clone(l,!0,!0),a&&P.merge(s,k(l,"script"))),o.call(n[u],l,u);if(a)for(c=s[s.length-1].ownerDocument,P.map(s,Oe),u=0;u<a;u++)l=s[u],Pe.test(l.type||"")&&!T.access(l,"globalEval")&&P.contains(c,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?P._evalUrl&&!l.noModule&&P._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")},c):q(l.textContent.replace(Ie,""),l,c))}return n}function Re(e,t,n){for(var i,o=t?P.filter(t,e):e,r=0;null!=(i=o[r]);r++)n||1!==i.nodeType||P.cleanData(k(i)),i.parentNode&&(n&&C(i)&&we(k(i,"script")),i.parentNode.removeChild(i));return e}P.extend({htmlPrefilter:function(e){return e},clone:function(e,t,n){var i,o,r,s,a,l,c,u=e.cloneNode(!0),d=C(e);if(!(v.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||P.isXMLDoc(e)))for(s=k(u),i=0,o=(r=k(e)).length;i<o;i++)a=r[i],l=s[i],c=void 0,"input"===(c=l.nodeName.toLowerCase())&&Se.test(a.type)?l.checked=a.checked:"input"!==c&&"textarea"!==c||(l.defaultValue=a.defaultValue);if(t)if(n)for(r=r||k(e),s=s||k(u),i=0,o=r.length;i<o;i++)Ne(r[i],s[i]);else Ne(e,u);return 0<(s=k(u,"script")).length&&we(s,!d&&k(e,"script")),u},cleanData:function(e){for(var t,n,i,o=P.event.special,r=0;void 0!==(n=e[r]);r++)if(m(n)){if(t=n[T.expando]){if(t.events)for(i in t.events)o[i]?P.event.remove(n,i):P.removeEvent(n,i,t.handle);n[T.expando]=void 0}n[c.expando]&&(n[c.expando]=void 0)}}}),P.fn.extend({detach:function(e){return Re(this,e,!0)},remove:function(e){return Re(this,e)},text:function(e){return d(this,function(e){return void 0===e?P.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return G(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Le(this,e).appendChild(e)})},prepend:function(){return G(this,arguments,function(e){var t;1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(t=Le(this,e)).insertBefore(e,t.firstChild)})},before:function(){return G(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return G(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(P.cleanData(k(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return P.clone(this,e,t)})},html:function(e){return d(this,function(e){var t=this[0]||{},n=0,i=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!He.test(e)&&!E[(xe.exec(e)||["",""])[1].toLowerCase()]){e=P.htmlPrefilter(e);try{for(;n<i;n++)1===(t=this[n]||{}).nodeType&&(P.cleanData(k(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return G(this,arguments,function(e){var t=this.parentNode;P.inArray(this,n)<0&&(P.cleanData(k(this)),t&&t.replaceChild(e,this))},n)}}),P.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,s){P.fn[e]=function(e){for(var t,n=[],i=P(e),o=i.length-1,r=0;r<=o;r++)t=r===o?this:this.clone(!0),P(i[r])[s](t),_.apply(n,t.get());return this.pushStack(n)}});function _e(e){var t=e.ownerDocument.defaultView;return(t=t&&t.opener?t:S).getComputedStyle(e)}function $e(e,t,n){var i,o={};for(i in t)o[i]=e.style[i],e.style[i]=t[i];for(i in n=n.call(e),t)e.style[i]=o[i];return n}var Fe,Ve,We,Xe,ze,je,qe,o,Ue=new RegExp("^("+e+")(?!px)[a-z%]+$","i"),Ke=/^--/,Ye=new RegExp(h.join("|"),"i"),r="[\\x20\\t\\r\\n\\f]",Qe=new RegExp("^"+r+"+|((?:^|[^\\\\])(?:\\\\.)*)"+r+"+$","g");function Ze(){var e;o&&(qe.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",o.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",A.appendChild(qe).appendChild(o),e=S.getComputedStyle(o),Fe="1%"!==e.top,je=12===Je(e.marginLeft),o.style.right="60%",Xe=36===Je(e.right),Ve=36===Je(e.width),o.style.position="absolute",We=12===Je(o.offsetWidth/3),A.removeChild(qe),o=null)}function Je(e){return Math.round(parseFloat(e))}function et(e,t,n){var i,o=Ke.test(t),r=e.style;return(n=n||_e(e))&&(i=n.getPropertyValue(t)||n[t],""!==(i=o?i.replace(Qe,"$1"):i)||C(e)||(i=P.style(e,t)),!v.pixelBoxStyles()&&Ue.test(i)&&Ye.test(t)&&(o=r.width,e=r.minWidth,t=r.maxWidth,r.minWidth=r.maxWidth=r.width=i,i=n.width,r.width=o,r.minWidth=e,r.maxWidth=t)),void 0!==i?i+"":i}function tt(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}qe=x.createElement("div"),(o=x.createElement("div")).style&&(o.style.backgroundClip="content-box",o.cloneNode(!0).style.backgroundClip="",v.clearCloneStyle="content-box"===o.style.backgroundClip,P.extend(v,{boxSizingReliable:function(){return Ze(),Ve},pixelBoxStyles:function(){return Ze(),Xe},pixelPosition:function(){return Ze(),Fe},reliableMarginLeft:function(){return Ze(),je},scrollboxSize:function(){return Ze(),We},reliableTrDimensions:function(){var e,t,n;return null==ze&&(e=x.createElement("table"),t=x.createElement("tr"),n=x.createElement("div"),e.style.cssText="position:absolute;left:-11111px;border-collapse:separate",t.style.cssText="border:1px solid",t.style.height="1px",n.style.height="9px",n.style.display="block",A.appendChild(e).appendChild(t).appendChild(n),n=S.getComputedStyle(t),ze=parseInt(n.height,10)+parseInt(n.borderTopWidth,10)+parseInt(n.borderBottomWidth,10)===t.offsetHeight,A.removeChild(e)),ze}}));var nt=["Webkit","Moz","ms"],it=x.createElement("div").style,ot={};function rt(e){var t=P.cssProps[e]||ot[e];return t||(e in it?e:ot[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),n=nt.length;n--;)if((e=nt[n]+t)in it)return e}(e)||e)}var st=/^(none|table(?!-c[ea]).+)/,at={position:"absolute",visibility:"hidden",display:"block"},lt={letterSpacing:"0",fontWeight:"400"};function ct(e,t,n){var i=me.exec(t);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):t}function ut(e,t,n,i,o,r){var s="width"===t?1:0,a=0,l=0;if(n===(i?"border":"content"))return 0;for(;s<4;s+=2)"margin"===n&&(l+=P.css(e,n+h[s],!0,o)),i?("content"===n&&(l-=P.css(e,"padding"+h[s],!0,o)),"margin"!==n&&(l-=P.css(e,"border"+h[s]+"Width",!0,o))):(l+=P.css(e,"padding"+h[s],!0,o),"padding"!==n?l+=P.css(e,"border"+h[s]+"Width",!0,o):a+=P.css(e,"border"+h[s]+"Width",!0,o));return!i&&0<=r&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-r-l-a-.5))||0),l}function dt(e,t,n){var i=_e(e),o=(!v.boxSizingReliable()||n)&&"border-box"===P.css(e,"boxSizing",!1,i),r=o,s=et(e,t,i),a="offset"+t[0].toUpperCase()+t.slice(1);if(Ue.test(s)){if(!n)return s;s="auto"}return(!v.boxSizingReliable()&&o||!v.reliableTrDimensions()&&l(e,"tr")||"auto"===s||!parseFloat(s)&&"inline"===P.css(e,"display",!1,i))&&e.getClientRects().length&&(o="border-box"===P.css(e,"boxSizing",!1,i),(r=a in e)&&(s=e[a])),(s=parseFloat(s)||0)+ut(e,t,n||(o?"border":"content"),r,i,s)+"px"}function s(e,t,n,i,o){return new s.prototype.init(e,t,n,i,o)}P.extend({cssHooks:{opacity:{get:function(e,t){if(t)return""===(t=et(e,"opacity"))?"1":t}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,r,s,a=y(t),l=Ke.test(t),c=e.style;if(l||(t=rt(a)),s=P.cssHooks[t]||P.cssHooks[a],void 0===n)return s&&"get"in s&&void 0!==(o=s.get(e,!1,i))?o:c[t];"string"===(r=_typeof(n))&&(o=me.exec(n))&&o[1]&&(n=ye(e,t,o),r="number"),null!=n&&n==n&&("number"!==r||l||(n+=o&&o[3]||(P.cssNumber[a]?"":"px")),v.clearCloneStyle||""!==n||0!==t.indexOf("background")||(c[t]="inherit"),s&&"set"in s&&void 0===(n=s.set(e,n,i))||(l?c.setProperty(t,n):c[t]=n))}},css:function(e,t,n,i){var o,r=y(t);return Ke.test(t)||(t=rt(r)),"normal"===(o=void 0===(o=(r=P.cssHooks[t]||P.cssHooks[r])&&"get"in r?r.get(e,!0,n):o)?et(e,t,i):o)&&t in lt&&(o=lt[t]),(""===n||n)&&(r=parseFloat(o),!0===n||isFinite(r))?r||0:o}}),P.each(["height","width"],function(e,s){P.cssHooks[s]={get:function(e,t,n){if(t)return!st.test(P.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?dt(e,s,n):$e(e,at,function(){return dt(e,s,n)})},set:function(e,t,n){var i=_e(e),o=!v.scrollboxSize()&&"absolute"===i.position,r=(o||n)&&"border-box"===P.css(e,"boxSizing",!1,i),n=n?ut(e,s,n,r,i):0;return r&&o&&(n-=Math.ceil(e["offset"+s[0].toUpperCase()+s.slice(1)]-parseFloat(i[s])-ut(e,s,"border",!1,i)-.5)),n&&(r=me.exec(t))&&"px"!==(r[3]||"px")&&(e.style[s]=t,t=P.css(e,s)),ct(0,t,n)}}}),P.cssHooks.marginLeft=tt(v.reliableMarginLeft,function(e,t){if(t)return(parseFloat(et(e,"marginLeft"))||e.getBoundingClientRect().left-$e(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),P.each({margin:"",padding:"",border:"Width"},function(o,r){P.cssHooks[o+r]={expand:function(e){for(var t=0,n={},i="string"==typeof e?e.split(" "):[e];t<4;t++)n[o+h[t]+r]=i[t]||i[t-2]||i[0];return n}},"margin"!==o&&(P.cssHooks[o+r].set=ct)}),P.fn.extend({css:function(e,t){return d(this,function(e,t,n){var i,o,r={},s=0;if(Array.isArray(t)){for(i=_e(e),o=t.length;s<o;s++)r[t[s]]=P.css(e,t[s],!1,i);return r}return void 0!==n?P.style(e,t,n):P.css(e,t)},e,t,1<arguments.length)}}),((P.Tween=s).prototype={constructor:s,init:function(e,t,n,i,o,r){this.elem=e,this.prop=n,this.easing=o||P.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=i,this.unit=r||(P.cssNumber[n]?"":"px")},cur:function(){var e=s.propHooks[this.prop];return(e&&e.get?e:s.propHooks._default).get(this)},run:function(e){var t,n=s.propHooks[this.prop];return this.options.duration?this.pos=t=P.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),(n&&n.set?n:s.propHooks._default).set(this),this}}).init.prototype=s.prototype,(s.propHooks={_default:{get:function(e){return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(e=P.css(e.elem,e.prop,""))&&"auto"!==e?e:0},set:function(e){P.fx.step[e.prop]?P.fx.step[e.prop](e):1!==e.elem.nodeType||!P.cssHooks[e.prop]&&null==e.elem.style[rt(e.prop)]?e.elem[e.prop]=e.now:P.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=s.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},P.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},P.fx=s.prototype.init,P.fx.step={};var H,ht,B,ft=/^(?:toggle|show|hide)$/,pt=/queueHooks$/;function gt(){ht&&(!1===x.hidden&&S.requestAnimationFrame?S.requestAnimationFrame(gt):S.setTimeout(gt,P.fx.interval),P.fx.tick())}function vt(){return S.setTimeout(function(){H=void 0}),H=Date.now()}function mt(e,t){var n,i=0,o={height:e};for(t=t?1:0;i<4;i+=2-t)o["margin"+(n=h[i])]=o["padding"+n]=e;return t&&(o.opacity=o.width=e),o}function bt(e,t,n){for(var i,o=(I.tweeners[t]||[]).concat(I.tweeners["*"]),r=0,s=o.length;r<s;r++)if(i=o[r].call(n,t,e))return i}function I(o,e,t){var n,r,i,s,a,l,c,u=0,d=I.prefilters.length,h=P.Deferred().always(function(){delete f.elem}),f=function(){if(!r){for(var e=H||vt(),e=Math.max(0,p.startTime+p.duration-e),t=1-(e/p.duration||0),n=0,i=p.tweens.length;n<i;n++)p.tweens[n].run(t);if(h.notifyWith(o,[p,t,e]),t<1&&i)return e;i||h.notifyWith(o,[p,1,0]),h.resolveWith(o,[p])}return!1},p=h.promise({elem:o,props:P.extend({},e),opts:P.extend(!0,{specialEasing:{},easing:P.easing._default},t),originalProperties:e,originalOptions:t,startTime:H||vt(),duration:t.duration,tweens:[],createTween:function(e,t){t=P.Tween(o,p.opts,e,t,p.opts.specialEasing[e]||p.opts.easing);return p.tweens.push(t),t},stop:function(e){var t=0,n=e?p.tweens.length:0;if(!r){for(r=!0;t<n;t++)p.tweens[t].run(1);e?(h.notifyWith(o,[p,1,0]),h.resolveWith(o,[p,e])):h.rejectWith(o,[p,e])}return this}}),g=p.props,v=g,m=p.opts.specialEasing;for(i in v)if(a=m[s=y(i)],l=v[i],Array.isArray(l)&&(a=l[1],l=v[i]=l[0]),i!==s&&(v[s]=l,delete v[i]),(c=P.cssHooks[s])&&"expand"in c)for(i in l=c.expand(l),delete v[s],l)i in v||(v[i]=l[i],m[i]=a);else m[s]=a;for(;u<d;u++)if(n=I.prefilters[u].call(p,o,g,p.opts))return b(n.stop)&&(P._queueHooks(p.elem,p.opts.queue).stop=n.stop.bind(n)),n;return P.map(g,bt,p),b(p.opts.start)&&p.opts.start.call(o,p),p.progress(p.opts.progress).done(p.opts.done,p.opts.complete).fail(p.opts.fail).always(p.opts.always),P.fx.timer(P.extend(f,{elem:o,anim:p,queue:p.opts.queue})),p}P.Animation=P.extend(I,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return ye(n.elem,e,me.exec(t),n),n}]},tweener:function(e,t){for(var n,i=0,o=(e=b(e)?(t=e,["*"]):e.match(w)).length;i<o;i++)n=e[i],I.tweeners[n]=I.tweeners[n]||[],I.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var i,o,r,s,a,l,c,u="width"in t||"height"in t,d=this,h={},f=e.style,p=e.nodeType&&ve(e),g=T.get(e,"fxshow");for(i in n.queue||(null==(s=P._queueHooks(e,"fx")).unqueued&&(s.unqueued=0,a=s.empty.fire,s.empty.fire=function(){s.unqueued||a()}),s.unqueued++,d.always(function(){d.always(function(){s.unqueued--,P.queue(e,"fx").length||s.empty.fire()})})),t)if(o=t[i],ft.test(o)){if(delete t[i],r=r||"toggle"===o,o===(p?"hide":"show")){if("show"!==o||!g||void 0===g[i])continue;p=!0}h[i]=g&&g[i]||P.style(e,i)}if((l=!P.isEmptyObject(t))||!P.isEmptyObject(h))for(i in u&&1===e.nodeType&&(n.overflow=[f.overflow,f.overflowX,f.overflowY],null==(c=g&&g.display)&&(c=T.get(e,"display")),"none"===(u=P.css(e,"display"))&&(c?u=c:(M([e],!0),c=e.style.display||c,u=P.css(e,"display"),M([e]))),("inline"===u||"inline-block"===u&&null!=c)&&"none"===P.css(e,"float")&&(l||(d.done(function(){f.display=c}),null==c&&(u=f.display,c="none"===u?"":u)),f.display="inline-block")),n.overflow&&(f.overflow="hidden",d.always(function(){f.overflow=n.overflow[0],f.overflowX=n.overflow[1],f.overflowY=n.overflow[2]})),l=!1,h)l||(g?"hidden"in g&&(p=g.hidden):g=T.access(e,"fxshow",{display:c}),r&&(g.hidden=!p),p&&M([e],!0),d.done(function(){for(i in p||M([e]),T.remove(e,"fxshow"),h)P.style(e,i,h[i])})),l=bt(p?g[i]:0,i,d),i in g||(g[i]=l.start,p&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?I.prefilters.unshift(e):I.prefilters.push(e)}}),P.speed=function(e,t,n){var i=e&&"object"===_typeof(e)?P.extend({},e):{complete:n||!n&&t||b(e)&&e,duration:e,easing:n&&t||t&&!b(t)&&t};return P.fx.off?i.duration=0:"number"!=typeof i.duration&&(i.duration in P.fx.speeds?i.duration=P.fx.speeds[i.duration]:i.duration=P.fx.speeds._default),null!=i.queue&&!0!==i.queue||(i.queue="fx"),i.old=i.complete,i.complete=function(){b(i.old)&&i.old.call(this),i.queue&&P.dequeue(this,i.queue)},i},P.fn.extend({fadeTo:function(e,t,n,i){return this.filter(ve).css("opacity",0).show().end().animate({opacity:t},e,n,i)},animate:function(t,e,n,i){function o(){var e=I(this,P.extend({},t),s);(r||T.get(this,"finish"))&&e.stop(!0)}var r=P.isEmptyObject(t),s=P.speed(e,n,i);return o.finish=o,r||!1===s.queue?this.each(o):this.queue(s.queue,o)},stop:function(o,e,r){function s(e){var t=e.stop;delete e.stop,t(r)}return"string"!=typeof o&&(r=e,e=o,o=void 0),e&&this.queue(o||"fx",[]),this.each(function(){var e=!0,t=null!=o&&o+"queueHooks",n=P.timers,i=T.get(this);if(t)i[t]&&i[t].stop&&s(i[t]);else for(t in i)i[t]&&i[t].stop&&pt.test(t)&&s(i[t]);for(t=n.length;t--;)n[t].elem!==this||null!=o&&n[t].queue!==o||(n[t].anim.stop(r),e=!1,n.splice(t,1));!e&&r||P.dequeue(this,o)})},finish:function(s){return!1!==s&&(s=s||"fx"),this.each(function(){var e,t=T.get(this),n=t[s+"queue"],i=t[s+"queueHooks"],o=P.timers,r=n?n.length:0;for(t.finish=!0,P.queue(this,s,[]),i&&i.stop&&i.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===s&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;e<r;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),P.each(["toggle","show","hide"],function(e,i){var o=P.fn[i];P.fn[i]=function(e,t,n){return null==e||"boolean"==typeof e?o.apply(this,arguments):this.animate(mt(i,!0),e,t,n)}}),P.each({slideDown:mt("show"),slideUp:mt("hide"),slideToggle:mt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,i){P.fn[e]=function(e,t,n){return this.animate(i,e,t,n)}}),P.timers=[],P.fx.tick=function(){var e,t=0,n=P.timers;for(H=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||P.fx.stop(),H=void 0},P.fx.timer=function(e){P.timers.push(e),P.fx.start()},P.fx.interval=13,P.fx.start=function(){ht||(ht=!0,gt())},P.fx.stop=function(){ht=null},P.fx.speeds={slow:600,fast:200,_default:400},P.fn.delay=function(i,e){return i=P.fx&&P.fx.speeds[i]||i,this.queue(e=e||"fx",function(e,t){var n=S.setTimeout(e,i);t.stop=function(){S.clearTimeout(n)}})},B=x.createElement("input"),e=x.createElement("select").appendChild(x.createElement("option")),B.type="checkbox",v.checkOn=""!==B.value,v.optSelected=e.selected,(B=x.createElement("input")).value="t",B.type="radio",v.radioValue="t"===B.value;var yt,Tt=P.expr.attrHandle,St=(P.fn.extend({attr:function(e,t){return d(this,P.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){P.removeAttr(this,e)})}}),P.extend({attr:function(e,t,n){var i,o,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return void 0===e.getAttribute?P.prop(e,t,n):(1===r&&P.isXMLDoc(e)||(o=P.attrHooks[t.toLowerCase()]||(P.expr.match.bool.test(t)?yt:void 0)),void 0!==n?null===n?void P.removeAttr(e,t):o&&"set"in o&&void 0!==(i=o.set(e,n,t))?i:(e.setAttribute(t,n+""),n):!(o&&"get"in o&&null!==(i=o.get(e,t)))&&null==(i=P.find.attr(e,t))?void 0:i)},attrHooks:{type:{set:function(e,t){var n;if(!v.radioValue&&"radio"===t&&l(e,"input"))return n=e.value,e.setAttribute("type",t),n&&(e.value=n),t}}},removeAttr:function(e,t){var n,i=0,o=t&&t.match(w);if(o&&1===e.nodeType)for(;n=o[i++];)e.removeAttribute(n)}}),yt={set:function(e,t,n){return!1===t?P.removeAttr(e,n):e.setAttribute(n,n),n}},P.each(P.expr.match.bool.source.match(/\w+/g),function(e,t){var s=Tt[t]||P.find.attr;Tt[t]=function(e,t,n){var i,o,r=t.toLowerCase();return n||(o=Tt[r],Tt[r]=i,i=null!=s(e,t,n)?r:null,Tt[r]=o),i}}),/^(?:input|select|textarea|button)$/i),xt=/^(?:a|area)$/i;function L(e){return(e.match(w)||[]).join(" ")}function D(e){return e.getAttribute&&e.getAttribute("class")||""}function Pt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(w)||[]}P.fn.extend({prop:function(e,t){return d(this,P.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[P.propFix[e]||e]})}}),P.extend({prop:function(e,t,n){var i,o,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&P.isXMLDoc(e)||(t=P.propFix[t]||t,o=P.propHooks[t]),void 0!==n?o&&"set"in o&&void 0!==(i=o.set(e,n,t))?i:e[t]=n:o&&"get"in o&&null!==(i=o.get(e,t))?i:e[t]},propHooks:{tabIndex:{get:function(e){var t=P.find.attr(e,"tabindex");return t?parseInt(t,10):St.test(e.nodeName)||xt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),v.optSelected||(P.propHooks.selected={get:function(e){e=e.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(e){e=e.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),P.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){P.propFix[this.toLowerCase()]=this}),P.fn.extend({addClass:function(t){var e,n,i,o,r,s;return b(t)?this.each(function(e){P(this).addClass(t.call(this,e,D(this)))}):(e=Pt(t)).length?this.each(function(){if(i=D(this),n=1===this.nodeType&&" "+L(i)+" "){for(r=0;r<e.length;r++)o=e[r],n.indexOf(" "+o+" ")<0&&(n+=o+" ");s=L(n),i!==s&&this.setAttribute("class",s)}}):this},removeClass:function(t){var e,n,i,o,r,s;return b(t)?this.each(function(e){P(this).removeClass(t.call(this,e,D(this)))}):arguments.length?(e=Pt(t)).length?this.each(function(){if(i=D(this),n=1===this.nodeType&&" "+L(i)+" "){for(r=0;r<e.length;r++)for(o=e[r];-1<n.indexOf(" "+o+" ");)n=n.replace(" "+o+" "," ");s=L(n),i!==s&&this.setAttribute("class",s)}}):this:this.attr("class","")},toggleClass:function(t,n){var e,i,o,r,s=_typeof(t),a="string"===s||Array.isArray(t);return b(t)?this.each(function(e){P(this).toggleClass(t.call(this,e,D(this),n),n)}):"boolean"==typeof n&&a?n?this.addClass(t):this.removeClass(t):(e=Pt(t),this.each(function(){if(a)for(r=P(this),o=0;o<e.length;o++)i=e[o],r.hasClass(i)?r.removeClass(i):r.addClass(i);else void 0!==t&&"boolean"!==s||((i=D(this))&&T.set(this,"__className__",i),this.setAttribute&&this.setAttribute("class",!i&&!1!==t&&T.get(this,"__className__")||""))}))},hasClass:function(e){for(var t,n=0,i=" "+e+" ";t=this[n++];)if(1===t.nodeType&&-1<(" "+L(D(t))+" ").indexOf(i))return!0;return!1}});function wt(e){e.stopPropagation()}var At=/\r/g,Ct=(P.fn.extend({val:function(t){var n,e,i,o=this[0];return arguments.length?(i=b(t),this.each(function(e){1===this.nodeType&&(null==(e=i?t.call(this,e,P(this).val()):t)?e="":"number"==typeof e?e+="":Array.isArray(e)&&(e=P.map(e,function(e){return null==e?"":e+""})),(n=P.valHooks[this.type]||P.valHooks[this.nodeName.toLowerCase()])&&"set"in n&&void 0!==n.set(this,e,"value")||(this.value=e))})):o?(n=P.valHooks[o.type]||P.valHooks[o.nodeName.toLowerCase()])&&"get"in n&&void 0!==(e=n.get(o,"value"))?e:"string"==typeof(e=o.value)?e.replace(At,""):null==e?"":e:void 0}}),P.extend({valHooks:{option:{get:function(e){var t=P.find.attr(e,"value");return null!=t?t:L(P.text(e))}},select:{get:function(e){for(var t,n=e.options,i=e.selectedIndex,o="select-one"===e.type,r=o?null:[],s=o?i+1:n.length,a=i<0?s:o?i:0;a<s;a++)if(((t=n[a]).selected||a===i)&&!(t.disabled||t.parentNode.disabled&&l(t.parentNode,"optgroup"))){if(t=P(t).val(),o)return t;r.push(t)}return r},set:function(e,t){for(var n,i,o=e.options,r=P.makeArray(t),s=o.length;s--;)((i=o[s]).selected=-1<P.inArray(P.valHooks.option.get(i),r))&&(n=!0);return n||(e.selectedIndex=-1),r}}}}),P.each(["radio","checkbox"],function(){P.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<P.inArray(P(e).val(),t)}},v.checkOn||(P.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),v.focusin="onfocusin"in S,/^(?:focusinfocus|focusoutblur)$/),Mt=(P.extend(P.event,{trigger:function(e,t,n,i){var o,r,s,a,l,c,u,d=[n||x],h=W.call(e,"type")?e.type:e,f=W.call(e,"namespace")?e.namespace.split("."):[],p=u=r=n=n||x;if(3!==n.nodeType&&8!==n.nodeType&&!Ct.test(h+P.event.triggered)&&(-1<h.indexOf(".")&&(h=(f=h.split(".")).shift(),f.sort()),a=h.indexOf(":")<0&&"on"+h,(e=e[P.expando]?e:new P.Event(h,"object"===_typeof(e)&&e)).isTrigger=i?2:3,e.namespace=f.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:P.makeArray(t,[e]),c=P.event.special[h]||{},i||!c.trigger||!1!==c.trigger.apply(n,t))){if(!i&&!c.noBubble&&!g(n)){for(s=c.delegateType||h,Ct.test(s+h)||(p=p.parentNode);p;p=p.parentNode)d.push(p),r=p;r===(n.ownerDocument||x)&&d.push(r.defaultView||r.parentWindow||S)}for(o=0;(p=d[o++])&&!e.isPropagationStopped();)u=p,e.type=1<o?s:c.bindType||h,(l=(T.get(p,"events")||Object.create(null))[e.type]&&T.get(p,"handle"))&&l.apply(p,t),(l=a&&p[a])&&l.apply&&m(p)&&(e.result=l.apply(p,t),!1===e.result&&e.preventDefault());return e.type=h,i||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(d.pop(),t)||!m(n)||a&&b(n[h])&&!g(n)&&((r=n[a])&&(n[a]=null),P.event.triggered=h,e.isPropagationStopped()&&u.addEventListener(h,wt),n[h](),e.isPropagationStopped()&&u.removeEventListener(h,wt),P.event.triggered=void 0,r&&(n[a]=r)),e.result}},simulate:function(e,t,n){n=P.extend(new P.Event,n,{type:e,isSimulated:!0});P.event.trigger(n,null,t)}}),P.fn.extend({trigger:function(e,t){return this.each(function(){P.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return P.event.trigger(e,t,n,!0)}}),v.focusin||P.each({focus:"focusin",blur:"focusout"},function(n,i){function o(e){P.event.simulate(i,e.target,P.event.fix(e))}P.event.special[i]={setup:function(){var e=this.ownerDocument||this.document||this,t=T.access(e,i);t||e.addEventListener(n,o,!0),T.access(e,i,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=T.access(e,i)-1;t?T.access(e,i,t):(e.removeEventListener(n,o,!0),T.remove(e,i))}}}),S.location),Et={guid:Date.now()},kt=/\?/,Gt=(P.parseXML=function(e){var t,n;if(!e||"string"!=typeof e)return null;try{t=(new S.DOMParser).parseFromString(e,"text/xml")}catch(e){}return n=t&&t.getElementsByTagName("parsererror")[0],t&&!n||P.error("Invalid XML: "+(n?P.map(n.childNodes,function(e){return e.textContent}).join("\n"):e)),t},/\[\]$/),Ht=/\r?\n/g,Bt=/^(?:submit|button|image|reset|file)$/i,It=/^(?:input|select|textarea|keygen)/i;P.param=function(e,t){function n(e,t){t=b(t)?t():t,o[o.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==t?"":t)}var i,o=[];if(null==e)return"";if(Array.isArray(e)||e.jquery&&!P.isPlainObject(e))P.each(e,function(){n(this.name,this.value)});else for(i in e)!function n(i,e,o,r){if(Array.isArray(e))P.each(e,function(e,t){o||Gt.test(i)?r(i,t):n(i+"["+("object"===_typeof(t)&&null!=t?e:"")+"]",t,o,r)});else if(o||"object"!==p(e))r(i,e);else for(var t in e)n(i+"["+t+"]",e[t],o,r)}(i,e[i],t,n);return o.join("&")},P.fn.extend({serialize:function(){return P.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=P.prop(this,"elements");return e?P.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!P(this).is(":disabled")&&It.test(this.nodeName)&&!Bt.test(e)&&(this.checked||!Se.test(e))}).map(function(e,t){var n=P(this).val();return null==n?null:Array.isArray(n)?P.map(n,function(e){return{name:t.name,value:e.replace(Ht,"\r\n")}}):{name:t.name,value:n.replace(Ht,"\r\n")}}).get()}});var Lt=/%20/g,Dt=/#.*$/,Ot=/([?&])_=[^&]*/,Nt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Rt=/^(?:GET|HEAD)$/,_t=/^\/\//,$t={},Ft={},Vt="*/".concat("*"),Wt=x.createElement("a");function Xt(r){return function(e,t){"string"!=typeof e&&(t=e,e="*");var n,i=0,o=e.toLowerCase().match(w)||[];if(b(t))for(;n=o[i++];)"+"===n[0]?(n=n.slice(1)||"*",(r[n]=r[n]||[]).unshift(t)):(r[n]=r[n]||[]).push(t)}}function zt(t,i,o,r){var s={},a=t===Ft;function l(e){var n;return s[e]=!0,P.each(t[e]||[],function(e,t){t=t(i,o,r);return"string"!=typeof t||a||s[t]?a?!(n=t):void 0:(i.dataTypes.unshift(t),l(t),!1)}),n}return l(i.dataTypes[0])||!s["*"]&&l("*")}function jt(e,t){var n,i,o=P.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((o[n]?e:i=i||{})[n]=t[n]);return i&&P.extend(!0,e,i),e}Wt.href=Mt.href,P.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Mt.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Mt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Vt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":P.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?jt(jt(e,P.ajaxSettings),t):jt(P.ajaxSettings,e)},ajaxPrefilter:Xt($t),ajaxTransport:Xt(Ft),ajax:function(e,t){"object"===_typeof(e)&&(t=e,e=void 0);var l,c,u,n,d,h,f,i,p=P.ajaxSetup({},t=t||{}),g=p.context||p,v=p.context&&(g.nodeType||g.jquery)?P(g):P.event,m=P.Deferred(),b=P.Callbacks("once memory"),y=p.statusCode||{},o={},r={},s="canceled",T={readyState:0,getResponseHeader:function(e){var t;if(h){if(!n)for(n={};t=Nt.exec(u);)n[t[1].toLowerCase()+" "]=(n[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=n[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return h?u:null},setRequestHeader:function(e,t){return null==h&&(e=r[e.toLowerCase()]=r[e.toLowerCase()]||e,o[e]=t),this},overrideMimeType:function(e){return null==h&&(p.mimeType=e),this},statusCode:function(e){if(e)if(h)T.always(e[T.status]);else for(var t in e)y[t]=[y[t],e[t]];return this},abort:function(e){e=e||s;return l&&l.abort(e),a(0,e),this}};if(m.promise(T),p.url=((e||p.url||Mt.href)+"").replace(_t,Mt.protocol+"//"),p.type=t.method||t.type||p.method||p.type,p.dataTypes=(p.dataType||"*").toLowerCase().match(w)||[""],null==p.crossDomain){e=x.createElement("a");try{e.href=p.url,e.href=e.href,p.crossDomain=Wt.protocol+"//"+Wt.host!=e.protocol+"//"+e.host}catch(e){p.crossDomain=!0}}if(p.data&&p.processData&&"string"!=typeof p.data&&(p.data=P.param(p.data,p.traditional)),zt($t,p,t,T),!h){for(i in(f=P.event&&p.global)&&0==P.active++&&P.event.trigger("ajaxStart"),p.type=p.type.toUpperCase(),p.hasContent=!Rt.test(p.type),c=p.url.replace(Dt,""),p.hasContent?p.data&&p.processData&&0===(p.contentType||"").indexOf("application/x-www-form-urlencoded")&&(p.data=p.data.replace(Lt,"+")):(e=p.url.slice(c.length),p.data&&(p.processData||"string"==typeof p.data)&&(c+=(kt.test(c)?"&":"?")+p.data,delete p.data),!1===p.cache&&(c=c.replace(Ot,"$1"),e=(kt.test(c)?"&":"?")+"_="+Et.guid+++e),p.url=c+e),p.ifModified&&(P.lastModified[c]&&T.setRequestHeader("If-Modified-Since",P.lastModified[c]),P.etag[c]&&T.setRequestHeader("If-None-Match",P.etag[c])),(p.data&&p.hasContent&&!1!==p.contentType||t.contentType)&&T.setRequestHeader("Content-Type",p.contentType),T.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", "+Vt+"; q=0.01":""):p.accepts["*"]),p.headers)T.setRequestHeader(i,p.headers[i]);if(p.beforeSend&&(!1===p.beforeSend.call(g,T,p)||h))return T.abort();if(s="abort",b.add(p.complete),T.done(p.success),T.fail(p.error),l=zt(Ft,p,t,T)){if(T.readyState=1,f&&v.trigger("ajaxSend",[T,p]),h)return T;p.async&&0<p.timeout&&(d=S.setTimeout(function(){T.abort("timeout")},p.timeout));try{h=!1,l.send(o,a)}catch(e){if(h)throw e;a(-1,e)}}else a(-1,"No Transport")}return T;function a(e,t,n,i){var o,r,s,a=t;h||(h=!0,d&&S.clearTimeout(d),l=void 0,u=i||"",T.readyState=0<e?4:0,i=200<=e&&e<300||304===e,n&&(s=function(e,t,n){for(var i,o,r,s,a=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=e.mimeType||t.getResponseHeader("Content-Type"));if(i)for(o in a)if(a[o]&&a[o].test(i)){l.unshift(o);break}if(l[0]in n)r=l[0];else{for(o in n){if(!l[0]||e.converters[o+" "+l[0]]){r=o;break}s=s||o}r=r||s}if(r)return r!==l[0]&&l.unshift(r),n[r]}(p,T,n)),!i&&-1<P.inArray("script",p.dataTypes)&&P.inArray("json",p.dataTypes)<0&&(p.converters["text script"]=function(){}),s=function(e,t,n,i){var o,r,s,a,l,c={},u=e.dataTypes.slice();if(u[1])for(s in e.converters)c[s.toLowerCase()]=e.converters[s];for(r=u.shift();r;)if(e.responseFields[r]&&(n[e.responseFields[r]]=t),!l&&i&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=r,r=u.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(!(s=c[l+" "+r]||c["* "+r]))for(o in c)if((a=o.split(" "))[1]===r&&(s=c[l+" "+a[0]]||c["* "+a[0]])){!0===s?s=c[o]:!0!==c[o]&&(r=a[0],u.unshift(a[1]));break}if(!0!==s)if(s&&e.throws)t=s(t);else try{t=s(t)}catch(e){return{state:"parsererror",error:s?e:"No conversion from "+l+" to "+r}}}return{state:"success",data:t}}(p,s,T,i),i?(p.ifModified&&((n=T.getResponseHeader("Last-Modified"))&&(P.lastModified[c]=n),(n=T.getResponseHeader("etag"))&&(P.etag[c]=n)),204===e||"HEAD"===p.type?a="nocontent":304===e?a="notmodified":(a=s.state,o=s.data,i=!(r=s.error))):(r=a,!e&&a||(a="error",e<0&&(e=0))),T.status=e,T.statusText=(t||a)+"",i?m.resolveWith(g,[o,a,T]):m.rejectWith(g,[T,a,r]),T.statusCode(y),y=void 0,f&&v.trigger(i?"ajaxSuccess":"ajaxError",[T,p,i?o:r]),b.fireWith(g,[T,a]),f&&(v.trigger("ajaxComplete",[T,p]),--P.active||P.event.trigger("ajaxStop")))}},getJSON:function(e,t,n){return P.get(e,t,n,"json")},getScript:function(e,t){return P.get(e,void 0,t,"script")}}),P.each(["get","post"],function(e,o){P[o]=function(e,t,n,i){return b(t)&&(i=i||n,n=t,t=void 0),P.ajax(P.extend({url:e,type:o,dataType:i,data:t,success:n},P.isPlainObject(e)&&e))}}),P.ajaxPrefilter(function(e){for(var t in e.headers)"content-type"===t.toLowerCase()&&(e.contentType=e.headers[t]||"")}),P._evalUrl=function(e,t,n){return P.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){P.globalEval(e,t,n)}})},P.fn.extend({wrapAll:function(e){return this[0]&&(b(e)&&(e=e.call(this[0])),e=P(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(n){return b(n)?this.each(function(e){P(this).wrapInner(n.call(this,e))}):this.each(function(){var e=P(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=b(t);return this.each(function(e){P(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){P(this).replaceWith(this.childNodes)}),this}}),P.expr.pseudos.hidden=function(e){return!P.expr.pseudos.visible(e)},P.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},P.ajaxSettings.xhr=function(){try{return new S.XMLHttpRequest}catch(e){}};var qt={0:200,1223:204},Ut=P.ajaxSettings.xhr(),Kt=(v.cors=!!Ut&&"withCredentials"in Ut,v.ajax=Ut=!!Ut,P.ajaxTransport(function(o){var r,s;if(v.cors||Ut&&!o.crossDomain)return{send:function(e,t){var n,i=o.xhr();if(i.open(o.type,o.url,o.async,o.username,o.password),o.xhrFields)for(n in o.xhrFields)i[n]=o.xhrFields[n];for(n in o.mimeType&&i.overrideMimeType&&i.overrideMimeType(o.mimeType),o.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)i.setRequestHeader(n,e[n]);r=function(e){return function(){r&&(r=s=i.onload=i.onerror=i.onabort=i.ontimeout=i.onreadystatechange=null,"abort"===e?i.abort():"error"===e?"number"!=typeof i.status?t(0,"error"):t(i.status,i.statusText):t(qt[i.status]||i.status,i.statusText,"text"!==(i.responseType||"text")||"string"!=typeof i.responseText?{binary:i.response}:{text:i.responseText},i.getAllResponseHeaders()))}},i.onload=r(),s=i.onerror=i.ontimeout=r("error"),void 0!==i.onabort?i.onabort=s:i.onreadystatechange=function(){4===i.readyState&&S.setTimeout(function(){r&&s()})},r=r("abort");try{i.send(o.hasContent&&o.data||null)}catch(e){if(r)throw e}},abort:function(){r&&r()}}}),P.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),P.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return P.globalEval(e),e}}}),P.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),P.ajaxTransport("script",function(n){var i,o;if(n.crossDomain||n.scriptAttrs)return{send:function(e,t){i=P("<script>").attr(n.scriptAttrs||{}).prop({charset:n.scriptCharset,src:n.url}).on("load error",o=function(e){i.remove(),o=null,e&&t("error"===e.type?404:200,e.type)}),x.head.appendChild(i[0])},abort:function(){o&&o()}}}),[]),Yt=/(=)\?(?=&|$)|\?\?/,Qt=(P.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Kt.pop()||P.expando+"_"+Et.guid++;return this[e]=!0,e}}),P.ajaxPrefilter("json jsonp",function(e,t,n){var i,o,r,s=!1!==e.jsonp&&(Yt.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Yt.test(e.data)&&"data");if(s||"jsonp"===e.dataTypes[0])return i=e.jsonpCallback=b(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,s?e[s]=e[s].replace(Yt,"$1"+i):!1!==e.jsonp&&(e.url+=(kt.test(e.url)?"&":"?")+e.jsonp+"="+i),e.converters["script json"]=function(){return r||P.error(i+" was not called"),r[0]},e.dataTypes[0]="json",o=S[i],S[i]=function(){r=arguments},n.always(function(){void 0===o?P(S).removeProp(i):S[i]=o,e[i]&&(e.jsonpCallback=t.jsonpCallback,Kt.push(i)),r&&b(o)&&o(r[0]),r=o=void 0}),"script"}),v.createHTMLDocument=((r=x.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===r.childNodes.length),P.parseHTML=function(e,t,n){var i;return"string"!=typeof e?[]:("boolean"==typeof t&&(n=t,t=!1),t||(v.createHTMLDocument?((i=(t=x.implementation.createHTMLDocument("")).createElement("base")).href=x.location.href,t.head.appendChild(i)):t=x),i=!n&&[],(n=Q.exec(e))?[t.createElement(n[1])]:(n=Ce([e],t,i),i&&i.length&&P(i).remove(),P.merge([],n.childNodes)))},P.fn.load=function(e,t,n){var i,o,r,s=this,a=e.indexOf(" ");return-1<a&&(i=L(e.slice(a)),e=e.slice(0,a)),b(t)?(n=t,t=void 0):t&&"object"===_typeof(t)&&(o="POST"),0<s.length&&P.ajax({url:e,type:o||"GET",dataType:"html",data:t}).done(function(e){r=arguments,s.html(i?P("<div>").append(P.parseHTML(e)).find(i):e)}).always(n&&function(e,t){s.each(function(){n.apply(this,r||[e.responseText,t,e])})}),this},P.expr.pseudos.animated=function(t){return P.grep(P.timers,function(e){return t===e.elem}).length},P.offset={setOffset:function(e,t,n){var i,o,r,s,a=P.css(e,"position"),l=P(e),c={};"static"===a&&(e.style.position="relative"),r=l.offset(),i=P.css(e,"top"),s=P.css(e,"left"),a=("absolute"===a||"fixed"===a)&&-1<(i+s).indexOf("auto")?(o=(a=l.position()).top,a.left):(o=parseFloat(i)||0,parseFloat(s)||0),null!=(t=b(t)?t.call(e,n,P.extend({},r)):t).top&&(c.top=t.top-r.top+o),null!=t.left&&(c.left=t.left-r.left+a),"using"in t?t.using.call(e,c):l.css(c)}},P.fn.extend({offset:function(t){var e,n;return arguments.length?void 0===t?this:this.each(function(e){P.offset.setOffset(this,t,e)}):(n=this[0])?n.getClientRects().length?(e=n.getBoundingClientRect(),n=n.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,i=this[0],o={top:0,left:0};if("fixed"===P.css(i,"position"))t=i.getBoundingClientRect();else{for(t=this.offset(),n=i.ownerDocument,e=i.offsetParent||n.documentElement;e&&(e===n.body||e===n.documentElement)&&"static"===P.css(e,"position");)e=e.parentNode;e&&e!==i&&1===e.nodeType&&((o=P(e).offset()).top+=P.css(e,"borderTopWidth",!0),o.left+=P.css(e,"borderLeftWidth",!0))}return{top:t.top-o.top-P.css(i,"marginTop",!0),left:t.left-o.left-P.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===P.css(e,"position");)e=e.offsetParent;return e||A})}}),P.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,o){var r="pageYOffset"===o;P.fn[t]=function(e){return d(this,function(e,t,n){var i;if(g(e)?i=e:9===e.nodeType&&(i=e.defaultView),void 0===n)return i?i[o]:e[t];i?i.scrollTo(r?i.pageXOffset:n,r?n:i.pageYOffset):e[t]=n},t,e,arguments.length)}}),P.each(["top","left"],function(e,n){P.cssHooks[n]=tt(v.pixelPosition,function(e,t){if(t)return t=et(e,n),Ue.test(t)?P(e).position()[n]+"px":t})}),P.each({Height:"height",Width:"width"},function(s,a){P.each({padding:"inner"+s,content:a,"":"outer"+s},function(i,r){P.fn[r]=function(e,t){var n=arguments.length&&(i||"boolean"!=typeof e),o=i||(!0===e||!0===t?"margin":"border");return d(this,function(e,t,n){var i;return g(e)?0===r.indexOf("outer")?e["inner"+s]:e.document.documentElement["client"+s]:9===e.nodeType?(i=e.documentElement,Math.max(e.body["scroll"+s],i["scroll"+s],e.body["offset"+s],i["offset"+s],i["client"+s])):void 0===n?P.css(e,t,o):P.style(e,t,n,o)},a,n?e:void 0,n)}})}),P.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){P.fn[t]=function(e){return this.on(t,e)}}),P.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,i){return this.on(t,e,n,i)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),P.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,n){P.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}}),/^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g),Zt=(P.proxy=function(e,t){var n,i;if("string"==typeof t&&(i=e[t],t=e,e=i),b(e))return n=a.call(arguments,2),(i=function(){return e.apply(t||this,n.concat(a.call(arguments)))}).guid=e.guid=e.guid||P.guid++,i},P.holdReady=function(e){e?P.readyWait++:P.ready(!0)},P.isArray=Array.isArray,P.parseJSON=JSON.parse,P.nodeName=l,P.isFunction=b,P.isWindow=g,P.camelCase=y,P.type=p,P.now=Date.now,P.isNumeric=function(e){var t=P.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},P.trim=function(e){return null==e?"":(e+"").replace(Qt,"$1")},"function"==typeof define&&define.amd&&define("jquery",[],function(){return P}),S.jQuery),Jt=S.$;return P.noConflict=function(e){return S.$===P&&(S.$=Jt),e&&S.jQuery===P&&(S.jQuery=Zt),P},void 0===O&&(S.jQuery=S.$=P),P}),function(e,t){"object"==("undefined"==typeof exports?"undefined":_typeof(exports))&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:self).window=e.window||{})}(void 0,function(e){function O(t,e){var n,i=Object.keys(t);return Object.getOwnPropertySymbols&&(n=Object.getOwnPropertySymbols(t),e&&(n=n.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),i.push.apply(i,n)),i}function b(i){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?O(Object(o),!0).forEach(function(e){var t,n;t=i,n=o[e=e],e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n}):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(o)):O(Object(o)).forEach(function(e){Object.defineProperty(i,e,Object.getOwnPropertyDescriptor(o,e))})}return i}function h(e){return(h="function"==typeof Symbol&&"symbol"==_typeof(Symbol.iterator)?function(e){return _typeof(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":_typeof(e)})(e)}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function N(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function t(e,t,n){return t&&N(e.prototype,t),n&&N(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function n(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&R(e,t)}function r(e){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function R(e,t){return(R=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function s(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function i(n){var i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}();return function(){var e,t=r(n),t=(e=i?(e=r(this).constructor,Reflect.construct(t,arguments,e)):t.apply(this,arguments),this);if(e&&("object"==_typeof(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return s(t)}}function _(){return(_="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var i=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=r(e)););return e}(e,t);if(i)return(i=Object.getOwnPropertyDescriptor(i,t)).get?i.get.call(arguments.length<3?e:n):i.value}).apply(this,arguments)}function c(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var i,o,r=[],s=!0,a=!1;try{for(n=n.call(e);!(s=(i=n.next()).done)&&(r.push(i.value),!t||r.length!==t);s=!0);}catch(e){a=!0,o=e}finally{try{s||null==n.return||n.return()}finally{if(a)throw o}}return r}}(e,t)||l(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function y(e){return function(e){if(Array.isArray(e))return o(e)}(e)||function(){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}()||l(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(e,t){var n;if(e)return"string"==typeof e?o(e,t):"Map"===(n="Object"===(n=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:n)||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(e,t):void 0}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function x(e,t){var n,i,o,r,s="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(s)return o=!(i=!0),{s:function(){s=s.call(e)},n:function(){var e=s.next();return i=e.done,e},e:function(e){o=!0,n=e},f:function(){try{i||null==s.return||s.return()}finally{if(o)throw n}}};if(Array.isArray(e)||(s=l(e))||t&&e&&"number"==typeof e.length)return s&&(e=s),r=0,{s:t=function(){},n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function p(){for(var e=!1,t=arguments.length,n=new Array(t),i=0;i<t;i++)n[i]=arguments[i];"boolean"==typeof n[0]&&(e=n.shift());var o=n[0];if(!o||"object"!==h(o))throw new Error("extendee must be an object");for(var r=n.slice(1),s=r.length,a=0;a<s;a++){var l,c,u,d=r[a];for(l in d)d.hasOwnProperty(l)&&(c=d[l],e&&(Array.isArray(c)||g(c))?(u=Array.isArray(c)?[]:{},o[l]=p(!0,o.hasOwnProperty(l)?o[l]:u,c)):o[l]=c)}return o}function T(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1e4;return e=parseFloat(e)||0,Math.round((e+Number.EPSILON)*t)/t}function u(e){return!!(e&&"object"===h(e)&&e instanceof Element&&e!==document.body)&&!e.__Panzoom&&(t=e,n=getComputedStyle(t)["overflow-y"],i=getComputedStyle(t)["overflow-x"],n=("scroll"===n||"auto"===n)&&1<Math.abs(t.scrollHeight-t.clientHeight),i=("scroll"===i||"auto"===i)&&1<Math.abs(t.scrollWidth-t.clientWidth),n||i?e:u(e.parentNode));var t,n,i}function $(e,t){return t?Math.sqrt(Math.pow(t.clientX-e.clientX,2)+Math.pow(t.clientY-e.clientY,2)):0}function d(e,t){return t?{clientX:(e.clientX+t.clientX)/2,clientY:(e.clientY+t.clientY)/2}:e}var F,g=function(e){return"object"===h(e)&&null!==e&&e.constructor===Object&&"[object Object]"===Object.prototype.toString.call(e)},V="undefined"!=typeof window&&window.ResizeObserver||(t(j,[{key:"observe",value:function(t){var e;this.observables.some(function(e){return e.el===t})||(e={el:t,size:{height:t.clientHeight,width:t.clientWidth}},this.observables.push(e))}},{key:"unobserve",value:function(t){this.observables=this.observables.filter(function(e){return e.el!==t})}},{key:"disconnect",value:function(){this.observables=[]}},{key:"check",value:function(){var e=this.observables.filter(function(e){var t=e.el.clientHeight,n=e.el.clientWidth;if(e.size.height!==t||e.size.width!==n)return e.size.height=t,e.size.width=n,!0}).map(function(e){return e.el});0<e.length&&this.callback(e),window.requestAnimationFrame(this.boundCheck)}}]),j),f=t(function e(t){a(this,e),this.id=self.Touch&&t instanceof Touch?t.identifier:-1,this.pageX=t.pageX,this.pageY=t.pageY,this.clientX=t.clientX,this.clientY=t.clientY}),W=(t(z,[{key:"stop",value:function(){this._element.removeEventListener("mousedown",this._pointerStart,{passive:!1}),this._element.removeEventListener("touchstart",this._touchStart,{passive:!1}),this._element.removeEventListener("touchmove",this._move,{passive:!1}),this._element.removeEventListener("touchend",this._touchEnd),this._element.removeEventListener("touchcancel",this._touchEnd),window.removeEventListener("mousemove",this._move),window.removeEventListener("mouseup",this._pointerEnd)}},{key:"_triggerPointerStart",value:function(e,t){return!!this._startCallback(e,t)&&(this.currentPointers.push(e),this.startPointers.push(e),!0)}}]),z),v=(t(P,[{key:"option",value:function(e,t){e=String(e);e=e,n=this.options;var n,e=e.split(".").reduce(function(e,t){return e&&e[t]},n);if("function"==typeof e){for(var i=arguments.length,o=new Array(2<i?i-2:0),r=2;r<i;r++)o[r-2]=arguments[r];e=e.call.apply(e,[this,this].concat(o))}return void 0===e?t:e}},{key:"localize",value:function(e){var r=this,s=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[];return(e=String(e).replace(/\{\{(\w+).?(\w+)?\}\}/g,function(e,t,n){var i="";n?i=r.option("".concat(t[0]+t.toLowerCase().substring(1),".l10n.").concat(n)):t&&(i=r.option("l10n.".concat(t)));for(var i=i||e,o=0;o<s.length;o++)i=i.split(s[o][0]).join(s[o][1]);return i})).replace(/\{\{(.*)\}\}/,function(e,t){return t})}},{key:"on",value:function(e,t){var n=this;if(g(e))for(var i=0,o=Object.entries(e);i<o.length;i++){var r=o[i];this.on.apply(this,y(r))}else String(e).split(" ").forEach(function(e){e=n.events[e]=n.events[e]||[];-1==e.indexOf(t)&&e.push(t)});return this}},{key:"once",value:function(e,r){var s=this;if(g(e))for(var t=0,n=Object.entries(e);t<n.length;t++){var i=n[t];this.once.apply(this,y(i))}else String(e).split(" ").forEach(function(i){function o(){s.off(i,o);for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];r.call.apply(r,[s,s].concat(t))}o._=r,s.on(i,o)});return this}},{key:"off",value:function(e,s){var a=this;if(!g(e))return e.split(" ").forEach(function(e){var t=a.events[e];if(!t||!t.length)return a;for(var n=-1,i=0,o=t.length;i<o;i++){var r=t[i];if(r&&(r===s||r._===s)){n=i;break}}-1!=n&&t.splice(n,1)}),this;for(var t=0,n=Object.entries(e);t<n.length;t++){var i=n[t];this.off.apply(this,y(i))}}},{key:"trigger",value:function(e){for(var t=arguments.length,n=new Array(1<t?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];var o,r=x(y(this.events[e]||[]).slice());try{for(r.s();!(o=r.n()).done;){var s=o.value;if(s&&!1===s.call.apply(s,[this,this].concat(n)))return!1}}catch(e){r.e(e)}finally{r.f()}var a,l=x(y(this.events["*"]||[]).slice());try{for(l.s();!(a=l.n()).done;){var c=a.value;if(c&&!1===c.call.apply(c,[this,e,this].concat(n)))return!1}}catch(e){l.e(e)}finally{l.f()}return!0}},{key:"attachPlugins",value:function(e){for(var t={},n=0,i=Object.entries(e||{});n<i.length;n++){var o=c(i[n],2),r=o[0],o=o[1];!1===this.options[r]||this.plugins[r]||(this.options[r]=p({},o.defaults||{},this.options[r]),t[r]=new o(this))}for(var s=0,a=Object.entries(t);s<a.length;s++){var l=c(a[s],2);l[0],l[1].attach(this)}return this.plugins=Object.assign({},this.plugins,t),this}},{key:"detachPlugins",value:function(){for(var e in this.plugins){var t=void 0;(t=this.plugins[e])&&"function"==typeof t.detach&&t.detach(this)}return this.plugins={},this}}]),P),X={touch:!0,zoom:!0,pinchToZoom:!0,panOnlyZoomed:!1,lockAxis:!1,friction:.64,decelFriction:.88,zoomFriction:.74,bounceForce:.2,baseScale:1,minScale:1,maxScale:2,step:.5,textSelection:!1,click:"toggleZoom",wheel:"zoom",wheelFactor:42,wheelLimit:5,draggableClass:"is-draggable",draggingClass:"is-dragging",ratio:1},m=(n(S,v),F=i(S),t(S,[{key:"initLayout",value:function(){var e=this.$container;if(!(e instanceof HTMLElement))throw new Error("Panzoom: Container not found");var t=this.option("content")||e.querySelector(".panzoom__content");if(!t)throw new Error("Panzoom: Content not found");this.$content=t;var n=this.option("viewport")||e.querySelector(".panzoom__viewport");n||!1===this.option("wrapInner")||((n=document.createElement("div")).classList.add("panzoom__viewport"),n.append.apply(n,y(e.childNodes)),e.appendChild(n)),this.$viewport=n||t.parentNode}},{key:"resetValues",value:function(){this.updateRate=this.option("updateRate",/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)?250:24),this.container={width:0,height:0},this.viewport={width:0,height:0},this.content={origWidth:0,origHeight:0,width:0,height:0,x:this.option("x",0),y:this.option("y",0),scale:this.option("baseScale")},this.transform={x:0,y:0,scale:1},this.resetDragPosition()}},{key:"onLoad",value:function(e){this.updateMetrics(),this.panTo({scale:this.option("baseScale"),friction:0}),this.trigger("load",e)}},{key:"onClick",value:function(e){var t;e.defaultPrevented||document.activeElement&&document.activeElement.closest("[contenteditable]")||(!this.option("textSelection")||!window.getSelection().toString().length||e.target&&e.target.hasAttribute("data-fancybox-close")?(t=this.$content.getClientRects()[0],"ready"!==this.state&&(this.dragPosition.midPoint||1<Math.abs(t.top-this.dragStart.rect.top)||1<Math.abs(t.left-this.dragStart.rect.left))?(e.preventDefault(),e.stopPropagation()):!1!==this.trigger("click",e)&&this.option("zoom")&&"toggleZoom"===this.option("click")&&(e.preventDefault(),e.stopPropagation(),this.zoomWithClick(e))):e.stopPropagation())}},{key:"onWheel",value:function(e){!1!==this.trigger("wheel",e)&&this.option("zoom")&&this.option("wheel")&&this.zoomWithWheel(e)}},{key:"zoomWithWheel",value:function(e){void 0===this.changedDelta&&(this.changedDelta=0);var t=Math.max(-1,Math.min(1,-e.deltaY||-e.deltaX||e.wheelDelta||-e.detail)),n=this.content.scale,i=n*(100+t*this.option("wheelFactor"))/100,i=t<0&&Math.abs(n-this.option("minScale"))<.01||0<t&&Math.abs(n-this.option("maxScale"))<.01?(this.changedDelta+=Math.abs(t),n):(this.changedDelta=0,Math.max(Math.min(i,this.option("maxScale")),this.option("minScale")));this.changedDelta>this.option("wheelLimit")||(e.preventDefault(),i!==n&&(t=this.$content.getBoundingClientRect(),n=e.clientX-t.left,e=e.clientY-t.top,this.zoomTo(i,{x:n,y:e})))}},{key:"zoomWithClick",value:function(e){var t=this.$content.getClientRects()[0],n=e.clientX-t.left,e=e.clientY-t.top;this.toggleZoom({x:n,y:e})}},{key:"attachEvents",value:function(){var l=this,c=(this.$content.addEventListener("load",this.onLoad),this.$container.addEventListener("wheel",this.onWheel,{passive:!1}),this.$container.addEventListener("click",this.onClick,{passive:!1}),this.initObserver(),new W(this.$container,{start:function(e,t){if(!l.option("touch"))return!1;if(l.velocity.scale<0)return!1;var a=t.composedPath()[0];if(!c.currentPointers.length){if(-1!==["BUTTON","TEXTAREA","OPTION","INPUT","SELECT","VIDEO"].indexOf(a.nodeName))return!1;if(l.option("textSelection")&&function(e,t){for(var n=a.childNodes,i=document.createRange(),o=0;o<n.length;o++){var r=n[o];if(r.nodeType===Node.TEXT_NODE){i.selectNodeContents(r);var s=i.getBoundingClientRect();if(e>=s.left&&t>=s.top&&e<=s.right&&t<=s.bottom)return r}}}(e.clientX,e.clientY))return!1}return!u(a)&&!1!==l.trigger("touchStart",t)&&("mousedown"===t.type&&t.preventDefault(),l.state="pointerdown",l.resetDragPosition(),l.dragPosition.midPoint=null,l.dragPosition.time=Date.now(),!0)},move:function(e,t,n){if("pointerdown"===l.state)if(!1!==l.trigger("touchMove",n)){if(!(t.length<2&&!0===l.option("panOnlyZoomed")&&l.content.width<=l.viewport.width&&l.content.height<=l.viewport.height&&l.transform.scale<=l.option("baseScale"))&&(!(1<t.length)||l.option("zoom")&&!1!==l.option("pinchToZoom"))){var i=d(e[0],e[1]),o=d(t[0],t[1]),r=o.clientX-i.clientX,i=o.clientY-i.clientY,e=$(e[0],e[1]),s=$(t[0],t[1]),s=e&&s?s/e:1,e=(l.dragOffset.x+=r,l.dragOffset.y+=i,l.dragOffset.scale*=s,l.dragOffset.time=Date.now()-l.dragPosition.time,1===l.dragStart.scale&&l.option("lockAxis"));if(e&&!l.lockAxis){if(Math.abs(l.dragOffset.x)<6&&Math.abs(l.dragOffset.y)<6)return void n.preventDefault();var r=Math.abs(180*Math.atan2(l.dragOffset.y,l.dragOffset.x)/Math.PI);l.lockAxis=45<r&&r<135?"y":"x"}"xy"!==e&&"y"===l.lockAxis||(n.preventDefault(),n.stopPropagation(),n.stopImmediatePropagation(),l.lockAxis&&(l.dragOffset["x"===l.lockAxis?"y":"x"]=0),l.$container.classList.add(l.option("draggingClass")),l.transform.scale===l.option("baseScale")&&"y"===l.lockAxis||(l.dragPosition.x=l.dragStart.x+l.dragOffset.x),l.transform.scale===l.option("baseScale")&&"x"===l.lockAxis||(l.dragPosition.y=l.dragStart.y+l.dragOffset.y),l.dragPosition.scale=l.dragStart.scale*l.dragOffset.scale,1<t.length?(s=(i=d(c.startPointers[0],c.startPointers[1])).clientX-l.dragStart.rect.x,r=i.clientY-l.dragStart.rect.y,t=(e=l.getZoomDelta(l.content.scale*l.dragOffset.scale,s,r)).deltaX,i=e.deltaY,l.dragPosition.x-=t,l.dragPosition.y-=i,l.dragPosition.midPoint=o):l.setDragResistance(),l.transform={x:l.dragPosition.x,y:l.dragPosition.y,scale:l.dragPosition.scale},l.startAnimation())}}else n.preventDefault()},end:function(e,t){var n;"pointerdown"===l.state&&(l._dragOffset=b({},l.dragOffset),c.currentPointers.length?l.resetDragPosition():(l.state="decel",l.friction=l.option("decelFriction"),l.recalculateTransform(),l.$container.classList.remove(l.option("draggingClass")),!1!==l.trigger("touchEnd",t)&&"decel"===l.state&&(t=l.option("minScale"),l.transform.scale<t?l.zoomTo(t,{friction:.64}):(t=l.option("maxScale"),.01<l.transform.scale-t&&(e=l.dragPosition.midPoint||e,n=l.$content.getClientRects()[0],l.zoomTo(t,{friction:.64,x:e.clientX-n.left,y:e.clientY-n.top}))))))}}));this.pointerTracker=c}},{key:"initObserver",value:function(){var t=this;this.resizeObserver||(this.resizeObserver=new V(function(){t.updateTimer||(t.updateTimer=setTimeout(function(){var e=t.$container.getBoundingClientRect();e.width&&e.height&&(1<Math.abs(e.width-t.container.width)||1<Math.abs(e.height-t.container.height))&&(t.isAnimating()&&t.endAnimation(!0),t.updateMetrics(),t.panTo({x:t.content.x,y:t.content.y,scale:t.option("baseScale"),friction:0})),t.updateTimer=null},t.updateRate))}),this.resizeObserver.observe(this.$container))}},{key:"resetDragPosition",value:function(){this.lockAxis=null,this.friction=this.option("friction"),this.velocity={x:0,y:0,scale:0};var e=this.content,t=e.x,n=e.y,e=e.scale;this.dragStart={rect:this.$content.getBoundingClientRect(),x:t,y:n,scale:e},this.dragPosition=b(b({},this.dragPosition),{},{x:t,y:n,scale:e}),this.dragOffset={x:0,y:0,scale:1,time:0}}},{key:"updateMetrics",value:function(e){!0!==e&&this.trigger("beforeUpdate");var t,n=this.$container,i=this.$content,o=this.$viewport,r=i instanceof HTMLImageElement,s=this.option("zoom"),a=this.option("resizeParent",s),l=this.option("width"),c=this.option("height"),u=l||(u=i,Math.max(parseFloat(u.naturalWidth||0),parseFloat(u.width&&u.width.baseVal&&u.width.baseVal.value||0),parseFloat(u.offsetWidth||0),parseFloat(u.scrollWidth||0))),d=c||(d=i,Math.max(parseFloat(d.naturalHeight||0),parseFloat(d.height&&d.height.baseVal&&d.height.baseVal.value||0),parseFloat(d.offsetHeight||0),parseFloat(d.scrollHeight||0))),h=(Object.assign(i.style,{width:l?"".concat(l,"px"):"",height:c?"".concat(c,"px"):"",maxWidth:"",maxHeight:""}),a&&Object.assign(o.style,{width:"",height:""}),this.option("ratio")),h=(l=u=T(u*h),c=d=T(d*h),i.getBoundingClientRect()),f=o.getBoundingClientRect(),n=o==n?f:n.getBoundingClientRect(),p=Math.max(o.offsetWidth,T(f.width)),f=Math.max(o.offsetHeight,T(f.height)),g=window.getComputedStyle(o);p-=parseFloat(g.paddingLeft)+parseFloat(g.paddingRight),f-=parseFloat(g.paddingTop)+parseFloat(g.paddingBottom),this.viewport.width=p,this.viewport.height=f,s&&((.1<Math.abs(u-h.width)||.1<Math.abs(d-h.height))&&(g=function(e,t,n,i){n=Math.min(n/e||0,i/t);return{width:e*n||0,height:t*n||0}}(u,d,Math.min(u,h.width),Math.min(d,h.height)),l=T(g.width),c=T(g.height)),Object.assign(i.style,{width:"".concat(l,"px"),height:"".concat(c,"px"),transform:""})),a&&(Object.assign(o.style,{width:"".concat(l,"px"),height:"".concat(c,"px")}),this.viewport=b(b({},this.viewport),{},{width:l,height:c})),r&&s&&"function"!=typeof this.options.maxScale&&(t=this.option("maxScale"),this.options.maxScale=function(){return 0<this.content.origWidth&&0<this.content.fitWidth?this.content.origWidth/this.content.fitWidth:t}),this.content=b(b({},this.content),{},{origWidth:u,origHeight:d,fitWidth:l,fitHeight:c,width:l,height:c,scale:1,isZoomable:s}),this.container={width:n.width,height:n.height},!0!==e&&this.trigger("afterUpdate")}},{key:"zoomIn",value:function(e){this.zoomTo(this.content.scale+(e||this.option("step")))}},{key:"zoomOut",value:function(e){this.zoomTo(this.content.scale-(e||this.option("step")))}},{key:"toggleZoom",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=this.option("maxScale"),n=this.option("baseScale"),n=this.content.scale>n+.5*(t-n)?n:t;this.zoomTo(n,e)}},{key:"zoomTo",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.option("baseScale"),t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},n=t.x,n=void 0===n?null:n,t=t.y,t=void 0===t?null:t,e=Math.max(Math.min(e,this.option("maxScale")),this.option("minScale")),i=T(this.content.scale/(this.content.width/this.content.fitWidth),1e7),i=(null===n&&(n=this.content.width*i*.5),null===t&&(t=this.content.height*i*.5),this.getZoomDelta(e,n,t)),o=i.deltaX,i=i.deltaY,n=this.content.x-o,t=this.content.y-i;this.panTo({x:n,y:t,scale:e,friction:this.option("zoomFriction")})}},{key:"getZoomDelta",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,i=this.content.fitWidth*this.content.scale,o=this.content.fitHeight*this.content.scale;return{deltaX:(this.content.fitWidth*e-i)*(0<t&&i?t/i:0),deltaY:(this.content.fitHeight*e-o)*(0<n&&o?n/o:0)}}},{key:"panTo",value:function(){var e,t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},n=t.x,n=void 0===n?this.content.x:n,i=t.y,i=void 0===i?this.content.y:i,o=t.scale,r=t.friction,r=void 0===r?this.option("friction"):r,t=t.ignoreBounds,o=o||this.content.scale||1;void 0!==t&&t||(e=(t=this.getBounds(o)).boundX,t=t.boundY,e&&(n=Math.max(Math.min(n,e.to),e.from)),t&&(i=Math.max(Math.min(i,t.to),t.from))),this.friction=r,this.transform=b(b({},this.transform),{},{x:n,y:i,scale:o}),r?(this.state="panning",this.velocity={x:(1/this.friction-1)*(n-this.content.x),y:(1/this.friction-1)*(i-this.content.y),scale:(1/this.friction-1)*(o-this.content.scale)},this.startAnimation()):this.endAnimation()}},{key:"startAnimation",value:function(){var e=this;this.rAF?cancelAnimationFrame(this.rAF):this.trigger("startAnimation"),this.rAF=requestAnimationFrame(function(){return e.animate()})}},{key:"animate",value:function(){var e=this;if(this.setEdgeForce(),this.setDragForce(),this.velocity.x*=this.friction,this.velocity.y*=this.friction,this.velocity.scale*=this.friction,this.content.x+=this.velocity.x,this.content.y+=this.velocity.y,this.content.scale+=this.velocity.scale,this.isAnimating())this.setTransform();else if("pointerdown"!==this.state)return void this.endAnimation();this.rAF=requestAnimationFrame(function(){return e.animate()})}},{key:"getBounds",value:function(e){var t,n,i,o,r=this.boundX,s=this.boundY;return void 0!==r&&void 0!==s||(r={from:0,to:0},s={from:0,to:0},e=e||this.transform.scale,t=this.content.fitWidth*e,e=this.content.fitHeight*e,n=this.viewport.width,i=this.viewport.height,t<n?(o=T(.5*(n-t)),r.from=o,r.to=o):r.from=T(n-t),e<i?(s.from=o=.5*(i-e),s.to=o):s.from=T(i-e)),{boundX:r,boundY:s}}},{key:"setEdgeForce",value:function(){var e,t,n,i,o,r,s;"decel"===this.state&&(n=this.option("bounceForce"),s=(i=this.getBounds(Math.max(this.transform.scale,this.content.scale))).boundX,i=i.boundY,s&&(r=this.content.x<s.from,o=this.content.x>s.to),i&&(e=this.content.y<i.from,t=this.content.y>i.to),(r||o)&&(o=((r?s.from:s.to)-this.content.x)*n,(r=this.content.x+(this.velocity.x+o)/this.friction)>=s.from&&r<=s.to&&(o+=this.velocity.x),this.velocity.x=o,this.recalculateTransform()),(e||t)&&(r=((e?i.from:i.to)-this.content.y)*n,(s=this.content.y+(r+this.velocity.y)/this.friction)>=i.from&&s<=i.to&&(r+=this.velocity.y),this.velocity.y=r,this.recalculateTransform()))}},{key:"setDragResistance",value:function(){var e,t,n,i,o,r;"pointerdown"===this.state&&(o=(n=this.getBounds(this.dragPosition.scale)).boundX,n=n.boundY,o&&(i=this.dragPosition.x<o.from,r=this.dragPosition.x>o.to),n&&(e=this.dragPosition.y<n.from,t=this.dragPosition.y>n.to),!i&&!r||i&&r||(i=(r=i?o.from:o.to)-this.dragPosition.x,this.dragPosition.x=r-.3*i),!e&&!t||e&&t||(r=(o=e?n.from:n.to)-this.dragPosition.y,this.dragPosition.y=o-.3*r))}},{key:"setDragForce",value:function(){"pointerdown"===this.state&&(this.velocity.x=this.dragPosition.x-this.content.x,this.velocity.y=this.dragPosition.y-this.content.y,this.velocity.scale=this.dragPosition.scale-this.content.scale)}},{key:"recalculateTransform",value:function(){this.transform.x=this.content.x+this.velocity.x/(1/this.friction-1),this.transform.y=this.content.y+this.velocity.y/(1/this.friction-1),this.transform.scale=this.content.scale+this.velocity.scale/(1/this.friction-1)}},{key:"isAnimating",value:function(){return!(!this.friction||!(.05<Math.abs(this.velocity.x)||.05<Math.abs(this.velocity.y)||.05<Math.abs(this.velocity.scale)))}},{key:"setTransform",value:function(e){var t,n,i,o;e?(t=T(this.transform.x),n=T(this.transform.y),i=this.transform.scale,this.content=b(b({},this.content),{},{x:t,y:n,scale:i})):(t=T(this.content.x),n=T(this.content.y),i=this.content.scale/(this.content.width/this.content.fitWidth),this.content=b(b({},this.content),{},{x:t,y:n})),this.trigger("beforeTransform"),t=T(this.content.x),n=T(this.content.y),e&&this.option("zoom")?(e=T(this.content.fitWidth*i),o=T(this.content.fitHeight*i),this.content.width=e,this.content.height=o,this.transform=b(b({},this.transform),{},{width:e,height:o,scale:i}),Object.assign(this.$content.style,{width:"".concat(e,"px"),height:"".concat(o,"px"),maxWidth:"none",maxHeight:"none",transform:"translate3d(".concat(t,"px, ").concat(n,"px, 0) scale(1)")})):this.$content.style.transform="translate3d(".concat(t,"px, ").concat(n,"px, 0) scale(").concat(i,")"),this.trigger("afterTransform")}},{key:"endAnimation",value:function(e){cancelAnimationFrame(this.rAF),this.rAF=null,this.velocity={x:0,y:0,scale:0},this.setTransform(!0),this.state="ready",this.handleCursor(),!0!==e&&this.trigger("endAnimation")}},{key:"handleCursor",value:function(){var e=this.option("draggableClass");e&&this.option("touch")&&(1==this.option("panOnlyZoomed")&&this.content.width<=this.viewport.width&&this.content.height<=this.viewport.height&&this.transform.scale<=this.option("baseScale")?this.$container.classList.remove(e):this.$container.classList.add(e))}},{key:"detachEvents",value:function(){this.$content.removeEventListener("load",this.onLoad),this.$container.removeEventListener("wheel",this.onWheel,{passive:!1}),this.$container.removeEventListener("click",this.onClick,{passive:!1}),this.pointerTracker&&(this.pointerTracker.stop(),this.pointerTracker=null),this.resizeObserver&&(this.resizeObserver.disconnect(),this.resizeObserver=null)}},{key:"destroy",value:function(){"destroy"!==this.state&&(this.state="destroy",clearTimeout(this.updateTimer),this.updateTimer=null,cancelAnimationFrame(this.rAF),this.rAF=null,this.detachEvents(),this.detachPlugins(),this.resetDragPosition())}}]),S);function S(e){var t,n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};a(this,S),(t=F.call(this,p(!0,{},X,n))).state="init",t.$container=e;for(var i=0,o=["onLoad","onWheel","onClick"];i<o.length;i++){var r=o[i];t[r]=t[r].bind(s(t))}return t.initLayout(),t.resetValues(),t.attachPlugins(S.Plugins),t.trigger("init"),t.updateMetrics(),t.attachEvents(),t.trigger("ready"),!1===t.option("centerOnStart")?t.state="ready":t.panTo({friction:0}),e.__Panzoom=s(t),t}function P(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};a(this,P),this.options=p(!0,{},e),this.plugins=[],this.events={};for(var t=0,n=["on","once"];t<n.length;t++)for(var i=n[t],o=0,r=Object.entries(this.options[i]||{});o<r.length;o++){var s=r[o];this[i].apply(this,y(s))}}function z(e){var s=this,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},n=t.start,n=void 0===n?function(){return!0}:n,i=t.move,i=void 0===i?function(){}:i,t=t.end,t=void 0===t?function(){}:t;a(this,z),this._element=e,this.startPointers=[],this.currentPointers=[],this._pointerStart=function(e){var t;0<e.buttons&&0!==e.button||(t=new f(e),s.currentPointers.some(function(e){return e.id===t.id})||s._triggerPointerStart(t,e)&&(window.addEventListener("mousemove",s._move),window.addEventListener("mouseup",s._pointerEnd)))},this._touchStart=function(e){for(var t=0,n=Array.from(e.changedTouches||[]);t<n.length;t++){var i=n[t];s._triggerPointerStart(new f(i),e)}},this._move=function(e){var n,t=s.currentPointers.slice(),i="changedTouches"in e?Array.from(e.changedTouches).map(function(e){return new f(e)}):[new f(e)],o=[],r=x(i);try{for(r.s();!(n=r.n()).done;)!function(){var t=n.value,e=s.currentPointers.findIndex(function(e){return e.id===t.id});if(e<0)return;o.push(t),s.currentPointers[e]=t}()}catch(e){r.e(e)}finally{r.f()}s._moveCallback(t,s.currentPointers.slice(),e)},this._triggerPointerEnd=function(t,e){var n=s.currentPointers.findIndex(function(e){return e.id===t.id});return!(n<0||(s.currentPointers.splice(n,1),s.startPointers.splice(n,1),s._endCallback(t,e),0))},this._pointerEnd=function(e){0<e.buttons&&0!==e.button||s._triggerPointerEnd(new f(e),e)&&(window.removeEventListener("mousemove",s._move,{passive:!1}),window.removeEventListener("mouseup",s._pointerEnd,{passive:!1}))},this._touchEnd=function(e){for(var t=0,n=Array.from(e.changedTouches||[]);t<n.length;t++){var i=n[t];s._triggerPointerEnd(new f(i),e)}},this._startCallback=n,this._moveCallback=i,this._endCallback=t,this._element.addEventListener("mousedown",this._pointerStart,{passive:!1}),this._element.addEventListener("touchstart",this._touchStart,{passive:!1}),this._element.addEventListener("touchmove",this._move,{passive:!1}),this._element.addEventListener("touchend",this._touchEnd),this._element.addEventListener("touchcancel",this._touchEnd)}function j(e){a(this,j),this.observables=[],this.boundCheck=this.check.bind(this),this.boundCheck(),this.callback=e}m.version="4.0.31",m.Plugins={};function q(t,n){var i=0;return function(){var e=(new Date).getTime();if(!(e-i<n))return i=e,t.apply(void 0,arguments)}}t(U,[{key:"option",value:function(e){return this.carousel.option("Navigation.".concat(e))}},{key:"createButton",value:function(t){var e,n=this,i=document.createElement("button"),o=(i.setAttribute("title",this.carousel.localize("{{".concat(t.toUpperCase(),"}}"))),this.option("classNames.button")+" "+this.option("classNames.".concat(t)));return(e=i.classList).add.apply(e,y(o.split(" "))),i.setAttribute("tabindex","0"),i.innerHTML=this.carousel.localize(this.option("".concat(t,"Tpl"))),i.addEventListener("click",function(e){e.preventDefault(),e.stopPropagation(),n.carousel["slide".concat("next"===t?"Next":"Prev")]()}),i}},{key:"build",value:function(){var e;this.$container||(this.$container=document.createElement("div"),(e=this.$container.classList).add.apply(e,y(this.option("classNames.main").split(" "))),this.carousel.$container.appendChild(this.$container)),this.$next||(this.$next=this.createButton("next"),this.$container.appendChild(this.$next)),this.$prev||(this.$prev=this.createButton("prev"),this.$container.appendChild(this.$prev))}},{key:"onRefresh",value:function(){var e=this.carousel.pages.length;e<=1||1<e&&this.carousel.elemDimWidth<this.carousel.wrapDimWidth&&!Number.isInteger(this.carousel.option("slidesPerPage"))?this.cleanup():(this.build(),this.$prev.removeAttribute("disabled"),this.$next.removeAttribute("disabled"),this.carousel.option("infiniteX",this.carousel.option("infinite"))||(this.carousel.page<=0&&this.$prev.setAttribute("disabled",""),this.carousel.page>=e-1&&this.$next.setAttribute("disabled","")))}},{key:"cleanup",value:function(){this.$prev&&this.$prev.remove(),this.$prev=null,this.$next&&this.$next.remove(),this.$next=null,this.$container&&this.$container.remove(),this.$container=null}},{key:"attach",value:function(){this.carousel.on("refresh change",this.onRefresh)}},{key:"detach",value:function(){this.carousel.off("refresh change",this.onRefresh),this.cleanup()}}]);var w=U;function U(e){a(this,U),this.$container=null,this.$prev=null,this.$next=null,this.carousel=e,this.onRefresh=this.onRefresh.bind(this)}w.defaults={prevTpl:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" tabindex="-1"><path d="M15 3l-9 9 9 9"/></svg>',nextTpl:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" tabindex="-1"><path d="M9 3l9 9-9 9"/></svg>',classNames:{main:"carousel__nav",button:"carousel__button",next:"is-next",prev:"is-prev"}};t(Q,[{key:"buildList",value:function(){var e,n=this;if(!(this.carousel.pages.length<this.carousel.option("Dots.minSlideCount")))return(e=document.createElement("ol")).classList.add("carousel__dots"),e.addEventListener("click",function(e){var t;"page"in e.target.dataset&&(e.preventDefault(),e.stopPropagation(),(e=parseInt(e.target.dataset.page,10))!==(t=n.carousel).page&&(t.pages.length<3&&t.option("infinite")?t[0==e?"slidePrev":"slideNext"]():t.slideTo(e)))}),this.$list=e,this.carousel.$container.appendChild(e),this.carousel.$container.classList.add("has-dots"),e}},{key:"removeList",value:function(){this.$list&&(this.$list.parentNode.removeChild(this.$list),this.$list=null),this.carousel.$container.classList.remove("has-dots")}},{key:"rebuildDots",value:function(){var t=this,e=!!this.$list,n=this.carousel.pages.length;if(n<2)e&&this.removeList();else{e||this.buildList();var i=this.$list.children.length;if(n<i)for(var o=n;o<i;o++)this.$list.removeChild(this.$list.lastChild);else{for(var r=i;r<n;r++)!function(e){var n=document.createElement("li");n.classList.add("carousel__dot"),n.dataset.page=e,n.setAttribute("role","button"),n.setAttribute("tabindex","0"),n.setAttribute("title",t.carousel.localize("{{GOTO}}",[["%d",e+1]])),n.addEventListener("keydown",function(e){var t,e=e.code;"Enter"===e||"NumpadEnter"===e?t=n:"ArrowRight"===e?t=n.nextSibling:"ArrowLeft"===e&&(t=n.previousSibling),t&&t.click()}),t.$list.appendChild(n)}(r);this.setActiveDot()}}}},{key:"setActiveDot",value:function(){var e;this.$list&&(this.$list.childNodes.forEach(function(e){e.classList.remove("is-selected")}),(e=this.$list.childNodes[this.carousel.page])&&e.classList.add("is-selected"))}},{key:"onChange",value:function(){this.setActiveDot()}},{key:"onRefresh",value:function(){this.rebuildDots()}},{key:"attach",value:function(){this.carousel.on(this.events)}},{key:"detach",value:function(){this.removeList(),this.carousel.off(this.events),this.carousel=null}}]);var K=Q,A=(t(Y,[{key:"addAsTargetFor",value:function(e){this.target=this.carousel,this.nav=e,this.attachEvents()}},{key:"addAsNavFor",value:function(e){this.target=e,this.nav=this.carousel,this.attachEvents()}},{key:"attachEvents",value:function(){this.nav.options.initialSlide=this.target.options.initialPage,this.nav.on("ready",this.onNavReady),this.nav.on("createSlide",this.onNavCreateSlide),this.nav.on("Panzoom.click",this.onNavClick),this.target.on("change",this.onTargetChange),this.target.on("Panzoom.afterUpdate",this.onTargetChange)}},{key:"onNavReady",value:function(){this.onTargetChange(!0)}},{key:"onNavClick",value:function(e,t,n){var i=n.target.closest(".carousel__slide");i&&(n.stopPropagation(),n=parseInt(i.dataset.index,10),i=this.target.findPageForSlide(n),this.target.page!==i&&this.target.slideTo(i,{friction:this.friction}),this.markSelectedSlide(n))}},{key:"onNavCreateSlide",value:function(e,t){t.index===this.selectedIndex&&this.markSelectedSlide(t.index)}},{key:"onTargetChange",value:function(){var e=this.target.pages[this.target.page].indexes[0],t=this.nav.findPageForSlide(e);this.nav.slideTo(t),this.markSelectedSlide(e)}},{key:"markSelectedSlide",value:function(e){this.selectedIndex=e,y(this.nav.slides).filter(function(e){return e.$el&&e.$el.classList.remove("is-nav-selected")});e=this.nav.slides[e];e&&e.$el&&e.$el.classList.add("is-nav-selected")}},{key:"attach",value:function(e){e=e.options.Sync;(e.target||e.nav)&&(e.target?this.addAsNavFor(e.target):e.nav&&this.addAsTargetFor(e.nav),this.friction=e.friction)}},{key:"detach",value:function(){this.nav&&(this.nav.off("ready",this.onNavReady),this.nav.off("Panzoom.click",this.onNavClick),this.nav.off("createSlide",this.onNavCreateSlide)),this.target&&(this.target.off("Panzoom.afterUpdate",this.onTargetChange),this.target.off("change",this.onTargetChange))}}]),Y);function Y(e){a(this,Y),this.carousel=e,this.selectedIndex=null,this.friction=0,this.onNavReady=this.onNavReady.bind(this),this.onNavClick=this.onNavClick.bind(this),this.onNavCreateSlide=this.onNavCreateSlide.bind(this),this.onTargetChange=this.onTargetChange.bind(this)}function Q(e){a(this,Q),this.carousel=e,this.$list=null,this.events={change:this.onChange.bind(this),refresh:this.onRefresh.bind(this)}}A.defaults={friction:.92};var Z,w={Navigation:w,Dots:K,Sync:A},J={slides:[],preload:0,slidesPerPage:"auto",initialPage:null,initialSlide:null,friction:.92,center:!0,infinite:!0,fill:!0,dragFree:!1,prefix:"",classNames:{viewport:"carousel__viewport",track:"carousel__track",slide:"carousel__slide",slideSelected:"is-selected"},l10n:{NEXT:"Next slide",PREV:"Previous slide",GOTO:"Go to slide #%d"}},C=(n(M,v),Z=i(M),t(M,[{key:"init",value:function(){this.pages=[],this.page=this.pageIndex=null,this.prevPage=this.prevPageIndex=null,this.attachPlugins(M.Plugins),this.trigger("init"),this.initLayout(),this.initSlides(),this.updateMetrics(),this.$track&&this.pages.length&&(this.$track.style.transform="translate3d(".concat(-1*this.pages[this.page].left,"px, 0px, 0) scale(1)")),this.manageSlideVisiblity(),this.initPanzoom(),this.state="ready",this.trigger("ready")}},{key:"initLayout",value:function(){var e,t=this.option("prefix"),n=this.option("classNames");this.$viewport=this.option("viewport")||this.$container.querySelector(".".concat(t).concat(n.viewport)),this.$viewport||(this.$viewport=document.createElement("div"),(e=this.$viewport.classList).add.apply(e,y((t+n.viewport).split(" "))),(e=this.$viewport).append.apply(e,y(this.$container.childNodes)),this.$container.appendChild(this.$viewport)),this.$track=this.option("track")||this.$container.querySelector(".".concat(t).concat(n.track)),this.$track||(this.$track=document.createElement("div"),(e=this.$track.classList).add.apply(e,y((t+n.track).split(" "))),(e=this.$track).append.apply(e,y(this.$viewport.childNodes)),this.$viewport.appendChild(this.$track))}},{key:"initSlides",value:function(){var t=this;this.slides=[],this.$viewport.querySelectorAll(".".concat(this.option("prefix")).concat(this.option("classNames.slide"))).forEach(function(e){e={$el:e,isDom:!0};t.slides.push(e),t.trigger("createSlide",e,t.slides.length)}),Array.isArray(this.options.slides)&&(this.slides=p(!0,y(this.slides),this.options.slides))}},{key:"updateMetrics",value:function(){var i,o=this,r=0,s=[],n=(this.slides.forEach(function(e,t){var n=e.$el,n=e.isDom||!i?o.getSlideMetrics(n):i;e.index=t,e.width=n,e.left=r,r+=i=n,s.push(t)}),Math.max(this.$track.offsetWidth,T(this.$track.getBoundingClientRect().width))),e=getComputedStyle(this.$track),t=(n-=parseFloat(e.paddingLeft)+parseFloat(e.paddingRight),this.contentWidth=r,this.viewportWidth=n,[]),a=this.option("slidesPerPage");if(Number.isInteger(a)&&n<r)for(var l=0;l<this.slides.length;l+=a)t.push({indexes:s.slice(l,l+a),slides:this.slides.slice(l,l+a)});else for(var c=0,u=0,d=0;d<this.slides.length;d+=1){var h=this.slides[d];(!t.length||u+h.width>n)&&(t.push({indexes:[],slides:[]}),c=t.length-1,u=0),u+=h.width,t[c].indexes.push(d),t[c].slides.push(h)}var f=this.option("center"),p=this.option("fill");t.forEach(function(e,t){e.index=t,e.width=e.slides.reduce(function(e,t){return e+t.width},0),e.left=e.slides[0].left,f&&(e.left+=.5*(n-e.width)*-1),p&&!o.option("infiniteX",o.option("infinite"))&&n<r&&(e.left=Math.max(e.left,0),e.left=Math.min(e.left,r-n))});var g,v,m=[],e=(t.forEach(function(e){e=b({},e);g&&e.left===g.left?(g.width+=e.width,g.slides=[].concat(y(g.slides),y(e.slides)),g.indexes=[].concat(y(g.indexes),y(e.indexes))):(e.index=m.length,g=e,m.push(e))}),this.pages=m,this.page);null===e&&(e=null!==(v=this.option("initialSlide"))?this.findPageForSlide(v):parseInt(this.option("initialPage",0),10)||0,m[e]||(e=m.length&&m.length<e?m[m.length-1].index:0),this.page=e,this.pageIndex=e),this.updatePanzoom(),this.trigger("refresh")}},{key:"getSlideMetrics",value:function(e){e||(n=this.slides[0],(e=document.createElement("div")).dataset.isTestEl=1,e.style.visibility="hidden",(t=e.classList).add.apply(t,y((this.option("prefix")+this.option("classNames.slide")).split(" "))),n.customClass&&(t=e.classList).add.apply(t,y(n.customClass.split(" "))),this.$track.prepend(e));var t=Math.max(e.offsetWidth,T(e.getBoundingClientRect().width)),n=e.currentStyle||window.getComputedStyle(e),t=t+(parseFloat(n.marginLeft)||0)+(parseFloat(n.marginRight)||0);return e.dataset.isTestEl&&e.remove(),t}},{key:"findPageForSlide",value:function(t){t=parseInt(t,10)||0;var e=this.pages.find(function(e){return-1<e.indexes.indexOf(t)});return e?e.index:null}},{key:"slideNext",value:function(){this.slideTo(this.pageIndex+1)}},{key:"slidePrev",value:function(){this.slideTo(this.pageIndex-1)}},{key:"slideTo",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},n=t.x,e=void 0===n?-1*this.setPage(e,!0):n,n=t.y,n=void 0===n?0:n,t=t.friction,t=void 0===t?this.option("friction"):t;this.Panzoom.content.x===e&&!this.Panzoom.velocity.x&&t||(this.Panzoom.panTo({x:e,y:n,friction:t,ignoreBounds:!0}),"ready"===this.state&&"ready"===this.Panzoom.state&&this.trigger("settle"))}},{key:"initPanzoom",value:function(){var o=this,e=(this.Panzoom&&this.Panzoom.destroy(),p(!0,{},{content:this.$track,wrapInner:!1,resizeParent:!1,zoom:!1,click:!1,lockAxis:"x",x:this.pages.length?-1*this.pages[this.page].left:0,centerOnStart:!1,textSelection:function(){return o.option("textSelection",!1)},panOnlyZoomed:function(){return this.content.width<=this.viewport.width}},this.option("Panzoom")));this.Panzoom=new m(this.$container,e),this.Panzoom.on({"*":function(e){for(var t=arguments.length,n=new Array(1<t?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return o.trigger.apply(o,["Panzoom.".concat(e)].concat(n))},afterUpdate:function(){o.updatePage()},beforeTransform:this.onBeforeTransform.bind(this),touchEnd:this.onTouchEnd.bind(this),endAnimation:function(){o.trigger("settle")}}),this.updateMetrics(),this.manageSlideVisiblity()}},{key:"updatePanzoom",value:function(){this.Panzoom&&(this.Panzoom.content=b(b({},this.Panzoom.content),{},{fitWidth:this.contentWidth,origWidth:this.contentWidth,width:this.contentWidth}),1<this.pages.length&&this.option("infiniteX",this.option("infinite"))?this.Panzoom.boundX=null:this.pages.length&&(this.Panzoom.boundX={from:-1*this.pages[this.pages.length-1].left,to:-1*this.pages[0].left}),this.option("infiniteY",this.option("infinite"))?this.Panzoom.boundY=null:this.Panzoom.boundY={from:0,to:0},this.Panzoom.handleCursor())}},{key:"manageSlideVisiblity",value:function(){var s=this,a=this.contentWidth,l=this.viewportWidth,c=this.Panzoom?-1*this.Panzoom.content.x:this.pages.length?this.pages[this.page].left:0,u=this.option("preload"),d=this.option("infiniteX",this.option("infinite")),h=parseFloat(getComputedStyle(this.$viewport,null).getPropertyValue("padding-left")),f=parseFloat(getComputedStyle(this.$viewport,null).getPropertyValue("padding-right")),i=(this.slides.forEach(function(e){var t=0,n=c-h,i=c+l+f,o=(i+=u*(l+h+f),e.left+e.width>(n-=u*(l+h+f))&&e.left<i),r=(n=c+a-h,i=c+a+l+f,n-=u*(l+h+f),d&&e.left+e.width>n&&e.left<i),n=(n=c-a-h,i=c-a+l+f,n-=u*(l+h+f),d&&e.left+e.width>n&&e.left<i);r||o||n?(s.createSlideEl(e),o&&(t=0),r&&(t=-1),n&&(t=1),e.left+e.width>c&&e.left<=c+l+f&&(t=0)):s.removeSlideEl(e),e.hasDiff=t}),0),o=0;this.slides.forEach(function(e,t){var n=0;e.$el?(t!==i||e.hasDiff?n=o+e.hasDiff*a:o=0,e.$el.style.left=.1<Math.abs(n)?"".concat(o+e.hasDiff*a,"px"):"",i++):o+=e.width}),this.markSelectedSlides()}},{key:"createSlideEl",value:function(e){var t,n,i;if(e){if(!e.$el)return(t=document.createElement("div")).dataset.index=e.index,(o=t.classList).add.apply(o,y((this.option("prefix")+this.option("classNames.slide")).split(" "))),e.customClass&&(o=t.classList).add.apply(o,y(e.customClass.split(" "))),e.html&&(t.innerHTML=e.html),n=[],this.slides.forEach(function(e,t){e.$el&&n.push(t)}),i=e.index,o=null,n.length&&(r=n.reduce(function(e,t){return Math.abs(t-i)<Math.abs(e-i)?t:e}),o=this.slides[r]),this.$track.insertBefore(t,o&&o.$el?o.index<e.index?o.$el.nextSibling:o.$el:null),e.$el=t,this.trigger("createSlide",e,i),e;var o,r=e.$el.dataset.index;r&&parseInt(r,10)===e.index||(e.$el.dataset.index=e.index,e.$el.querySelectorAll("[data-lazy-srcset]").forEach(function(e){e.srcset=e.dataset.lazySrcset}),e.$el.querySelectorAll("[data-lazy-src]").forEach(function(e){var t=e.dataset.lazySrc;e instanceof HTMLImageElement?e.src=t:e.style.backgroundImage="url('".concat(t,"')")}),(o=e.$el.dataset.lazySrc)&&(e.$el.style.backgroundImage="url('".concat(o,"')")),e.state="ready")}}},{key:"removeSlideEl",value:function(e){e.$el&&!e.isDom&&(this.trigger("removeSlide",e),e.$el.remove(),e.$el=null)}},{key:"markSelectedSlides",value:function(){var o=this,r=this.option("classNames.slideSelected"),s="aria-hidden";this.slides.forEach(function(e,t){var n,i=e.$el;i&&((n=o.pages[o.page])&&n.indexes&&-1<n.indexes.indexOf(t)?(r&&!i.classList.contains(r)&&(i.classList.add(r),o.trigger("selectSlide",e)),i.removeAttribute(s)):(r&&i.classList.contains(r)&&(i.classList.remove(r),o.trigger("unselectSlide",e)),i.setAttribute(s,!0)))})}},{key:"updatePage",value:function(){this.updateMetrics(),this.slideTo(this.page,{friction:0})}},{key:"onBeforeTransform",value:function(){this.option("infiniteX",this.option("infinite"))&&this.manageInfiniteTrack(),this.manageSlideVisiblity()}},{key:"manageInfiniteTrack",value:function(){var e,t,n=this.contentWidth,i=this.viewportWidth;if(!(!this.option("infiniteX",this.option("infinite"))||this.pages.length<2||n<i))return t=!1,(e=this.Panzoom).content.x<-1*(n-i)&&(e.content.x+=n,this.pageIndex=this.pageIndex-this.pages.length,t=!0),e.content.x>i&&(e.content.x-=n,this.pageIndex=this.pageIndex+this.pages.length,t=!0),t&&"pointerdown"===e.state&&e.resetDragPosition(),t}},{key:"onTouchEnd",value:function(e,t){var n=this.option("dragFree");!n&&1<this.pages.length&&e.dragOffset.time<350&&Math.abs(e.dragOffset.y)<1&&5<Math.abs(e.dragOffset.x)?this[e.dragOffset.x<0?"slideNext":"slidePrev"]():n?(n=c(this.getPageFromPosition(-1*e.transform.x),2)[1],this.setPage(n)):this.slideToClosest()}},{key:"slideToClosest",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=c(this.getPageFromPosition(-1*this.Panzoom.content.x),2)[1];this.slideTo(t,e)}},{key:"getPageFromPosition",value:function(t){var e=this.pages.length,n=(this.option("center")&&(t+=.5*this.viewportWidth),Math.floor(t/this.contentWidth)),i=(t-=n*this.contentWidth,this.slides.find(function(e){return e.left<=t&&e.left+e.width>t}));return i?[i=this.findPageForSlide(i.index),i+n*e]:[0,0]}},{key:"setPage",value:function(e,t){var n,i,o=0,r=parseInt(e,10)||0,s=this.page,a=this.pageIndex,l=this.pages.length,c=this.contentWidth,u=this.viewportWidth;return e=(r%l+l)%l,this.option("infiniteX",this.option("infinite"))&&u<c?(u=Math.floor(r/l)||0,o=this.pages[e].left+u*c,!0===t&&2<l&&(u=-1*this.Panzoom.content.x,t=o-c,c=o+c,n=Math.abs(u-o),i=Math.abs(u-t),(u=Math.abs(u-c))<n&&u<=i?(o=c,r+=l):i<n&&i<u&&(o=t,r-=l))):(e=r=Math.max(0,Math.min(r,l-1)),o=this.pages.length?this.pages[e].left:0),this.page=e,this.pageIndex=r,null!==s&&e!==s&&(this.prevPage=s,this.prevPageIndex=a,this.trigger("change",e,s)),o}},{key:"destroy",value:function(){var t=this;this.state="destroy",this.slides.forEach(function(e){t.removeSlideEl(e)}),this.slides=[],this.Panzoom.destroy(),this.detachPlugins()}}]),M);function M(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if(a(this,M),t=p(!0,{},J,t),(t=Z.call(this,t)).state="init",t.$container=e,t.$container instanceof HTMLElement)return t.slideNext=q(t.slideNext.bind(s(t)),250),t.slidePrev=q(t.slidePrev.bind(s(t)),250),t.init(),e.__Carousel=s(t),t;throw new Error("No root element provided")}C.version="4.0.31",C.Plugins=w;function E(e){if(e&&k){null===ee&&document.createElement("div").focus({get preventScroll(){return!(ee=!0)}});try{var t,n;e.setActive?e.setActive():ee?e.focus({preventScroll:!0}):(t=window.pageXOffset||document.body.scrollTop,n=window.pageYOffset||document.body.scrollLeft,e.focus(),document.body.scrollTo({top:t,left:n,behavior:"auto"}))}catch(e){}}}var k=!("undefined"==typeof window||!window.document||!window.document.createElement),ee=null,te=["a[href]","area[href]",'input:not([disabled]):not([type="hidden"]):not([aria-hidden])',"select:not([disabled]):not([aria-hidden])","textarea:not([disabled]):not([aria-hidden])","button:not([disabled]):not([aria-hidden])","iframe","object","embed","video","audio","[contenteditable]",'[tabindex]:not([tabindex^="-"]):not([disabled]):not([aria-hidden])'],K=(t(ie,[{key:"onReady",value:function(){var e=window.visualViewport;e&&(this.viewport=e,this.startY=0,e.addEventListener("resize",this.onResize),this.updateViewport()),window.addEventListener("touchstart",this.onTouchstart,{passive:!1}),window.addEventListener("touchmove",this.onTouchmove,{passive:!1}),window.addEventListener("wheel",this.onWheel,{passive:!1})}},{key:"onResize",value:function(){this.updateViewport()}},{key:"updateViewport",value:function(){var e,t,n,i=this.fancybox,o=this.viewport,r=o.scale||1,i=i.$container;i&&(n=t=e="",.1<r-1&&(e="".concat(o.width*r,"px"),t="".concat(o.height*r,"px"),n="translate3d(".concat(o.offsetLeft,"px, ").concat(o.offsetTop,"px, 0) scale(").concat(1/r,")")),i.style.width=e,i.style.height=t,i.style.transform=n)}},{key:"onTouchstart",value:function(e){this.startY=(e.touches?e.touches[0]:e).screenY}},{key:"onTouchmove",value:function(e){var t,n,i,o=this.startY,r=window.innerWidth/window.document.documentElement.clientWidth;!e.cancelable||1<e.touches.length||1!=r||(r=u(e.composedPath()[0]))&&(t=window.getComputedStyle(r),t=parseInt(t.getPropertyValue("height"),10),n=o<=(i=(e.touches?e.touches[0]:e).screenY)&&0===r.scrollTop,i=i<=o&&r.scrollHeight-r.scrollTop===t,!n&&!i)||e.preventDefault()}},{key:"onWheel",value:function(e){u(e.composedPath()[0])||e.preventDefault()}},{key:"cleanup",value:function(){this.pendingUpdate&&(cancelAnimationFrame(this.pendingUpdate),this.pendingUpdate=null);var e=this.viewport;e&&(e.removeEventListener("resize",this.onResize),this.viewport=null),window.removeEventListener("touchstart",this.onTouchstart,!1),window.removeEventListener("touchmove",this.onTouchmove,!1),window.removeEventListener("wheel",this.onWheel,{passive:!1})}},{key:"attach",value:function(){this.fancybox.on("initLayout",this.onReady)}},{key:"detach",value:function(){this.fancybox.off("initLayout",this.onReady),this.cleanup()}}]),ie),A=(t(ne,[{key:"onPrepare",value:function(){this.getSlides().length<this.fancybox.option("Thumbs.minSlideCount")?this.state="disabled":!0===this.fancybox.option("Thumbs.autoStart")&&this.fancybox.Carousel.Panzoom.content.height>=this.fancybox.option("Thumbs.minScreenHeight")&&this.build()}},{key:"onClosing",value:function(){this.Carousel&&this.Carousel.Panzoom.detachEvents()}},{key:"onKeydown",value:function(e,t){t===e.option("Thumbs.key")&&this.toggle()}},{key:"build",value:function(){var e,n=this;this.$container||((e=document.createElement("div")).classList.add("fancybox__thumbs"),this.fancybox.$carousel.parentNode.insertBefore(e,this.fancybox.$carousel.nextSibling),this.Carousel=new C(e,p(!0,{Dots:!1,Navigation:!1,Sync:{friction:0},infinite:!1,center:!0,fill:!0,dragFree:!0,slidesPerPage:1,preload:1},this.fancybox.option("Thumbs.Carousel"),{Sync:{target:this.fancybox.Carousel},slides:this.getSlides()})),this.Carousel.Panzoom.on("wheel",function(e,t){t.preventDefault(),n.fancybox[t.deltaY<0?"prev":"next"]()}),this.$container=e,this.state="visible")}},{key:"getSlides",value:function(){var e,t=[],n=x(this.fancybox.items);try{for(n.s();!(e=n.n()).done;){var i=e.value,o=i.thumb;o&&t.push({html:this.fancybox.option("Thumbs.tpl").replace(/\{\{src\}\}/gi,o),customClass:"has-thumb has-".concat(i.type||"image")})}}catch(e){n.e(e)}finally{n.f()}return t}},{key:"toggle",value:function(){"visible"===this.state?this.hide():"hidden"===this.state?this.show():this.build()}},{key:"show",value:function(){"hidden"===this.state&&(this.$container.style.display="",this.Carousel.Panzoom.attachEvents(),this.state="visible")}},{key:"hide",value:function(){"visible"===this.state&&(this.Carousel.Panzoom.detachEvents(),this.$container.style.display="none",this.state="hidden")}},{key:"cleanup",value:function(){this.Carousel&&(this.Carousel.destroy(),this.Carousel=null),this.$container&&(this.$container.remove(),this.$container=null),this.state="init"}},{key:"attach",value:function(){this.fancybox.on(this.events)}},{key:"detach",value:function(){this.fancybox.off(this.events),this.cleanup()}}]),ne);function ne(e){a(this,ne),this.fancybox=e,this.$container=null,this.state="init";for(var t=0,n=["onPrepare","onClosing","onKeydown"];t<n.length;t++){var i=n[t];this[i]=this[i].bind(this)}this.events={prepare:this.onPrepare,closing:this.onClosing,keydown:this.onKeydown}}function ie(e){a(this,ie),this.fancybox=e,this.viewport=null,this.pendingUpdate=null;for(var t=0,n=["onReady","onResize","onTouchstart","onTouchmove"];t<n.length;t++){var i=n[t];this[i]=this[i].bind(this)}}A.defaults={minSlideCount:2,minScreenHeight:500,autoStart:!0,key:"t",Carousel:{},tpl:'<div class="fancybox__thumb" style="background-image:url(\'{{src}}\')"></div>'};function oe(e,t){for(var n=new URL(e),n=new URLSearchParams(n.search),i=new URLSearchParams,o=0,r=[].concat(y(n),y(Object.entries(t)));o<r.length;o++){var s=c(r[o],2),a=s[0],s=s[1];"t"===a?i.set("start",parseInt(s)):i.set(a,s)}return i=i.toString(),(n=e.match(/#t=((.*)?\d+s)/))&&(i+="#t=".concat(n[1])),i}var re={video:{autoplay:!0,ratio:16/9},youtube:{autohide:1,fs:1,rel:0,hd:1,wmode:"transparent",enablejsapi:1,html5:1},vimeo:{hd:1,show_title:1,show_byline:1,show_portrait:0,fullscreen:1},html5video:{tpl:'<video class="fancybox__html5video" playsinline controls controlsList="nodownload" poster="{{poster}}">\n  <source src="{{src}}" type="{{format}}" />Sorry, your browser doesn\'t support embedded videos.</video>',format:""}},w=(t(se,[{key:"onInit",value:function(){var e,t=x(this.fancybox.items);try{for(t.s();!(e=t.n()).done;){var n=e.value;this.processType(n)}}catch(e){t.e(e)}finally{t.f()}}},{key:"processType",value:function(e){var t,n,i,o,r;e.html?(e.src=e.html,e.type="html",delete e.html):(t=e.src||"",n=e.type||this.fancybox.options.type,i=null,t&&"string"!=typeof t||((i=t.match(/(?:youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(?:watch\?(?:.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(?:.*)|[\w-]{11}|\?listType=(?:.*)&list=(?:.*))(?:.*)/i))?(o=oe(t,this.fancybox.option("Html.youtube")),r=encodeURIComponent(i[1]),e.videoId=r,e.src="https://www.youtube-nocookie.com/embed/".concat(r,"?").concat(o),e.thumb=e.thumb||"https://i.ytimg.com/vi/".concat(r,"/mqdefault.jpg"),e.vendor="youtube",n="video"):(i=t.match(/^.+vimeo.com\/(?:\/)?([\d]+)(.*)?/))?(o=oe(t,this.fancybox.option("Html.vimeo")),r=encodeURIComponent(i[1]),e.videoId=r,e.src="https://player.vimeo.com/video/".concat(r,"?").concat(o),e.vendor="vimeo",n="video"):(i=t.match(/(?:maps\.)?google\.([a-z]{2,3}(?:\.[a-z]{2})?)\/(?:(?:(?:maps\/(?:place\/(?:.*)\/)?\@(.*),(\d+.?\d+?)z))|(?:\?ll=))(.*)?/i))?(e.src="//maps.google.".concat(i[1],"/?ll=").concat((i[2]?i[2]+"&z="+Math.floor(i[3])+(i[4]?i[4].replace(/^\//,"&"):""):i[4]+"").replace(/\?/,"&"),"&output=").concat(i[4]&&0<i[4].indexOf("layer=c")?"svembed":"embed"),n="map"):(i=t.match(/(?:maps\.)?google\.([a-z]{2,3}(?:\.[a-z]{2})?)\/(?:maps\/search\/)(.*)/i))&&(e.src="//maps.google.".concat(i[1],"/maps?q=").concat(i[2].replace("query=","q=").replace("api=1",""),"&output=embed"),n="map"),n||("#"===t.charAt(0)?n="inline":(i=t.match(/\.(mp4|mov|ogv|webm)((\?|#).*)?$/i))?(n="html5video",e.format=e.format||"video/"+("ogv"===i[1]?"ogg":i[1])):t.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i)?n="image":t.match(/\.(pdf)((\?|#).*)?$/i)&&(n="pdf")),e.type=n||this.fancybox.option("defaultType","image"),"html5video"!==n&&"video"!==n||(e.video=p({},this.fancybox.option("Html.video"),e.video),e._width&&e._height?e.ratio=parseFloat(e._width)/parseFloat(e._height):e.ratio=e.ratio||e.video.ratio||re.video.ratio)))}},{key:"onReady",value:function(){var t=this;this.fancybox.Carousel.slides.forEach(function(e){e.$el&&(t.setContent(e),e.index===t.fancybox.getSlide().index&&t.playVideo(e))})}},{key:"onCreateSlide",value:function(e,t,n){"ready"===this.fancybox.state&&this.setContent(n)}},{key:"loadInlineContent",value:function(e){var t,n;e.src instanceof HTMLElement?t=e.src:"string"==typeof e.src&&(n=2===(n=e.src.split("#",2)).length&&""===n[0]?n[1]:n[0],t=document.getElementById(n)),t?("clone"===e.type||t.$placeHolder?(n=(n=(t=t.cloneNode(!0)).getAttribute("id"))?"".concat(n,"--clone"):"clone-".concat(this.fancybox.id,"-").concat(e.index),t.setAttribute("id",n)):((n=document.createElement("div")).classList.add("fancybox-placeholder"),t.parentNode.insertBefore(n,t),t.$placeHolder=n),this.fancybox.setContent(e,t)):this.fancybox.setError(e,"{{ELEMENT_NOT_FOUND}}")}},{key:"loadAjaxContent",value:function(e){var t=this.fancybox,n=new XMLHttpRequest,i=(t.showLoading(e),n.onreadystatechange=function(){n.readyState===XMLHttpRequest.DONE&&"ready"===t.state&&(t.hideLoading(e),200===n.status?t.setContent(e,n.responseText):t.setError(e,404===n.status?"{{AJAX_NOT_FOUND}}":"{{AJAX_FORBIDDEN}}"))},e.ajax||null);n.open(i?"POST":"GET",e.src),n.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),n.setRequestHeader("X-Requested-With","XMLHttpRequest"),n.send(i),e.xhr=n}},{key:"loadIframeContent",value:function(t){var e,n=this,i=this.fancybox,o=document.createElement("iframe");o.className="fancybox__iframe",o.setAttribute("id","fancybox__iframe_".concat(i.id,"_").concat(t.index)),o.setAttribute("allow","autoplay; fullscreen"),o.setAttribute("scrolling","auto"),t.$iframe=o,"iframe"!==t.type||!1===t.preload?(o.setAttribute("src",t.src),this.fancybox.setContent(t,o),this.resizeIframe(t)):(i.showLoading(t),(e=document.createElement("div")).style.visibility="hidden",this.fancybox.setContent(t,e),e.appendChild(o),o.onerror=function(){i.setError(t,"{{IFRAME_ERROR}}")},o.onload=function(){i.hideLoading(t);var e=!1;o.isReady||(e=o.isReady=!0),o.src.length&&(o.parentNode.style.visibility="",n.resizeIframe(t),e&&i.revealContent(t))},o.setAttribute("src",t.src))}},{key:"setAspectRatio",value:function(e){var t,n,i,o=e.$content,r=e.ratio;o&&(t=e._width,e=e._height,(r||t&&e)&&(Object.assign(o.style,{width:t&&e?"100%":"",height:t&&e?"100%":"",maxWidth:"",maxHeight:""}),i=o.offsetWidth,n=o.offsetHeight,e=e||n,((t=t||i)>i||n<e)&&(t*=i=Math.min(i/t,n/e),e*=i),.01<Math.abs(t/e-r)&&(r<t/e?t=e*r:e=t/r),Object.assign(o.style,{width:"".concat(t,"px"),height:"".concat(e,"px")})))}},{key:"resizeIframe",value:function(e){var t=e.$iframe;if(t){var n=e._width||0,i=e._height||0,o=(n&&i&&(e.autoSize=!1),t.parentNode),r=o&&o.style;if(!1!==e.preload&&!1!==e.autoSize&&r)try{var s=window.getComputedStyle(o),a=parseFloat(s.paddingLeft)+parseFloat(s.paddingRight),l=parseFloat(s.paddingTop)+parseFloat(s.paddingBottom),c=t.contentWindow.document,u=c.getElementsByTagName("html")[0],d=c.body;r.width="",d.style.overflow="hidden",n=n||u.scrollWidth+a,r.width="".concat(n,"px"),d.style.overflow="",r.flex="0 0 auto",r.height="".concat(d.scrollHeight,"px"),i=u.scrollHeight+l}catch(e){}(n||i)&&(o={flex:"0 1 auto"},n&&(o.width="".concat(n,"px")),i&&(o.height="".concat(i,"px")),Object.assign(r,o))}}},{key:"onRefresh",value:function(e,t){var n=this;t.slides.forEach(function(e){e.$el&&(e.$iframe&&n.resizeIframe(e),e.ratio&&n.setAspectRatio(e))})}},{key:"setContent",value:function(e){if(e&&!e.isDom){switch(e.type){case"html":this.fancybox.setContent(e,e.src);break;case"html5video":this.fancybox.setContent(e,this.fancybox.option("Html.html5video.tpl").replace(/\{\{src\}\}/gi,e.src).replace("{{format}}",e.format||e.html5video&&e.html5video.format||"").replace("{{poster}}",e.poster||e.thumb||""));break;case"inline":case"clone":this.loadInlineContent(e);break;case"ajax":this.loadAjaxContent(e);break;case"pdf":case"video":case"map":e.preload=!1;case"iframe":this.loadIframeContent(e)}e.ratio&&this.setAspectRatio(e)}}},{key:"onSelectSlide",value:function(e,t,n){"ready"===e.state&&this.playVideo(n)}},{key:"playVideo",value:function(n){if("html5video"===n.type&&n.video.autoplay)try{var e,t=n.$el.querySelector("video");!t||void 0!==(e=t.play())&&e.then(function(){}).catch(function(e){t.muted=!0,t.play()})}catch(n){}"video"===n.type&&n.$iframe&&n.$iframe.contentWindow&&!function e(){if("done"===n.state&&n.$iframe&&n.$iframe.contentWindow){var t;if(n.$iframe.isReady)return void((t=n.video&&n.video.autoplay?"youtube"==n.vendor?{event:"command",func:"playVideo"}:{method:"play",value:"true"}:t)&&n.$iframe.contentWindow.postMessage(JSON.stringify(t),"*"));"youtube"===n.vendor&&(t={event:"listening",id:n.$iframe.getAttribute("id")},n.$iframe.contentWindow.postMessage(JSON.stringify(t),"*"))}n.poller=setTimeout(e,250)}()}},{key:"onUnselectSlide",value:function(e,t,n){if("html5video"!==n.type){var i=!1;"vimeo"==n.vendor?i={method:"pause",value:"true"}:"youtube"===n.vendor&&(i={event:"command",func:"pauseVideo"}),i&&n.$iframe&&n.$iframe.contentWindow&&n.$iframe.contentWindow.postMessage(JSON.stringify(i),"*"),clearTimeout(n.poller)}else try{n.$el.querySelector("video").pause()}catch(e){}}},{key:"onRemoveSlide",value:function(e,t,n){n.xhr&&(n.xhr.abort(),n.xhr=null),n.$iframe&&(n.$iframe.onload=n.$iframe.onerror=null,n.$iframe.src="//about:blank",n.$iframe=null);var i=n.$content,n=("inline"===n.type&&i&&(i.classList.remove("fancybox__content"),"none"!==i.style.display&&(i.style.display="none")),n.$closeButton&&(n.$closeButton.remove(),n.$closeButton=null),i&&i.$placeHolder);n&&(n.parentNode.insertBefore(i,n),n.remove(),i.$placeHolder=null)}},{key:"onMessage",value:function(e){try{var t=JSON.parse(e.data);if("https://player.vimeo.com"===e.origin){if("ready"===t.event){var n,i=x(document.getElementsByClassName("fancybox__iframe"));try{for(i.s();!(n=i.n()).done;){var o=n.value;o.contentWindow===e.source&&(o.isReady=1)}}catch(e){i.e(e)}finally{i.f()}}}else"https://www.youtube-nocookie.com"===e.origin&&"onReady"===t.event&&(document.getElementById(t.id).isReady=1)}catch(e){}}},{key:"attach",value:function(){this.fancybox.on(this.events),window.addEventListener("message",this.onMessage,!1)}},{key:"detach",value:function(){this.fancybox.off(this.events),window.removeEventListener("message",this.onMessage,!1)}}]),se);function se(e){a(this,se),this.fancybox=e;for(var t=0,n=["onInit","onReady","onCreateSlide","onRemoveSlide","onSelectSlide","onUnselectSlide","onRefresh","onMessage"];t<n.length;t++){var i=n[t];this[i]=this[i].bind(this)}this.events={init:this.onInit,ready:this.onReady,"Carousel.createSlide":this.onCreateSlide,"Carousel.removeSlide":this.onRemoveSlide,"Carousel.selectSlide":this.onSelectSlide,"Carousel.unselectSlide":this.onUnselectSlide,"Carousel.refresh":this.onRefresh}}w.defaults=re;t(le,[{key:"onReady",value:function(){var t=this;this.fancybox.Carousel.slides.forEach(function(e){e.$el&&t.setContent(e)})}},{key:"onDone",value:function(e,t){this.handleCursor(t)}},{key:"onClosing",value:function(e){clearTimeout(this.clickTimer),this.clickTimer=null,e.Carousel.slides.forEach(function(e){e.$image&&(e.state="destroy"),e.Panzoom&&e.Panzoom.detachEvents()}),"closing"===this.fancybox.state&&this.canZoom(e.getSlide())&&this.zoomOut()}},{key:"onCreateSlide",value:function(e,t,n){"ready"===this.fancybox.state&&this.setContent(n)}},{key:"onRemoveSlide",value:function(e,t,n){n.$image&&(n.$el.classList.remove(e.option("Image.canZoomInClass")),n.$image.remove(),n.$image=null),n.Panzoom&&(n.Panzoom.destroy(),n.Panzoom=null),n.$el&&n.$el.dataset&&delete n.$el.dataset.imageFit}},{key:"setContent",value:function(t){var e,n,i,o,r=this;t.isDom||t.html||t.type&&"image"!==t.type||t.$image||(t.type="image",t.state="loading",(e=document.createElement("div")).style.visibility="hidden",(n=document.createElement("img")).addEventListener("load",function(e){e.stopImmediatePropagation(),r.onImageStatusChange(t)}),n.addEventListener("error",function(){r.onImageStatusChange(t)}),n.src=t.src,n.alt="",n.draggable=!1,n.classList.add("fancybox__image"),t.srcset&&n.setAttribute("srcset",t.srcset),t.sizes&&n.setAttribute("sizes",t.sizes),t.$image=n,(i=this.fancybox.option("Image.wrap"))?((o=document.createElement("div")).classList.add("string"==typeof i?i:"fancybox__image-wrap"),o.appendChild(n),e.appendChild(o),t.$wrap=o):e.appendChild(n),t.$el.dataset.imageFit=this.fancybox.option("Image.fit"),this.fancybox.setContent(t,e),n.complete||n.error?this.onImageStatusChange(t):this.fancybox.showLoading(t))}},{key:"onImageStatusChange",value:function(t){var n=this,e=t.$image;e&&"loading"===t.state&&(e.complete&&e.naturalWidth&&e.naturalHeight?(this.fancybox.hideLoading(t),"contain"===this.fancybox.option("Image.fit")&&this.initSlidePanzoom(t),t.$el.addEventListener("wheel",function(e){return n.onWheel(t,e)},{passive:!1}),t.$content.addEventListener("click",function(e){return n.onClick(t,e)},{passive:!1}),this.revealContent(t)):this.fancybox.setError(t,"{{IMAGE_ERROR}}"))}},{key:"initSlidePanzoom",value:function(e){var t=this;e.Panzoom||(e.Panzoom=new m(e.$el,p(!0,this.fancybox.option("Image.Panzoom",{}),{viewport:e.$wrap,content:e.$image,width:e._width,height:e._height,wrapInner:!1,textSelection:!0,touch:this.fancybox.option("Image.touch"),panOnlyZoomed:!0,click:!1,wheel:!1})),e.Panzoom.on("startAnimation",function(){t.fancybox.trigger("Image.startAnimation",e)}),e.Panzoom.on("endAnimation",function(){"zoomIn"===e.state&&t.fancybox.done(e),t.handleCursor(e),t.fancybox.trigger("Image.endAnimation",e)}),e.Panzoom.on("afterUpdate",function(){t.handleCursor(e),t.fancybox.trigger("Image.afterUpdate",e)}))}},{key:"revealContent",value:function(e){null===this.fancybox.Carousel.prevPage&&e.index===this.fancybox.options.startIndex&&this.canZoom(e)?this.zoomIn():this.fancybox.revealContent(e)}},{key:"getZoomInfo",value:function(e){var t=e.$thumb.getBoundingClientRect(),n=t.width,i=t.height,e=e.$content.getBoundingClientRect(),o=e.width,r=e.height,s=e.top-t.top,e=e.left-t.left,t=this.fancybox.option("Image.zoomOpacity");return{top:s,left:e,scale:o&&n?n/o:1,opacity:t="auto"===t?.1<Math.abs(n/i-o/r):t}}},{key:"canZoom",value:function(e){var t=this.fancybox,n=t.$container;if(window.visualViewport&&1!==window.visualViewport.scale)return!1;if(e.Panzoom&&!e.Panzoom.content.width)return!1;if(!t.option("Image.zoom")||"contain"!==t.option("Image.fit"))return!1;t=e.$thumb;if(!t||"loading"===e.state)return!1;n.classList.add("fancybox__no-click");var i,o,e=t.getBoundingClientRect();return o=this.fancybox.option("Image.ignoreCoveredThumbnail")?(o=document.elementFromPoint(e.left+1,e.top+1)===t,i=document.elementFromPoint(e.right-1,e.bottom-1)===t,o&&i):document.elementFromPoint(e.left+.5*e.width,e.top+.5*e.height)===t,n.classList.remove("fancybox__no-click"),o}},{key:"zoomIn",value:function(){var e=this.fancybox,t=e.getSlide(),n=t.Panzoom,i=this.getZoomInfo(t),o=i.top,r=i.left,s=i.scale,i=i.opacity;e.trigger("reveal",t),n.panTo({x:-1*r,y:-1*o,scale:s,friction:0,ignoreBounds:!0}),t.$content.style.visibility="",t.state="zoomIn",!0===i&&n.on("afterTransform",function(e){"zoomIn"!==t.state&&"zoomOut"!==t.state||(e.$content.style.opacity=Math.min(1,1-(1-e.content.scale)/(1-s)))}),n.panTo({x:0,y:0,scale:1,friction:this.fancybox.option("Image.zoomFriction")})}},{key:"zoomOut",value:function(){var r,e,s=this,t=this.fancybox,a=t.getSlide(),l=a.Panzoom;l&&(a.state="zoomOut",t.state="customClosing",a.$caption&&(a.$caption.style.visibility="hidden"),r=this.fancybox.option("Image.zoomFriction"),e=function(e){var t=(o=s.getZoomInfo(a)).top,n=o.left,i=o.scale,o=o.opacity;e||o||(r*=.82),l.panTo({x:-1*n,y:-1*t,scale:i,friction:r,ignoreBounds:!0}),r*=.98},window.addEventListener("scroll",e),l.once("endAnimation",function(){window.removeEventListener("scroll",e),t.destroy()}),e())}},{key:"handleCursor",value:function(e){var t,n,i,o,r;"image"===e.type&&e.$el&&(t=e.Panzoom,n=this.fancybox.option("Image.click",!1,e),i=this.fancybox.option("Image.touch"),e=e.$el.classList,o=this.fancybox.option("Image.canZoomInClass"),r=this.fancybox.option("Image.canZoomOutClass"),e.remove(r),e.remove(o),t&&"toggleZoom"===n?t&&1===t.content.scale&&.01<t.option("maxScale")-t.content.scale?e.add(o):1<t.content.scale&&!i&&e.add(r):"close"===n&&e.add(r))}},{key:"onWheel",value:function(e,t){if("ready"===this.fancybox.state&&!1!==this.fancybox.trigger("Image.wheel",t))switch(this.fancybox.option("Image.wheel")){case"zoom":"done"===e.state&&e.Panzoom&&e.Panzoom.zoomWithWheel(t);break;case"close":this.fancybox.close();break;case"slide":this.fancybox[t.deltaY<0?"prev":"next"]()}}},{key:"onClick",value:function(t,n){var i=this;if("ready"===this.fancybox.state){var e=t.Panzoom;if(!e||!e.dragPosition.midPoint&&0===e.dragOffset.x&&0===e.dragOffset.y&&1===e.dragOffset.scale){if(this.fancybox.Carousel.Panzoom.lockAxis)return!1;var o=function(e){switch(e){case"toggleZoom":n.stopPropagation(),t.Panzoom&&t.Panzoom.zoomWithClick(n);break;case"close":i.fancybox.close();break;case"next":n.stopPropagation(),i.fancybox.next()}},r=this.fancybox.option("Image.click"),e=this.fancybox.option("Image.doubleClick");e?this.clickTimer?(clearTimeout(this.clickTimer),this.clickTimer=null,o(e)):this.clickTimer=setTimeout(function(){i.clickTimer=null,o(r)},300):o(r)}}}},{key:"onPageChange",value:function(e,t){var n=e.getSlide();t.slides.forEach(function(e){e.Panzoom&&"done"===e.state&&e.index!==n.index&&e.Panzoom.panTo({x:0,y:0,scale:1,friction:.8})})}},{key:"attach",value:function(){this.fancybox.on(this.events)}},{key:"detach",value:function(){this.fancybox.off(this.events)}}]);var ae=le;function le(e){a(this,le),this.fancybox=e;for(var t=0,n=["onReady","onClosing","onDone","onPageChange","onCreateSlide","onRemoveSlide","onImageStatusChange"];t<n.length;t++){var i=n[t];this[i]=this[i].bind(this)}this.events={ready:this.onReady,closing:this.onClosing,done:this.onDone,"Carousel.change":this.onPageChange,"Carousel.createSlide":this.onCreateSlide,"Carousel.removeSlide":this.onRemoveSlide}}ae.defaults={canZoomInClass:"can-zoom_in",canZoomOutClass:"can-zoom_out",zoom:!0,zoomOpacity:"auto",zoomFriction:.82,ignoreCoveredThumbnail:!1,touch:!0,click:"toggleZoom",doubleClick:null,wheel:"zoom",fit:"contain",wrap:!1,Panzoom:{ratio:1}};t(H,[{key:"onChange",value:function(e){var t,n=this,i=e.Carousel,o=(this.timer&&clearTimeout(this.timer),null===i.prevPage),r=e.getSlide(),s=new URL(document.URL).hash,a=!1;r.slug?a="#"+r.slug:(t=r.$trigger&&r.$trigger.dataset,(e=e.option("slug")||t&&t.fancybox)&&e.length&&"true"!==e&&(a="#"+e+(1<i.slides.length?"-"+(r.index+1):""))),o&&(this.origHash=s!==a?s:""),a&&s!==a&&(this.timer=setTimeout(function(){try{window.history[o?"pushState":"replaceState"]({},document.title,window.location.pathname+window.location.search+a),o&&(n.hasCreatedHistory=!0)}catch(e){}},300))}},{key:"onClosing",value:function(){if(this.timer&&clearTimeout(this.timer),!0!==this.hasSilentClose)try{window.history.replaceState({},document.title,window.location.pathname+window.location.search+(this.origHash||""))}catch(e){}}},{key:"attach",value:function(e){e.on(this.events)}},{key:"detach",value:function(e){e.off(this.events)}}],[{key:"startFromUrl",value:function(){var e,t,n,i=H.Fancybox;i&&!i.getInstance()&&!1!==i.defaults.Hash&&(n=(t=H.getParsedURL()).hash,e=t.slug,t=t.index,e&&((n=document.querySelector('[data-slug="'.concat(n,'"]')))&&n.dispatchEvent(new CustomEvent("click",{bubbles:!0,cancelable:!0})),i.getInstance()||(i=document.querySelectorAll('[data-fancybox="'.concat(e,'"]'))).length&&(null===t&&1===i.length?n=i[0]:t&&(n=i[t-1]),n&&n.dispatchEvent(new CustomEvent("click",{bubbles:!0,cancelable:!0})))))}},{key:"onHashChange",value:function(){var e=H.getParsedURL(),t=e.slug,e=e.index,n=H.Fancybox,n=n&&n.getInstance();if(n&&n.plugins.Hash){if(t){var i=n.Carousel;if(t===n.option("slug"))return i.slideTo(e-1);var o,r=x(i.slides);try{for(r.s();!(o=r.n()).done;){var s=o.value;if(s.slug&&s.slug===t)return i.slideTo(s.index)}}catch(e){r.e(e)}finally{r.f()}var a=n.getSlide(),a=a.$trigger&&a.$trigger.dataset;if(a&&a.fancybox===t)return i.slideTo(e-1)}n.plugins.Hash.hasSilentClose=!0,n.close()}H.startFromUrl()}},{key:"create",value:function(e){function t(){window.addEventListener("hashchange",H.onHashChange,!1),H.startFromUrl()}H.Fancybox=e,k&&window.requestAnimationFrame(function(){/complete|interactive|loaded/.test(document.readyState)?t():document.addEventListener("DOMContentLoaded",t)})}},{key:"destroy",value:function(){window.removeEventListener("hashchange",H.onHashChange,!1)}},{key:"getParsedURL",value:function(){var e=window.location.hash.substr(1),t=e.split("-"),n=1<t.length&&/^\+?\d+$/.test(t[t.length-1])&&parseInt(t.pop(-1),10)||null;return{hash:e,slug:t.join("-"),index:n}}}]);var ce=H,G={pageXOffset:0,pageYOffset:0,element:function(){return document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement},activate:function(e){G.pageXOffset=window.pageXOffset,G.pageYOffset=window.pageYOffset,e.requestFullscreen?e.requestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():e.msRequestFullscreen&&e.msRequestFullscreen()},deactivate:function(){document.exitFullscreen?document.exitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitExitFullscreen&&document.webkitExitFullscreen()}},ue=(t(pe,[{key:"isActive",value:function(){return this.active}},{key:"setTimer",value:function(){var e,t,n=this;this.active&&!this.timer&&(e=this.fancybox.option("slideshow.delay",3e3),this.timer=setTimeout(function(){n.timer=null,n.fancybox.option("infinite")||n.fancybox.getSlide().index!==n.fancybox.Carousel.slides.length-1?n.fancybox.next():n.fancybox.jumpTo(0,{friction:0})},e),(t=this.$progress)||((t=document.createElement("div")).classList.add("fancybox__progress"),this.fancybox.$carousel.parentNode.insertBefore(t,this.fancybox.$carousel),(this.$progress=t).offsetHeight),t.style.transitionDuration="".concat(e,"ms"),t.style.transform="scaleX(1)")}},{key:"clearTimer",value:function(){clearTimeout(this.timer),this.timer=null,this.$progress&&(this.$progress.style.transitionDuration="",this.$progress.style.transform="",this.$progress.offsetHeight)}},{key:"activate",value:function(){this.active||(this.active=!0,this.fancybox.$container.classList.add("has-slideshow"),"done"===this.fancybox.getSlide().state&&this.setTimer(),document.addEventListener("visibilitychange",this.handleVisibilityChange,!1))}},{key:"handleVisibilityChange",value:function(){this.deactivate()}},{key:"deactivate",value:function(){this.active=!1,this.clearTimer(),this.fancybox.$container.classList.remove("has-slideshow"),document.removeEventListener("visibilitychange",this.handleVisibilityChange,!1)}},{key:"toggle",value:function(){this.active?this.deactivate():1<this.fancybox.Carousel.slides.length&&this.activate()}}]),pe),de={display:["counter","zoom","slideshow","fullscreen","thumbs","close"],autoEnable:!0,items:{counter:{position:"left",type:"div",class:"fancybox__counter",html:'<span data-fancybox-index=""></span>&nbsp;/&nbsp;<span data-fancybox-count=""></span>',attr:{tabindex:-1}},prev:{type:"button",class:"fancybox__button--prev",label:"PREV",html:'<svg viewBox="0 0 24 24"><path d="M15 4l-8 8 8 8"/></svg>',attr:{"data-fancybox-prev":""}},next:{type:"button",class:"fancybox__button--next",label:"NEXT",html:'<svg viewBox="0 0 24 24"><path d="M8 4l8 8-8 8"/></svg>',attr:{"data-fancybox-next":""}},fullscreen:{type:"button",class:"fancybox__button--fullscreen",label:"TOGGLE_FULLSCREEN",html:'<svg viewBox="0 0 24 24">\n                <g><path d="M3 8 V3h5"></path><path d="M21 8V3h-5"></path><path d="M8 21H3v-5"></path><path d="M16 21h5v-5"></path></g>\n                <g><path d="M7 2v5H2M17 2v5h5M2 17h5v5M22 17h-5v5"/></g>\n            </svg>',click:function(e){e.preventDefault(),G.element()?G.deactivate():G.activate(this.fancybox.$container)}},slideshow:{type:"button",class:"fancybox__button--slideshow",label:"TOGGLE_SLIDESHOW",html:'<svg viewBox="0 0 24 24">\n                <g><path d="M6 4v16"/><path d="M20 12L6 20"/><path d="M20 12L6 4"/></g>\n                <g><path d="M7 4v15M17 4v15"/></g>\n            </svg>',click:function(e){e.preventDefault(),this.Slideshow.toggle()}},zoom:{type:"button",class:"fancybox__button--zoom",label:"TOGGLE_ZOOM",html:'<svg viewBox="0 0 24 24"><circle cx="10" cy="10" r="7"></circle><path d="M16 16 L21 21"></svg>',click:function(e){e.preventDefault();e=this.fancybox.getSlide().Panzoom;e&&e.toggleZoom()}},download:{type:"link",label:"DOWNLOAD",class:"fancybox__button--download",html:'<svg viewBox="0 0 24 24"><path d="M12 15V3m0 12l-4-4m4 4l4-4M2 17l.62 2.48A2 2 0 004.56 21h14.88a2 2 0 001.94-1.51L22 17"/></svg>',click:function(e){e.stopPropagation()}},thumbs:{type:"button",label:"TOGGLE_THUMBS",class:"fancybox__button--thumbs",html:'<svg viewBox="0 0 24 24"><circle cx="4" cy="4" r="1" /><circle cx="12" cy="4" r="1" transform="rotate(90 12 4)"/><circle cx="20" cy="4" r="1" transform="rotate(90 20 4)"/><circle cx="4" cy="12" r="1" transform="rotate(90 4 12)"/><circle cx="12" cy="12" r="1" transform="rotate(90 12 12)"/><circle cx="20" cy="12" r="1" transform="rotate(90 20 12)"/><circle cx="4" cy="20" r="1" transform="rotate(90 4 20)"/><circle cx="12" cy="20" r="1" transform="rotate(90 12 20)"/><circle cx="20" cy="20" r="1" transform="rotate(90 20 20)"/></svg>',click:function(e){e.stopPropagation();e=this.fancybox.plugins.Thumbs;e&&e.toggle()}},close:{type:"button",label:"CLOSE",class:"fancybox__button--close",html:'<svg viewBox="0 0 24 24"><path d="M20 20L4 4m16 0L4 20"></path></svg>',attr:{"data-fancybox-close":"",tabindex:0}}}},he=(t(fe,[{key:"onInit",value:function(){if(this.fancybox.option("Toolbar.autoEnable")){var e,t=!1,n=x(this.fancybox.items);try{for(n.s();!(e=n.n()).done;)if("image"===e.value.type){t=!0;break}}catch(e){n.e(e)}finally{n.f()}if(!t)return void(this.state="disabled")}var i,o=x(this.fancybox.option("Toolbar.display"));try{for(o.s();!(i=o.n()).done;){var r=i.value;if("close"===(g(r)?r.id:r)){this.fancybox.options.closeButton=!1;break}}}catch(e){o.e(e)}finally{o.f()}}},{key:"onPrepare",value:function(){var e=this.fancybox;if("init"===this.state&&(this.build(),this.update(),this.Slideshow=new ue(e),!e.Carousel.prevPage&&(e.option("slideshow.autoStart")&&this.Slideshow.activate(),e.option("fullscreen.autoStart")&&!G.element())))try{G.activate(e.$container)}catch(e){}}},{key:"onFsChange",value:function(){window.scrollTo(G.pageXOffset,G.pageYOffset)}},{key:"onSettle",value:function(){var e=this.fancybox,t=this.Slideshow;t&&t.isActive()&&(e.getSlide().index!==e.Carousel.slides.length-1||e.option("infinite")?"done"===e.getSlide().state&&t.setTimer():t.deactivate())}},{key:"onChange",value:function(){this.update(),this.Slideshow&&this.Slideshow.isActive()&&this.Slideshow.clearTimer()}},{key:"onDone",value:function(e,t){var n=this.Slideshow;t.index===e.getSlide().index&&(this.update(),n&&n.isActive()&&(e.option("infinite")||t.index!==e.Carousel.slides.length-1?n.setTimer():n.deactivate()))}},{key:"onRefresh",value:function(e){e&&e.index!==this.fancybox.getSlide().index||(this.update(),!this.Slideshow||!this.Slideshow.isActive()||e&&"done"!==e.state||this.Slideshow.deactivate())}},{key:"onKeydown",value:function(e,t,n){" "===t&&this.Slideshow&&(this.Slideshow.toggle(),n.preventDefault())}},{key:"onClosing",value:function(){this.Slideshow&&this.Slideshow.deactivate(),document.removeEventListener("fullscreenchange",this.onFsChange)}},{key:"createElement",value:function(e){var t,n;for(n in"div"===e.type?t=document.createElement("div"):(t=document.createElement("link"===e.type?"a":"button")).classList.add("carousel__button"),t.innerHTML=e.html,t.setAttribute("tabindex",e.tabindex||0),e.class&&(i=t.classList).add.apply(i,y(e.class.split(" "))),e.attr)t.setAttribute(n,e.attr[n]);e.label&&t.setAttribute("title",this.fancybox.localize("{{".concat(e.label,"}}"))),e.click&&t.addEventListener("click",e.click.bind(this)),"prev"===e.id&&t.setAttribute("data-fancybox-prev",""),"next"===e.id&&t.setAttribute("data-fancybox-next","");var i=t.querySelector("svg");return i&&(i.setAttribute("role","img"),i.setAttribute("tabindex","-1"),i.setAttribute("xmlns","http://www.w3.org/2000/svg")),t}},{key:"build",value:function(){var o=this;this.cleanup();var r,s=this.fancybox.option("Toolbar.items"),a=[{position:"left",items:[]},{position:"center",items:[]},{position:"right",items:[]}],l=this.fancybox.plugins.Thumbs,e=x(this.fancybox.option("Toolbar.display"));try{for(e.s();!(r=e.n()).done;)!function(){var t,e=r.value,n=void 0,i=void 0,i=g(e)?(n=e.id,p({},s[n],e)):s[n=e];if(["counter","next","prev","slideshow"].includes(n)&&o.fancybox.items.length<2)return;if("fullscreen"===n){if(!document.fullscreenEnabled||window.fullScreen)return;document.addEventListener("fullscreenchange",o.onFsChange)}("thumbs"!==n||l&&"disabled"!==l.state)&&i&&(t=i.position||"right",(e=a.find(function(e){return e.position===t}))&&e.items.push(i))}()}catch(o){e.e(o)}finally{e.f()}var t=document.createElement("div");t.classList.add("fancybox__toolbar");for(var n=0,i=a;n<i.length;n++){var c=i[n];if(c.items.length){var u=document.createElement("div");u.classList.add("fancybox__toolbar__items"),u.classList.add("fancybox__toolbar__items--".concat(c.position));var d,h=x(c.items);try{for(h.s();!(d=h.n()).done;){var f=d.value;u.appendChild(this.createElement(f))}}catch(o){h.e(o)}finally{h.f()}t.appendChild(u)}}this.fancybox.$carousel.parentNode.insertBefore(t,this.fancybox.$carousel),this.$container=t}},{key:"update",value:function(){var e,t=this.fancybox.getSlide(),n=t.index,i=this.fancybox.items.length,o=t.downloadSrc||("image"!==t.type||t.error?null:t.src),r=x(this.fancybox.$container.querySelectorAll("a.fancybox__button--download"));try{for(r.s();!(e=r.n()).done;){var s=e.value;o?(s.removeAttribute("disabled"),s.removeAttribute("tabindex"),s.setAttribute("href",o),s.setAttribute("download",o),s.setAttribute("target","_blank")):(s.setAttribute("disabled",""),s.setAttribute("tabindex",-1),s.removeAttribute("href"),s.removeAttribute("download"))}}catch(e){r.e(e)}finally{r.f()}var a,l=t.Panzoom,c=l&&l.option("maxScale")>l.option("baseScale"),u=x(this.fancybox.$container.querySelectorAll(".fancybox__button--zoom"));try{for(u.s();!(a=u.n()).done;){var d=a.value;c?d.removeAttribute("disabled"):d.setAttribute("disabled","")}}catch(e){u.e(e)}finally{u.f()}var h,f=x(this.fancybox.$container.querySelectorAll("[data-fancybox-index]"));try{for(f.s();!(h=f.n()).done;)h.value.innerHTML=t.index+1}catch(e){f.e(e)}finally{f.f()}var p,g=x(this.fancybox.$container.querySelectorAll("[data-fancybox-count]"));try{for(g.s();!(p=g.n()).done;)p.value.innerHTML=i}catch(e){g.e(e)}finally{g.f()}if(!this.fancybox.option("infinite")){var v,m=x(this.fancybox.$container.querySelectorAll("[data-fancybox-prev]"));try{for(m.s();!(v=m.n()).done;){var b=v.value;0===n?b.setAttribute("disabled",""):b.removeAttribute("disabled")}}catch(e){m.e(e)}finally{m.f()}var y,T=x(this.fancybox.$container.querySelectorAll("[data-fancybox-next]"));try{for(T.s();!(y=T.n()).done;){var S=y.value;n===i-1?S.setAttribute("disabled",""):S.removeAttribute("disabled")}}catch(e){T.e(e)}finally{T.f()}}}},{key:"cleanup",value:function(){this.Slideshow&&this.Slideshow.isActive()&&this.Slideshow.clearTimer(),this.$container&&this.$container.remove(),this.$container=null}},{key:"attach",value:function(){this.fancybox.on(this.events)}},{key:"detach",value:function(){this.fancybox.off(this.events),this.cleanup()}}]),fe);function fe(e){var n=this;a(this,fe),this.fancybox=e,this.$container=null,this.state="init";for(var t=0,i=["onInit","onPrepare","onDone","onKeydown","onClosing","onChange","onSettle","onRefresh"];t<i.length;t++){var o=i[t];this[o]=this[o].bind(this)}this.events={init:this.onInit,prepare:this.onPrepare,done:this.onDone,keydown:this.onKeydown,closing:this.onClosing,"Carousel.change":this.onChange,"Carousel.settle":this.onSettle,"Carousel.Panzoom.touchStart":function(){return n.onRefresh()},"Image.startAnimation":function(e,t){return n.onRefresh(t)},"Image.afterUpdate":function(e,t){return n.onRefresh(t)}}}function pe(e){a(this,pe),this.fancybox=e,this.active=!1,this.handleVisibilityChange=this.handleVisibilityChange.bind(this)}function H(e){a(this,H),this.fancybox=e;for(var t=0,n=["onChange","onClosing"];t<n.length;t++){var i=n[t];this[i]=this[i].bind(this)}this.events={initCarousel:this.onChange,"Carousel.change":this.onChange,closing:this.onClosing},this.hasCreatedHistory=!1,this.origHash="",this.timer=null}he.defaults=de;var ge,de={ScrollLock:K,Thumbs:A,Html:w,Toolbar:he,Image:ae,Hash:ce},ve={startIndex:0,preload:1,infinite:!0,showClass:"fancybox-zoomInUp",hideClass:"fancybox-fadeOut",animated:!0,hideScrollbar:!0,parentEl:null,mainClass:null,autoFocus:!0,trapFocus:!0,placeFocusBack:!0,click:"close",closeButton:"inside",dragToClose:!0,keyboard:{Escape:"close",Delete:"close",Backspace:"close",PageUp:"next",PageDown:"prev",ArrowUp:"next",ArrowDown:"prev",ArrowRight:"next",ArrowLeft:"prev"},template:{closeButton:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" tabindex="-1"><path d="M20 20L4 4m16 0L4 20"/></svg>',spinner:'<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" viewBox="25 25 50 50" tabindex="-1"><circle cx="50" cy="50" r="20"/></svg>',main:null},l10n:{CLOSE:"Close",NEXT:"Next",PREV:"Previous",MODAL:"You can close this modal content with the ESC key",ERROR:"Something Went Wrong, Please Try Again Later",IMAGE_ERROR:"Image Not Found",ELEMENT_NOT_FOUND:"HTML Element Not Found",AJAX_NOT_FOUND:"Error Loading AJAX : Not Found",AJAX_FORBIDDEN:"Error Loading AJAX : Forbidden",IFRAME_ERROR:"Error Loading Page",TOGGLE_ZOOM:"Toggle zoom level",TOGGLE_THUMBS:"Toggle thumbnails",TOGGLE_SLIDESHOW:"Toggle slideshow",TOGGLE_FULLSCREEN:"Toggle full-screen mode",DOWNLOAD:"Download"}},B=new Map,me=0,I=(n(L,v),ge=i(L),t(L,[{key:"option",value:function(e){for(var t=this.getSlide(),t=t?t[e]:void 0,n=arguments.length,i=new Array(1<n?n-1:0),o=1;o<n;o++)i[o-1]=arguments[o];return void 0!==t?"function"==typeof t?t.call.apply(t,[this,this].concat(i)):t:(t=_(r(L.prototype),"option",this)).call.apply(t,[this,e].concat(i))}},{key:"bindHandlers",value:function(){for(var e=0,t=["onMousedown","onKeydown","onClick","onFocus","onCreateSlide","onSettle","onTouchMove","onTouchEnd","onTransform"];e<t.length;e++){var n=t[e];this[n]=this[n].bind(this)}}},{key:"attachEvents",value:function(){document.addEventListener("mousedown",this.onMousedown),document.addEventListener("keydown",this.onKeydown,!0),this.option("trapFocus")&&document.addEventListener("focus",this.onFocus,!0),this.$container.addEventListener("click",this.onClick)}},{key:"detachEvents",value:function(){document.removeEventListener("mousedown",this.onMousedown),document.removeEventListener("keydown",this.onKeydown,!0),document.removeEventListener("focus",this.onFocus,!0),this.$container.removeEventListener("click",this.onClick)}},{key:"initLayout",value:function(){var n=this,e=(this.$root=this.option("parentEl")||document.body,this.option("template.main"));e&&(this.$root.insertAdjacentHTML("beforeend",this.localize(e)),this.$container=this.$root.querySelector(".fancybox__container")),this.$container||(this.$container=document.createElement("div"),this.$root.appendChild(this.$container)),this.$container.onscroll=function(){return n.$container.scrollLeft=0,!1},Object.entries({class:"fancybox__container",role:"dialog",tabIndex:"-1","aria-modal":"true","aria-hidden":"true","aria-label":this.localize("{{MODAL}}")}).forEach(function(e){var t;return(t=n.$container).setAttribute.apply(t,y(e))}),this.option("animated")&&this.$container.classList.add("is-animated"),this.$backdrop=this.$container.querySelector(".fancybox__backdrop"),this.$backdrop||(this.$backdrop=document.createElement("div"),this.$backdrop.classList.add("fancybox__backdrop"),this.$container.appendChild(this.$backdrop)),this.$carousel=this.$container.querySelector(".fancybox__carousel"),this.$carousel||(this.$carousel=document.createElement("div"),this.$carousel.classList.add("fancybox__carousel"),this.$container.appendChild(this.$carousel)),(this.$container.Fancybox=this).id=this.$container.getAttribute("id"),this.id||(this.id=this.options.id||++me,this.$container.setAttribute("id","fancybox-"+this.id));var t,e=this.option("mainClass");return e&&(t=this.$container.classList).add.apply(t,y(e.split(" "))),document.documentElement.classList.add("with-fancybox"),this.trigger("initLayout"),this}},{key:"setItems",value:function(e){var t,n=[],i=x(e);try{for(i.s();!(t=i.n()).done;){var o,r,s=t.value,a=s.$trigger,l=(a&&(o=a.dataset||{},s.src=o.src||a.getAttribute("href")||s.src,s.type=o.type||s.type,!s.src&&a instanceof HTMLImageElement&&(s.src=a.currentSrc||s.$trigger.src)),s.$thumb),c=(l||!(l=(r=s.$trigger&&s.$trigger.origTarget)?r instanceof HTMLImageElement?r:r.querySelector("img:not([aria-hidden])"):l)&&s.$trigger&&(l=s.$trigger instanceof HTMLImageElement?s.$trigger:s.$trigger.querySelector("img:not([aria-hidden])")),s.$thumb=l||null,s.thumb);(c=!c&&l&&!(c=l.currentSrc||l.src)&&l.dataset?l.dataset.lazySrc||l.dataset.src:c)||"image"!==s.type||(c=s.src),s.thumb=c||null,s.caption=s.caption||"",n.push(s)}}catch(e){i.e(e)}finally{i.f()}this.items=n}},{key:"initCarousel",value:function(){var o=this;return this.Carousel=new C(this.$carousel,p(!0,{},{prefix:"",classNames:{viewport:"fancybox__viewport",track:"fancybox__track",slide:"fancybox__slide"},textSelection:!0,preload:this.option("preload"),friction:.88,slides:this.items,initialPage:this.options.startIndex,slidesPerPage:1,infiniteX:this.option("infinite"),infiniteY:!0,l10n:this.option("l10n"),Dots:!1,Navigation:{classNames:{main:"fancybox__nav",button:"carousel__button",next:"is-next",prev:"is-prev"}},Panzoom:{textSelection:!0,panOnlyZoomed:function(){return o.Carousel&&o.Carousel.pages&&o.Carousel.pages.length<2&&!o.option("dragToClose")},lockAxis:function(){var e;if(o.Carousel)return e="x",o.option("dragToClose")&&(e+="y"),e}},on:{"*":function(e){for(var t=arguments.length,n=new Array(1<t?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return o.trigger.apply(o,["Carousel.".concat(e)].concat(n))},init:function(e){return o.Carousel=e},createSlide:this.onCreateSlide,settle:this.onSettle}},this.option("Carousel"))),this.option("dragToClose")&&this.Carousel.Panzoom.on({touchMove:this.onTouchMove,afterTransform:this.onTransform,touchEnd:this.onTouchEnd}),this.trigger("initCarousel"),this}},{key:"onCreateSlide",value:function(e,t){var n,i,o=t.caption||"";"string"==typeof(o="function"==typeof this.options.caption?this.options.caption.call(this,this,this.Carousel,t):o)&&o.length&&(n=document.createElement("div"),i="fancybox__caption_".concat(this.id,"_").concat(t.index),n.className="fancybox__caption",n.innerHTML=o,n.setAttribute("id",i),t.$caption=t.$el.appendChild(n),t.$el.classList.add("has-caption"),t.$el.setAttribute("aria-labelledby",i))}},{key:"onSettle",value:function(){this.option("autoFocus")&&this.focus()}},{key:"onFocus",value:function(e){this.isTopmost()&&this.focus(e)}},{key:"onClick",value:function(e){if(!e.defaultPrevented){var t=e.composedPath()[0];if(t.matches("[data-fancybox-close]"))e.preventDefault(),L.close(!1,e);else if(t.matches("[data-fancybox-next]"))e.preventDefault(),L.next();else if(t.matches("[data-fancybox-prev]"))e.preventDefault(),L.prev();else{var n=document.activeElement;if(n){if(n.closest("[contenteditable]"))return;t.matches(te)||n.blur()}if(!t.closest(".fancybox__content")&&!getSelection().toString().length&&!1!==this.trigger("click",e))switch(this.option("click")){case"close":this.close();break;case"next":this.next()}}}}},{key:"onTouchMove",value:function(){var e=this.getSlide().Panzoom;return!e||1===e.content.scale}},{key:"onTouchEnd",value:function(e){var t=e.dragOffset.y;150<=Math.abs(t)||35<=Math.abs(t)&&e.dragOffset.time<350?(this.option("hideClass")&&(this.getSlide().hideClass="fancybox-throwOut".concat(e.content.y<0?"Up":"Down")),this.close()):"y"===e.lockAxis&&e.panTo({y:0})}},{key:"onTransform",value:function(e){var t;this.$backdrop&&(t=(t=Math.abs(e.content.y))<1?"":Math.max(.33,Math.min(1,1-t/e.content.fitHeight*1.5)),this.$container.style.setProperty("--fancybox-ts",t?"0s":""),this.$container.style.setProperty("--fancybox-opacity",t))}},{key:"onMousedown",value:function(){"ready"===this.state&&document.body.classList.add("is-using-mouse")}},{key:"onKeydown",value:function(e){var t,n,i,o;this.isTopmost()&&(document.body.classList.remove("is-using-mouse"),t=e.key,!(n=this.option("keyboard"))||e.ctrlKey||e.altKey||e.shiftKey||(i=e.composedPath()[0],o=(o=document.activeElement&&document.activeElement.classList)&&o.contains("carousel__button"),("Escape"===t||o||!e.target.isContentEditable&&-1===["BUTTON","TEXTAREA","OPTION","INPUT","SELECT","VIDEO"].indexOf(i.nodeName))&&!1!==this.trigger("keydown",t,e)&&"function"==typeof this[o=n[t]]&&this[o]()))}},{key:"getSlide",value:function(){var e,t=this.Carousel;return t&&(e=null===t.page?t.option("initialPage"):t.page,(t=t.pages||[]).length&&t[e])?t[e].slides[0]:null}},{key:"focus",value:function(e){if(!(L.ignoreFocusChange||-1<["init","closing","customClosing","destroy"].indexOf(this.state))){var t=this.$container,n=this.getSlide(),i="done"===n.state?n.$el:null;if(!i||!i.contains(document.activeElement)){e&&e.preventDefault(),L.ignoreFocusChange=!0;for(var o,r=[],s=0,a=Array.from(t.querySelectorAll(te));s<a.length;s++){var l=a[s],c=l.offsetParent,u=i&&i.contains(l),d=!this.Carousel.$viewport.contains(l);c&&(u||d)?(r.push(l),void 0!==l.dataset.origTabindex&&(l.tabIndex=l.dataset.origTabindex,l.removeAttribute("data-orig-tabindex")),(l.hasAttribute("autoFocus")||!o&&u&&!l.classList.contains("carousel__button"))&&(o=l)):(l.dataset.origTabindex=void 0===l.dataset.origTabindex?l.getAttribute("tabindex"):l.dataset.origTabindex,l.tabIndex=-1)}e?-1<r.indexOf(e.target)?this.lastFocus=e.target:this.lastFocus===t?E(r[r.length-1]):E(t):this.option("autoFocus")&&o?E(o):r.indexOf(document.activeElement)<0&&E(t),this.lastFocus=document.activeElement,L.ignoreFocusChange=!1}}}},{key:"hideScrollbar",value:function(){var e,t,n;k&&(e=window.innerWidth-document.documentElement.getBoundingClientRect().width,t="fancybox-style-noscroll",(n=document.getElementById(t))||0<e&&((n=document.createElement("style")).id=t,n.type="text/css",n.innerHTML=".compensate-for-scrollbar {padding-right: ".concat(e,"px;}"),document.getElementsByTagName("head")[0].appendChild(n),document.body.classList.add("compensate-for-scrollbar")))}},{key:"revealScrollbar",value:function(){document.body.classList.remove("compensate-for-scrollbar");var e=document.getElementById("fancybox-style-noscroll");e&&e.remove()}},{key:"clearContent",value:function(e){this.Carousel.trigger("removeSlide",e),e.$content&&(e.$content.remove(),e.$content=null),e.$closeButton&&(e.$closeButton.remove(),e.$closeButton=null),e._className&&e.$el.classList.remove(e._className)}},{key:"setContent",value:function(e,t){var n,i=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},o=e.$el;if(t instanceof HTMLElement?-1<["img","iframe","video","audio"].indexOf(t.nodeName.toLowerCase())?(n=document.createElement("div")).appendChild(t):n=t:(t=document.createRange().createContextualFragment(t),(n=document.createElement("div")).appendChild(t)),(n=e.filter&&!e.error?n.querySelector(e.filter):n)instanceof Element)return e._className="has-".concat(i.suffix||e.type||"unknown"),o.classList.add(e._className),n.classList.add("fancybox__content"),"none"!==n.style.display&&"none"!==getComputedStyle(n).getPropertyValue("display")||(n.style.display=e.display||this.option("defaultDisplay")||"flex"),e.id&&n.setAttribute("id",e.id),e.$content=n,o.prepend(n),this.manageCloseButton(e),"loading"!==e.state&&this.revealContent(e),n;this.setError(e,"{{ELEMENT_NOT_FOUND}}")}},{key:"manageCloseButton",value:function(e){var t,n=this,i=void 0===e.closeButton?this.option("closeButton"):e.closeButton;!i||"top"===i&&this.$closeButton||((t=document.createElement("button")).classList.add("carousel__button","is-close"),t.setAttribute("title",this.options.l10n.CLOSE),t.innerHTML=this.option("template.closeButton"),t.addEventListener("click",function(e){return n.close(e)}),"inside"===i?(e.$closeButton&&e.$closeButton.remove(),e.$closeButton=e.$content.appendChild(t)):this.$closeButton=this.$container.insertBefore(t,this.$container.firstChild))}},{key:"revealContent",value:function(e){var t=this,n=(this.trigger("reveal",e),e.$content.style.visibility="",!1);(n=e.error||"loading"===e.state||null!==this.Carousel.prevPage||e.index!==this.options.startIndex?n:void 0===e.showClass?this.option("showClass"):e.showClass)?(e.state="animating",this.animateCSS(e.$content,n,function(){t.done(e)})):this.done(e)}},{key:"animateCSS",value:function(n,i,o){n&&n.dispatchEvent(new CustomEvent("animationend",{bubbles:!0,cancelable:!0})),n&&i?(n.addEventListener("animationend",function e(t){t.currentTarget===this&&(n.removeEventListener("animationend",e),o&&o(),n.classList.remove(i))}),n.classList.add(i)):"function"==typeof o&&o()}},{key:"done",value:function(e){e.state="done",this.trigger("done",e);var t=this.getSlide();t&&e.index===t.index&&this.option("autoFocus")&&this.focus()}},{key:"setError",value:function(e,t){e.error=t,this.hideLoading(e),this.clearContent(e);var n=document.createElement("div");n.classList.add("fancybox-error"),n.innerHTML=this.localize(t||"<p>{{ERROR}}</p>"),this.setContent(e,n,{suffix:"error"})}},{key:"showLoading",value:function(e){var t=this,n=(e.state="loading",e.$el.classList.add("is-loading"),e.$el.querySelector(".fancybox__spinner"));n||((n=document.createElement("div")).classList.add("fancybox__spinner"),n.innerHTML=this.option("template.spinner"),n.addEventListener("click",function(){t.Carousel.Panzoom.velocity||t.close()}),e.$el.prepend(n))}},{key:"hideLoading",value:function(e){var t=e.$el&&e.$el.querySelector(".fancybox__spinner");t&&(t.remove(),e.$el.classList.remove("is-loading")),"loading"===e.state&&(this.trigger("load",e),e.state="ready")}},{key:"next",value:function(){var e=this.Carousel;e&&1<e.pages.length&&e.slideNext()}},{key:"prev",value:function(){var e=this.Carousel;e&&1<e.pages.length&&e.slidePrev()}},{key:"jumpTo",value:function(){var e;this.Carousel&&(e=this.Carousel).slideTo.apply(e,arguments)}},{key:"isClosing",value:function(){return["closing","customClosing","destroy"].includes(this.state)}},{key:"isTopmost",value:function(){return L.getInstance().id==this.id}},{key:"close",value:function(e){var t,n=this;e&&e.preventDefault(),this.isClosing()||!1===this.trigger("shouldClose",e)||(this.state="closing",this.Carousel.Panzoom.destroy(),this.detachEvents(),this.trigger("closing",e),"destroy"!==this.state&&(this.$container.setAttribute("aria-hidden","true"),this.$container.classList.add("is-closing"),t=this.getSlide(),this.Carousel.slides.forEach(function(e){e.$content&&e.index!==t.index&&n.Carousel.trigger("removeSlide",e)}),"closing"===this.state&&(e=void 0===t.hideClass?this.option("hideClass"):t.hideClass,this.animateCSS(t.$content,e,function(){n.destroy()},!0))))}},{key:"destroy",value:function(){var e;"destroy"!==this.state&&(this.state="destroy",this.trigger("destroy"),e=this.option("placeFocusBack")?this.option("triggerTarget",this.getSlide().$trigger):null,this.Carousel.destroy(),this.detachPlugins(),this.Carousel=null,this.options={},this.events={},this.$container.remove(),this.$container=this.$backdrop=this.$carousel=null,e&&E(e),B.delete(this.id),(e=L.getInstance())?e.focus():(document.documentElement.classList.remove("with-fancybox"),document.body.classList.remove("is-using-mouse"),this.revealScrollbar()))}}],[{key:"show",value:function(e){return new L(e,1<arguments.length&&void 0!==arguments[1]?arguments[1]:{})}},{key:"fromEvent",value:function(n){var i,o,r,s,e,t,a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if(!n.defaultPrevented&&!(n.button&&0!==n.button||n.ctrlKey||n.metaKey||n.shiftKey))return r=n.composedPath()[0],(e=(s=r).matches("[data-fancybox-trigger]")||(s=s.closest("[data-fancybox-trigger]"))?(a.triggerTarget=s)&&s.dataset&&s.dataset.fancyboxTrigger:e)&&(e=document.querySelectorAll('[data-fancybox="'.concat(e,'"]')),t=parseInt(s.dataset.fancyboxIndex,10)||0,s=e.length?e[t]:s),Array.from(L.openers.keys()).reverse().some(function(e){o=s||r;var t=!1;try{o instanceof Element&&("string"==typeof e||e instanceof String)&&(t=o.matches(e)||(o=o.closest(e)))}catch(e){}return!!t&&(n.preventDefault(),i=e,!0)}),e=!1,i&&(a.event=n,(a.target=o).origTarget=r,e=L.fromOpener(i,a),(t=L.getInstance())&&"ready"===t.state&&n.detail&&document.body.classList.add("is-using-mouse")),e}},{key:"fromOpener",value:function(e){var t,n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},i=[],o=n.startIndex||0,r=n.target||null,s=void 0!==(n=p({},n,L.openers.get(e))).groupAll&&n.groupAll,a=void 0===n.groupAttr?"data-fancybox":n.groupAttr,l=a&&r?r.getAttribute("".concat(a)):"";return r&&!l&&!s||(t=n.root||(r?r.getRootNode():document.body),i=[].slice.call(t.querySelectorAll(e))),!!(i=r&&!s?l?i.filter(function(e){return e.getAttribute("".concat(a))===l}):[r]:i).length&&(!((t=L.getInstance())&&-1<i.indexOf(t.options.$trigger))&&(o=r?i.indexOf(r):o,new L(i=i.map(function(e){for(var t=["false","0","no","null","undefined"],n=["true","1","yes"],i=Object.assign({},e.dataset),o={},r=0,s=Object.entries(i);r<s.length;r++){var a=c(s[r],2),l=a[0],a=a[1];if("fancybox"!==l)if("width"===l||"height"===l)o["_".concat(l)]=a;else if("string"==typeof a||a instanceof String)if(-1<t.indexOf(a))o[l]=!1;else if(-1<n.indexOf(o[l]))o[l]=!0;else try{o[l]=JSON.parse(a)}catch(e){o[l]=a}else o[l]=a}return e instanceof Element&&(o.$trigger=e),o}),p({},n,{startIndex:o,$trigger:r}))))}},{key:"bind",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};function n(){document.body.addEventListener("click",L.fromEvent,!1)}k&&(L.openers.size||(/complete|interactive|loaded/.test(document.readyState)?n():document.addEventListener("DOMContentLoaded",n)),L.openers.set(e,t))}},{key:"unbind",value:function(e){L.openers.delete(e),L.openers.size||L.destroy()}},{key:"destroy",value:function(){for(var e;e=L.getInstance();)e.destroy();L.openers=new Map,document.body.removeEventListener("click",L.fromEvent,!1)}},{key:"getInstance",value:function(e){return e?B.get(e):Array.from(B.values()).reverse().find(function(e){return!e.isClosing()&&e})||null}},{key:"close",value:function(){var e=!(0<arguments.length&&void 0!==arguments[0])||arguments[0],t=1<arguments.length?arguments[1]:void 0;if(e){var n,i=x(B.values());try{for(i.s();!(n=i.n()).done;)n.value.close(t)}catch(e){i.e(e)}finally{i.f()}}else{var o=L.getInstance();o&&o.close(t)}}},{key:"next",value:function(){var e=L.getInstance();e&&e.next()}},{key:"prev",value:function(){var e=L.getInstance();e&&e.prev()}}]),L);function L(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};return a(this,L),e=e.map(function(e){return e.width&&(e._width=e.width),e.height&&(e._height=e.height),e}),(t=ge.call(this,p(!0,{},ve,t))).bindHandlers(),t.state="init",t.setItems(e),t.attachPlugins(L.Plugins),t.trigger("init"),!0===t.option("hideScrollbar")&&t.hideScrollbar(),t.initLayout(),t.initCarousel(),t.attachEvents(),B.set(t.id,s(t)),t.trigger("prepare"),t.state="ready",t.trigger("ready"),t.$container.setAttribute("aria-hidden","false"),t.option("trapFocus")&&t.focus(),t}I.version="4.0.31",I.defaults=ve,I.openers=new Map,I.Plugins=de,I.bind("[data-fancybox]");for(var be=0,ye=Object.entries(I.Plugins||{});be<ye.length;be++){var D=c(ye[be],2),D=(D[0],D[1]);"function"==typeof D.create&&D.create(I)}e.Carousel=C,e.Fancybox=I,e.Panzoom=m}),function(X){var z={mode:"horizontal",slideSelector:"",infiniteLoop:!0,hideControlOnEnd:!1,speed:500,easing:null,slideMargin:0,startSlide:0,randomStart:!1,captions:!1,ticker:!1,tickerHover:!1,adaptiveHeight:!1,adaptiveHeightSpeed:500,video:!1,useCSS:!0,preloadImages:"visible",responsive:!0,slideZIndex:50,wrapperClass:"bx-wrapper",touchEnabled:!0,swipeThreshold:50,oneToOneTouch:!0,preventDefaultSwipeX:!0,preventDefaultSwipeY:!1,ariaLive:!0,ariaHidden:!0,keyboardEnabled:!1,pager:!0,pagerType:"full",pagerShortSeparator:" / ",pagerSelector:null,buildPager:null,pagerCustom:null,controls:!0,nextText:"Next",prevText:"Prev",nextSelector:null,prevSelector:null,autoControls:!1,startText:"Start",stopText:"Stop",autoControlsCombine:!1,autoControlsSelector:null,auto:!1,pause:4e3,autoStart:!0,autoDirection:"next",stopAutoOnClick:!1,autoHover:!1,autoDelay:0,autoSlideForOnePage:!1,minSlides:1,maxSlides:1,moveSlides:0,slideWidth:0,shrinkItems:!1,onSliderLoad:function(){return!0},onSlideBefore:function(){return!0},onSlideAfter:function(){return!0},onSlideNext:function(){return!0},onSlidePrev:function(){return!0},onSliderResize:function(){return!0}};X.fn.bxSlider=function(t){var c,u,o,r,n,e,s,a,l,d,h,f,p,g,v,m,b,y,T,S,x,P,w,A,C,N,M,E,k,G,R,_,H,$,B,F,V,W,I,L,D,O;return 0===this.length?this:1<this.length?(this.each(function(){X(this).bxSlider(t)}),this):(c={},u=this,o=X(window).width(),r=X(window).height(),X(u).data("bxSlider")?void 0:(n=function(){X(u).data("bxSlider")||(c.settings=X.extend({},z,t),c.settings.slideWidth=parseInt(c.settings.slideWidth),c.children=u.children(c.settings.slideSelector),c.children.length<c.settings.minSlides&&(c.settings.minSlides=c.children.length),c.children.length<c.settings.maxSlides&&(c.settings.maxSlides=c.children.length),c.settings.randomStart&&(c.settings.startSlide=Math.floor(Math.random()*c.children.length)),c.active={index:c.settings.startSlide},c.carousel=1<c.settings.minSlides||1<c.settings.maxSlides,c.carousel&&(c.settings.preloadImages="all"),c.minThreshold=c.settings.minSlides*c.settings.slideWidth+(c.settings.minSlides-1)*c.settings.slideMargin,c.maxThreshold=c.settings.maxSlides*c.settings.slideWidth+(c.settings.maxSlides-1)*c.settings.slideMargin,c.working=!1,c.controls={},c.interval=null,c.animProp="vertical"===c.settings.mode?"top":"left",c.usingCSS=c.settings.useCSS&&"fade"!==c.settings.mode&&function(){for(var e=document.createElement("div"),t=["WebkitPerspective","MozPerspective","OPerspective","msPerspective"],n=0;n<t.length;n++)if(void 0!==e.style[t[n]])return c.cssPrefix=t[n].replace("Perspective","").toLowerCase(),c.animProp="-"+c.cssPrefix+"-transform",!0;return!1}(),"vertical"===c.settings.mode&&(c.settings.maxSlides=c.settings.minSlides),u.data("origStyle",u.attr("style")),u.children(c.settings.slideSelector).each(function(){X(this).data("origStyle",X(this).attr("style"))}),e())},e=function(){var e=c.children.eq(c.settings.startSlide);u.wrap('<div class="'+c.settings.wrapperClass+'"><div class="bx-viewport"></div></div>'),c.viewport=u.parent(),c.settings.ariaLive&&!c.settings.ticker&&c.viewport.attr("aria-live","polite"),c.loader=X('<div class="bx-loading" />'),c.viewport.prepend(c.loader),u.css({width:"horizontal"===c.settings.mode?1e3*c.children.length+215+"%":"auto",position:"relative"}),c.usingCSS&&c.settings.easing?u.css("-"+c.cssPrefix+"-transition-timing-function",c.settings.easing):c.settings.easing||(c.settings.easing="swing"),c.viewport.css({width:"100%",overflow:"hidden",position:"relative"}),c.viewport.parent().css({maxWidth:d()}),c.children.css({float:"horizontal"===c.settings.mode?"left":"none",listStyle:"none",position:"relative"}),c.children.css("width",h()),"horizontal"===c.settings.mode&&0<c.settings.slideMargin&&c.children.css("marginRight",c.settings.slideMargin),"vertical"===c.settings.mode&&0<c.settings.slideMargin&&c.children.css("marginBottom",c.settings.slideMargin),"fade"===c.settings.mode&&(c.children.css({position:"absolute",zIndex:0,display:"none"}),c.children.eq(c.settings.startSlide).css({zIndex:c.settings.slideZIndex,display:"block"})),c.controls.el=X('<div class="bx-controls" />'),c.settings.captions&&x(),c.active.last=c.settings.startSlide===p()-1,c.settings.video&&u.fitVids(),"all"!==c.settings.preloadImages&&!c.settings.ticker||(e=c.children),c.settings.ticker?c.settings.pager=!1:(c.settings.controls&&T(),c.settings.auto&&c.settings.autoControls&&S(),c.settings.pager&&y(),(c.settings.controls||c.settings.autoControls||c.settings.pager)&&c.viewport.after(c.controls.el)),s(e,a)},s=function(e,t){var n=e.find('img:not([src=""]), iframe').length,i=0;return 0===n?void t():void e.find('img:not([src=""]), iframe').each(function(){X(this).one("load error",function(){++i===n&&t()}).each(function(){this.complete&&X(this).trigger("load")})})},a=function(){var e,t;c.settings.infiniteLoop&&"fade"!==c.settings.mode&&!c.settings.ticker&&(t="vertical"===c.settings.mode?c.settings.minSlides:c.settings.maxSlides,e=c.children.slice(0,t).clone(!0).addClass("bx-clone"),t=c.children.slice(-t).clone(!0).addClass("bx-clone"),c.settings.ariaHidden&&(e.attr("aria-hidden",!0),t.attr("aria-hidden",!0)),u.append(e).prepend(t)),c.loader.remove(),v(),"vertical"===c.settings.mode&&(c.settings.adaptiveHeight=!0),c.viewport.height(l()),u.redrawSlider(),c.settings.onSliderLoad.call(u,c.active.index),c.initialized=!0,c.settings.responsive&&X(window).bind("resize",D),c.settings.auto&&c.settings.autoStart&&(1<p()||c.settings.autoSlideForOnePage)&&R(),c.settings.ticker&&_(),c.settings.pager&&M(c.settings.startSlide),c.settings.controls&&G(),c.settings.touchEnabled&&!c.settings.ticker&&F(),c.settings.keyboardEnabled&&!c.settings.ticker&&X(document).keydown(B)},l=function(){var t=0,e=X();if("vertical"===c.settings.mode||c.settings.adaptiveHeight)if(c.carousel){var n=1===c.settings.moveSlides?c.active.index:c.active.index*g(),e=c.children.eq(n);for(i=1;i<=c.settings.maxSlides-1;i++)e=n+i>=c.children.length?e.add(c.children.eq(i-1)):e.add(c.children.eq(n+i))}else e=c.children.eq(c.active.index);else e=c.children;return"vertical"===c.settings.mode?(e.each(function(e){t+=X(this).outerHeight()}),0<c.settings.slideMargin&&(t+=c.settings.slideMargin*(c.settings.minSlides-1))):t=Math.max.apply(Math,e.map(function(){return X(this).outerHeight(!1)}).get()),"border-box"===c.viewport.css("box-sizing")?t+=parseFloat(c.viewport.css("padding-top"))+parseFloat(c.viewport.css("padding-bottom"))+parseFloat(c.viewport.css("border-top-width"))+parseFloat(c.viewport.css("border-bottom-width")):"padding-box"===c.viewport.css("box-sizing")&&(t+=parseFloat(c.viewport.css("padding-top"))+parseFloat(c.viewport.css("padding-bottom"))),t},d=function(){var e="100%";return e=0<c.settings.slideWidth?"horizontal"===c.settings.mode?c.settings.maxSlides*c.settings.slideWidth+(c.settings.maxSlides-1)*c.settings.slideMargin:c.settings.slideWidth:e},h=function(){var e=c.settings.slideWidth,t=c.viewport.width();if(0===c.settings.slideWidth||c.settings.slideWidth>t&&!c.carousel||"vertical"===c.settings.mode)e=t;else if(1<c.settings.maxSlides&&"horizontal"===c.settings.mode){if(t>c.maxThreshold)return e;t<c.minThreshold?e=(t-c.settings.slideMargin*(c.settings.minSlides-1))/c.settings.minSlides:c.settings.shrinkItems&&(e=Math.floor((t+c.settings.slideMargin)/Math.ceil((t+c.settings.slideMargin)/(e+c.settings.slideMargin))-c.settings.slideMargin))}return e},f=function(){var e,t=1;return"horizontal"===c.settings.mode&&0<c.settings.slideWidth?t=c.viewport.width()<c.minThreshold?c.settings.minSlides:c.viewport.width()>c.maxThreshold?c.settings.maxSlides:(e=c.children.first().width()+c.settings.slideMargin,Math.floor((c.viewport.width()+c.settings.slideMargin)/e)):"vertical"===c.settings.mode&&(t=c.settings.minSlides),t},p=function(){var e=0,t=0,n=0;if(0<c.settings.moveSlides)if(c.settings.infiniteLoop)e=Math.ceil(c.children.length/g());else for(;t<c.children.length;)++e,t=n+f(),n+=c.settings.moveSlides<=f()?c.settings.moveSlides:f();else e=Math.ceil(c.children.length/f());return e},g=function(){return 0<c.settings.moveSlides&&c.settings.moveSlides<=f()?c.settings.moveSlides:f()},v=function(){var e,t;c.children.length>c.settings.maxSlides&&c.active.last&&!c.settings.infiniteLoop?"horizontal"===c.settings.mode?(e=(t=c.children.last()).position(),m(-(e.left-(c.viewport.width()-t.outerWidth())),"reset",0)):"vertical"===c.settings.mode&&(t=c.children.length-c.settings.minSlides,e=c.children.eq(t).position(),m(-e.top,"reset",0)):(e=c.children.eq(c.active.index*g()).position(),c.active.index===p()-1&&(c.active.last=!0),void 0!==e&&("horizontal"===c.settings.mode?m(-e.left,"reset",0):"vertical"===c.settings.mode&&m(-e.top,"reset",0)))},m=function t(e,n,i,o){var r;c.usingCSS?(r="vertical"===c.settings.mode?"translate3d(0, "+e+"px, 0)":"translate3d("+e+"px, 0, 0)",u.css("-"+c.cssPrefix+"-transition-duration",i/1e3+"s"),"slide"===n?(u.css(c.animProp,r),0!==i?u.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd",function(e){X(e.target).is(u)&&(u.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"),E())}):E()):"reset"===n?u.css(c.animProp,r):"ticker"===n&&(u.css("-"+c.cssPrefix+"-transition-timing-function","linear"),u.css(c.animProp,r),0!==i?u.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd",function(e){X(e.target).is(u)&&(u.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"),t(o.resetValue,"reset",0),H())}):(t(o.resetValue,"reset",0),H()))):((r={})[c.animProp]=e,"slide"===n?u.animate(r,i,c.settings.easing,function(){E()}):"reset"===n?u.css(c.animProp,e):"ticker"===n&&u.animate(r,i,"linear",function(){t(o.resetValue,"reset",0),H()}))},b=function(){for(var e="",t="",n=p(),i=0;i<n;i++)t="",c.settings.buildPager&&X.isFunction(c.settings.buildPager)||c.settings.pagerCustom?(t=c.settings.buildPager(i),c.pagerEl.addClass("bx-custom-pager")):(t=i+1,c.pagerEl.addClass("bx-default-pager")),e+='<div class="bx-pager-item"><a href="" data-slide-index="'+i+'" class="bx-pager-link">'+t+"</a></div>";c.pagerEl.html(e)},y=function(){c.settings.pagerCustom?c.pagerEl=X(c.settings.pagerCustom):(c.pagerEl=X('<div class="bx-pager" />'),c.settings.pagerSelector?X(c.settings.pagerSelector).html(c.pagerEl):c.controls.el.addClass("bx-has-pager").append(c.pagerEl),b()),c.pagerEl.on("click touchend","a",N)},T=function(){c.controls.next=X('<a class="bx-next" href="">'+c.settings.nextText+"</a>"),c.controls.prev=X('<a class="bx-prev" href="">'+c.settings.prevText+"</a>"),c.controls.next.bind("click touchend",P),c.controls.prev.bind("click touchend",w),c.settings.nextSelector&&X(c.settings.nextSelector).append(c.controls.next),c.settings.prevSelector&&X(c.settings.prevSelector).append(c.controls.prev),c.settings.nextSelector||c.settings.prevSelector||(c.controls.directionEl=X('<div class="bx-controls-direction" />'),c.controls.directionEl.append(c.controls.prev).append(c.controls.next),c.controls.el.addClass("bx-has-controls-direction").append(c.controls.directionEl))},S=function(){c.controls.start=X('<div class="bx-controls-auto-item"><a class="bx-start" href="">'+c.settings.startText+"</a></div>"),c.controls.stop=X('<div class="bx-controls-auto-item"><a class="bx-stop" href="">'+c.settings.stopText+"</a></div>"),c.controls.autoEl=X('<div class="bx-controls-auto" />'),c.controls.autoEl.on("click",".bx-start",A),c.controls.autoEl.on("click",".bx-stop",C),c.settings.autoControlsCombine?c.controls.autoEl.append(c.controls.start):c.controls.autoEl.append(c.controls.start).append(c.controls.stop),c.settings.autoControlsSelector?X(c.settings.autoControlsSelector).html(c.controls.autoEl):c.controls.el.addClass("bx-has-controls-auto").append(c.controls.autoEl),k(c.settings.autoStart?"stop":"start")},x=function(){c.children.each(function(e){var t=X(this).find("img:first").attr("title");void 0!==t&&(""+t).length&&X(this).append('<div class="bx-caption"><span>'+t+"</span></div>")})},P=function(e){e.preventDefault(),c.controls.el.hasClass("disabled")||(c.settings.auto&&c.settings.stopAutoOnClick&&u.stopAuto(),u.goToNextSlide())},w=function(e){e.preventDefault(),c.controls.el.hasClass("disabled")||(c.settings.auto&&c.settings.stopAutoOnClick&&u.stopAuto(),u.goToPrevSlide())},A=function(e){u.startAuto(),e.preventDefault()},C=function(e){u.stopAuto(),e.preventDefault()},N=function(e){e.preventDefault(),c.controls.el.hasClass("disabled")||(c.settings.auto&&c.settings.stopAutoOnClick&&u.stopAuto(),void 0!==(e=X(e.currentTarget)).attr("data-slide-index")&&(e=parseInt(e.attr("data-slide-index")))!==c.active.index&&u.goToSlide(e))},M=function(n){var e=c.children.length;return"short"===c.settings.pagerType?(1<c.settings.maxSlides&&(e=Math.ceil(c.children.length/c.settings.maxSlides)),void c.pagerEl.html(n+1+c.settings.pagerShortSeparator+e)):(c.pagerEl.find("a").removeClass("active"),void c.pagerEl.each(function(e,t){X(t).find("a").eq(n).addClass("active")}))},E=function(){var e;c.settings.infiniteLoop&&(e="",0===c.active.index?e=c.children.eq(0).position():c.active.index===p()-1&&c.carousel?e=c.children.eq((p()-1)*g()).position():c.active.index===c.children.length-1&&(e=c.children.eq(c.children.length-1).position()),e&&("horizontal"===c.settings.mode?m(-e.left,"reset",0):"vertical"===c.settings.mode&&m(-e.top,"reset",0))),c.working=!1,c.settings.onSlideAfter.call(u,c.children.eq(c.active.index),c.oldIndex,c.active.index)},k=function(e){c.settings.autoControlsCombine?c.controls.autoEl.html(c.controls[e]):(c.controls.autoEl.find("a").removeClass("active"),c.controls.autoEl.find("a:not(.bx-"+e+")").addClass("active"))},G=function(){1===p()?(c.controls.prev.addClass("disabled"),c.controls.next.addClass("disabled")):!c.settings.infiniteLoop&&c.settings.hideControlOnEnd&&(0===c.active.index?(c.controls.prev.addClass("disabled"),c.controls.next):c.active.index===p()-1?(c.controls.next.addClass("disabled"),c.controls.prev):(c.controls.prev.removeClass("disabled"),c.controls.next)).removeClass("disabled")},R=function(){0<c.settings.autoDelay?setTimeout(u.startAuto,c.settings.autoDelay):(u.startAuto(),X(window).focus(function(){u.startAuto()}).blur(function(){u.stopAuto()})),c.settings.autoHover&&u.hover(function(){c.interval&&(u.stopAuto(!0),c.autoPaused=!0)},function(){c.autoPaused&&(u.startAuto(!0),c.autoPaused=null)})},_=function(){var e,t,n,i,o,r,s,a,l=0;"next"===c.settings.autoDirection?u.append(c.children.clone().addClass("bx-clone")):(u.prepend(c.children.clone().addClass("bx-clone")),e=c.children.first().position(),l="horizontal"===c.settings.mode?-e.left:-e.top),m(l,"reset",0),c.settings.pager=!1,c.settings.controls=!1,c.settings.autoControls=!1,c.settings.tickerHover&&(c.usingCSS?(i="horizontal"===c.settings.mode?4:5,c.viewport.hover(function(){t=u.css("-"+c.cssPrefix+"-transform"),n=parseFloat(t.split(",")[i]),m(n,"reset",0)},function(){a=0,c.children.each(function(e){a+="horizontal"===c.settings.mode?X(this).outerWidth(!0):X(this).outerHeight(!0)}),o=c.settings.speed/a,r="horizontal"===c.settings.mode?"left":"top",s=o*(a-Math.abs(parseInt(n))),H(s)})):c.viewport.hover(function(){u.stop()},function(){a=0,c.children.each(function(e){a+="horizontal"===c.settings.mode?X(this).outerWidth(!0):X(this).outerHeight(!0)}),o=c.settings.speed/a,r="horizontal"===c.settings.mode?"left":"top",s=o*(a-Math.abs(parseInt(u.css(r)))),H(s)})),H()},H=function(e){var e=e||c.settings.speed,t={left:0,top:0},n={left:0,top:0};"next"===c.settings.autoDirection?t=u.find(".bx-clone").first().position():n=c.children.first().position(),t="horizontal"===c.settings.mode?-t.left:-t.top,n="horizontal"===c.settings.mode?-n.left:-n.top,m(t,"ticker",e,{resetValue:n})},$=function(e){var t=X(window),n={top:t.scrollTop(),left:t.scrollLeft()},i=e.offset();return n.right=n.left+t.width(),n.bottom=n.top+t.height(),i.right=i.left+e.outerWidth(),i.bottom=i.top+e.outerHeight(),!(n.right<i.left||n.left>i.right||n.bottom<i.top||n.top>i.bottom)},B=function(e){var t=document.activeElement.tagName.toLowerCase();if(null==new RegExp(t,["i"]).exec("input|textarea")&&$(u))return 39===e.keyCode?(P(e),!1):37===e.keyCode?(w(e),!1):void 0},F=function(){c.touch={start:{x:0,y:0},end:{x:0,y:0}},c.viewport.bind("touchstart MSPointerDown pointerdown",V),c.viewport.on("click",".bxslider a",function(e){c.viewport.hasClass("click-disabled")&&(e.preventDefault(),c.viewport.removeClass("click-disabled"))})},V=function(e){var t;c.controls.el.addClass("disabled"),c.working?(e.preventDefault(),c.controls.el.removeClass("disabled")):(c.touch.originalPos=u.position(),t=void 0!==(e=e.originalEvent).changedTouches?e.changedTouches:[e],c.touch.start.x=t[0].pageX,c.touch.start.y=t[0].pageY,c.viewport.get(0).setPointerCapture&&(c.pointerId=e.pointerId,c.viewport.get(0).setPointerCapture(c.pointerId)),c.viewport.bind("touchmove MSPointerMove pointermove",I),c.viewport.bind("touchend MSPointerUp pointerup",L),c.viewport.bind("MSPointerCancel pointercancel",W))},W=function e(t){m(c.touch.originalPos.left,"reset",0),c.controls.el.removeClass("disabled"),c.viewport.unbind("MSPointerCancel pointercancel",e),c.viewport.unbind("touchmove MSPointerMove pointermove",I),c.viewport.unbind("touchend MSPointerUp pointerup",L),c.viewport.get(0).releasePointerCapture&&c.viewport.get(0).releasePointerCapture(c.pointerId)},I=function(e){var t=e.originalEvent,t=void 0!==t.changedTouches?t.changedTouches:[t],n=Math.abs(t[0].pageX-c.touch.start.x),i=Math.abs(t[0].pageY-c.touch.start.y),o=0,r=0;(i<3*n&&c.settings.preventDefaultSwipeX||n<3*i&&c.settings.preventDefaultSwipeY)&&e.preventDefault(),"fade"!==c.settings.mode&&c.settings.oneToOneTouch&&(o="horizontal"===c.settings.mode?(r=t[0].pageX-c.touch.start.x,c.touch.originalPos.left+r):(r=t[0].pageY-c.touch.start.y,c.touch.originalPos.top+r),m(o,"reset",0))},L=function e(t){c.viewport.unbind("touchmove MSPointerMove pointermove",I),c.controls.el.removeClass("disabled");var t=t.originalEvent,t=void 0!==t.changedTouches?t.changedTouches:[t],n=0,i=0;c.touch.end.x=t[0].pageX,c.touch.end.y=t[0].pageY,"fade"===c.settings.mode?(i=Math.abs(c.touch.start.x-c.touch.end.x))>=c.settings.swipeThreshold&&(c.touch.start.x>c.touch.end.x?u.goToNextSlide():u.goToPrevSlide(),u.stopAuto()):(n="horizontal"===c.settings.mode?(i=c.touch.end.x-c.touch.start.x,c.touch.originalPos.left):(i=c.touch.end.y-c.touch.start.y,c.touch.originalPos.top),(c.settings.infiniteLoop||!(0===c.active.index&&0<i||c.active.last&&i<0))&&Math.abs(i)>=c.settings.swipeThreshold?(i<0?u.goToNextSlide():u.goToPrevSlide(),u.stopAuto()):m(n,"reset",200)),c.viewport.unbind("touchend MSPointerUp pointerup",e),c.viewport.get(0).releasePointerCapture&&c.viewport.get(0).releasePointerCapture(c.pointerId)},D=function e(t){var n,i;c.initialized&&(c.working?window.setTimeout(e,10):(n=X(window).width(),i=X(window).height(),o===n&&r===i||(o=n,r=i,u.redrawSlider(),c.settings.onSliderResize.call(u,c.active.index))))},O=function(e){var t=f();c.settings.ariaHidden&&!c.settings.ticker&&(c.children.attr("aria-hidden","true"),c.children.slice(e,e+t).attr("aria-hidden","false"))},u.goToSlide=function(e,t){var n,i=!0,o=0,r={left:0,top:0},s=null;c.oldIndex=c.active.index,c.active.index=(n=e)<0?c.settings.infiniteLoop?p()-1:c.active.index:n>=p()?c.settings.infiniteLoop?0:c.active.index:n,c.working||c.active.index===c.oldIndex||(c.working=!0,void 0===(i=c.settings.onSlideBefore.call(u,c.children.eq(c.active.index),c.oldIndex,c.active.index))||i?("next"===t?c.settings.onSlideNext.call(u,c.children.eq(c.active.index),c.oldIndex,c.active.index)||(i=!1):"prev"!==t||c.settings.onSlidePrev.call(u,c.children.eq(c.active.index),c.oldIndex,c.active.index)||(i=!1),c.active.last=c.active.index>=p()-1,(c.settings.pager||c.settings.pagerCustom)&&M(c.active.index),c.settings.controls&&G(),"fade"===c.settings.mode?(c.settings.adaptiveHeight&&c.viewport.height()!==l()&&c.viewport.animate({height:l()},c.settings.adaptiveHeightSpeed),c.children.filter(":visible").fadeOut(c.settings.speed).css({zIndex:0}),c.children.eq(c.active.index).css("zIndex",c.settings.slideZIndex+1).fadeIn(c.settings.speed,function(){X(this).css("zIndex",c.settings.slideZIndex),E()})):(c.settings.adaptiveHeight&&c.viewport.height()!==l()&&c.viewport.animate({height:l()},c.settings.adaptiveHeightSpeed),!c.settings.infiniteLoop&&c.carousel&&c.active.last?"horizontal"===c.settings.mode?(r=(s=c.children.eq(c.children.length-1)).position(),o=c.viewport.width()-s.outerWidth()):(n=c.children.length-c.settings.minSlides,r=c.children.eq(n).position()):c.carousel&&c.active.last&&"prev"===t?(i=1===c.settings.moveSlides?c.settings.maxSlides-g():(p()-1)*g()-(c.children.length-c.settings.maxSlides),r=(s=u.children(".bx-clone").eq(i)).position()):"next"===t&&0===c.active.index?(r=u.find("> .bx-clone").eq(c.settings.maxSlides).position(),c.active.last=!1):0<=e&&(n=e*parseInt(g()),r=c.children.eq(n).position()),void 0!==r?(i="horizontal"===c.settings.mode?-(r.left-o):-r.top,m(i,"slide",c.settings.speed)):c.working=!1),c.settings.ariaHidden&&O(c.active.index*g())):(c.active.index=c.oldIndex,c.working=!1))},u.goToNextSlide=function(){var e;!c.settings.infiniteLoop&&c.active.last||(e=parseInt(c.active.index)+1,u.goToSlide(e,"next"))},u.goToPrevSlide=function(){var e;!c.settings.infiniteLoop&&0===c.active.index||(e=parseInt(c.active.index)-1,u.goToSlide(e,"prev"))},u.startAuto=function(e){c.interval||(c.interval=setInterval(function(){"next"===c.settings.autoDirection?u.goToNextSlide():u.goToPrevSlide()},c.settings.pause),c.settings.autoControls&&!0!==e&&k("stop"))},u.stopAuto=function(e){c.interval&&(clearInterval(c.interval),c.interval=null,c.settings.autoControls&&!0!==e&&k("start"))},u.getCurrentSlide=function(){return c.active.index},u.getCurrentSlideElement=function(){return c.children.eq(c.active.index)},u.getSlideElement=function(e){return c.children.eq(e)},u.getSlideCount=function(){return c.children.length},u.isWorking=function(){return c.working},u.redrawSlider=function(){c.children.add(u.find(".bx-clone")).outerWidth(h()),c.viewport.css("height",l()),c.settings.ticker||v(),c.active.last&&(c.active.index=p()-1),c.active.index>=p()&&(c.active.last=!0),c.settings.pager&&!c.settings.pagerCustom&&(b(),M(c.active.index)),c.settings.ariaHidden&&O(c.active.index*g())},u.destroySlider=function(){c.initialized&&(c.initialized=!1,X(".bx-clone",this).remove(),c.children.each(function(){void 0!==X(this).data("origStyle")?X(this).attr("style",X(this).data("origStyle")):X(this).removeAttr("style")}),void 0!==X(this).data("origStyle")?this.attr("style",X(this).data("origStyle")):X(this).removeAttr("style"),X(this).unwrap().unwrap(),c.controls.el&&c.controls.el.remove(),c.controls.next&&c.controls.next.remove(),c.controls.prev&&c.controls.prev.remove(),c.pagerEl&&c.settings.controls&&!c.settings.pagerCustom&&c.pagerEl.remove(),X(".bx-caption",this).remove(),c.controls.autoEl&&c.controls.autoEl.remove(),clearInterval(c.interval),c.settings.responsive&&X(window).unbind("resize",D),c.settings.keyboardEnabled&&X(document).unbind("keydown",B),X(this).removeData("bxSlider"))},u.reloadSlider=function(e){void 0!==e&&(t=e),u.destroySlider(),n(),X(u).data("bxSlider",this)},n(),X(u).data("bxSlider",this),this))}}(jQuery),function(e){"function"==typeof define&&define.amd&&define.amd.jQuery?define(["jquery"],e):e("undefined"!=typeof module&&module.exports?require("jquery"):jQuery)}(function(ae){function i(O,l){function e(e){if(!(!0===M.data(Be+"_intouch")||0<ae(e.target).closest(l.excludedElements,M).length)){var t,n,i,o=e.originalEvent||e;if(!o.pointerType||"mouse"!=o.pointerType||0!=l.fallbackToMouseEvents)return i=(n=o.touches)?n[0]:o,E=Ae,n?k=n.length:!1!==l.preventDefaultEvents&&e.preventDefault(),A=y=b=null,P=1,w=x=S=T=m=0,(e={})[le]=a(le),e[ce]=a(ce),e[ue]=a(ue),e[de]=a(de),C=e,Q(),h(0,i),!n||k===l.fingers||l.fingers===Pe||u()?(re=f(),2==k&&(h(1,n[1]),S=x=te(G[0].start,G[1].start)),(l.swipeStatus||l.pinchStatus)&&(t=c(o,E))):t=!1,!1===t?(c(o,E=Ee),t):(l.hold&&(D=setTimeout(ae.proxy(function(){M.trigger("hold",[o.target]),l.hold&&(t=l.hold.call(M,o,o.target))},this),l.longTapThreshold)),s(!0),null)}}function t(e){var t=e.originalEvent||e;if(E!==Me&&E!==Ee&&!d()){var n,i=t.touches,o=Z(i?i[0]:t);if(H=f(),i&&(k=i.length),l.hold&&clearTimeout(D),E=Ce,2==k&&(0==S?(h(1,i[1]),S=x=te(G[0].start,G[1].start)):(Z(i[1]),x=te(G[0].end,G[1].end),G[0].end,G[1].end,A=P<1?fe:he),P=(x/S*1).toFixed(2),w=Math.abs(S-x)),k===l.fingers||l.fingers===Pe||!i||u()){b=ne(o.start,o.end),y=ne(o.last,o.end);var r,s=e,i=y;if(!1!==l.preventDefaultEvents)if(l.allowPageScroll===pe)s.preventDefault();else{var a=l.allowPageScroll===ge;switch(i){case le:(l.swipeLeft&&a||!a&&l.allowPageScroll!=Se)&&s.preventDefault();break;case ce:(l.swipeRight&&a||!a&&l.allowPageScroll!=Se)&&s.preventDefault();break;case ue:(l.swipeUp&&a||!a&&l.allowPageScroll!=xe)&&s.preventDefault();break;case de:(l.swipeDown&&a||!a&&l.allowPageScroll!=xe)&&s.preventDefault()}}e=o.start,i=o.end,m=Math.round(Math.sqrt(Math.pow(i.x-e.x,2)+Math.pow(i.y-e.y,2))),T=ee(),i=m,(e=b)!=pe&&(i=Math.max(i,J(e)),C[e].distance=i),n=c(t,E),l.triggerOnTouchEnd&&!l.triggerOnTouchLeave||(e=!0,l.triggerOnTouchLeave&&(r={left:(r=(i=ae(i=this)).offset()).left,right:r.left+i.outerWidth(),top:r.top,bottom:r.top+i.outerHeight()},i=o.end,o=r,e=i.x>o.left&&i.x<o.right&&i.y>o.top&&i.y<o.bottom),!l.triggerOnTouchEnd&&e?E=_(Ce):l.triggerOnTouchLeave&&!e&&(E=_(Me)),E!=Ee&&E!=Me||c(t,E))}else c(t,E=Ee);!1===n&&c(t,E=Ee)}}function n(e){var t,n=e.originalEvent||e,i=n.touches;if(i){if(i.length&&!d())return t=n,B=f(),se=t.touches.length+1,!0;if(i.length&&d())return!0}return d()&&(k=se),H=f(),T=ee(),F()||!$()?c(n,E=Ee):l.triggerOnTouchEnd||!1===l.triggerOnTouchEnd&&E===Ce?(!1!==l.preventDefaultEvents&&e.preventDefault(),c(n,E=Me)):!l.triggerOnTouchEnd&&U()?r(n,E=Me,be):E===Ce&&c(n,E=Ee),s(!1),null}function o(){x=S=re=H=k=0,Q(),s(!(P=1))}function N(e){e=e.originalEvent||e;l.triggerOnTouchLeave&&c(e,E=_(Me))}function R(){M.unbind(p,e),M.unbind(v,o),M.unbind(ie,t),M.unbind(oe,n),g&&M.unbind(g,N),s(!1)}function _(e){var t=e,n=V(),i=$(),o=F();return!n||o?t=Ee:!i||e!=Ce||l.triggerOnTouchEnd&&!l.triggerOnTouchLeave?!i&&e==Me&&l.triggerOnTouchLeave&&(t=Ee):t=Me,t}function c(e,t){var n,i=e.touches;return(X()&&z()||z())&&(n=r(e,t,ve)),(W()&&u()||u())&&!1!==n&&(n=r(e,t,me)),Y()&&K()&&!1!==n?n=r(e,t,ye):T>l.longTapThreshold&&m<we&&l.longTap&&!1!==n?n=r(e,t,Te):1!==k&&ke||!(isNaN(m)||m<l.threshold)||!U()||!1===n||(n=r(e,t,be)),t===Ee&&o(),t!==Me||i&&i.length||o(),n}function r(e,t,n){var i;if(n==ve){if(M.trigger("swipeStatus",[t,b||null,m||0,T||0,k,G,y]),l.swipeStatus&&!1===(i=l.swipeStatus.call(M,e,t,b||null,m||0,T||0,k,G,y)))return!1;if(t==Me&&X()){if(clearTimeout(L),clearTimeout(D),M.trigger("swipe",[b,m,T,k,G,y]),l.swipe&&!1===(i=l.swipe.call(M,e,b,m,T,k,G,y)))return!1;switch(b){case le:M.trigger("swipeLeft",[b,m,T,k,G,y]),l.swipeLeft&&(i=l.swipeLeft.call(M,e,b,m,T,k,G,y));break;case ce:M.trigger("swipeRight",[b,m,T,k,G,y]),l.swipeRight&&(i=l.swipeRight.call(M,e,b,m,T,k,G,y));break;case ue:M.trigger("swipeUp",[b,m,T,k,G,y]),l.swipeUp&&(i=l.swipeUp.call(M,e,b,m,T,k,G,y));break;case de:M.trigger("swipeDown",[b,m,T,k,G,y]),l.swipeDown&&(i=l.swipeDown.call(M,e,b,m,T,k,G,y))}}}if(n==me){if(M.trigger("pinchStatus",[t,A||null,w||0,T||0,k,P,G]),l.pinchStatus&&!1===(i=l.pinchStatus.call(M,e,t,A||null,w||0,T||0,k,P,G)))return!1;if(t==Me&&W())switch(A){case he:M.trigger("pinchIn",[A||null,w||0,T||0,k,P,G]),l.pinchIn&&(i=l.pinchIn.call(M,e,A||null,w||0,T||0,k,P,G));break;case fe:M.trigger("pinchOut",[A||null,w||0,T||0,k,P,G]),l.pinchOut&&(i=l.pinchOut.call(M,e,A||null,w||0,T||0,k,P,G))}}return n==be?t!==Ee&&t!==Me||(clearTimeout(L),clearTimeout(D),K()&&!Y()?(I=f(),L=setTimeout(ae.proxy(function(){I=null,M.trigger("tap",[e.target]),l.tap&&(i=l.tap.call(M,e,e.target))},this),l.doubleTapThreshold)):(I=null,M.trigger("tap",[e.target]),l.tap&&(i=l.tap.call(M,e,e.target)))):n==ye?t!==Ee&&t!==Me||(clearTimeout(L),clearTimeout(D),I=null,M.trigger("doubletap",[e.target]),l.doubleTap&&(i=l.doubleTap.call(M,e,e.target))):n!=Te||t!==Ee&&t!==Me||(clearTimeout(L),I=null,M.trigger("longtap",[e.target]),l.longTap&&(i=l.longTap.call(M,e,e.target))),i}function $(){var e=!0;return e=null!==l.threshold?m>=l.threshold:e}function F(){var e=!1;return e=null!==l.cancelThreshold&&null!==b?J(b)-m>=l.cancelThreshold:e}function V(){return!(l.maxTimeThreshold&&T>=l.maxTimeThreshold)}function W(){var e=j(),t=q(),n=null===l.pinchThreshold||w>=l.pinchThreshold;return e&&t&&n}function u(){return l.pinchStatus||l.pinchIn||l.pinchOut}function X(){var e=V(),t=$(),n=j(),i=q();return!F()&&i&&n&&t&&e}function z(){return l.swipe||l.swipeStatus||l.swipeLeft||l.swipeRight||l.swipeUp||l.swipeDown}function j(){return k===l.fingers||l.fingers===Pe||!ke}function q(){return 0!==G[0].end.x}function U(){return l.tap}function K(){return!!l.doubleTap}function Y(){var e;return null!=I&&(e=f(),K()&&e-I<=l.doubleTapThreshold)}function Q(){se=B=0}function d(){var e=!1;return e=B&&f()-B<=l.fingerReleaseThreshold?!0:e}function s(e){M&&(!0===e?(M.bind(ie,t),M.bind(oe,n),g&&M.bind(g,N)):(M.unbind(ie,t,!1),M.unbind(oe,n,!1),g&&M.unbind(g,N,!1)),M.data(Be+"_intouch",!0===e))}function h(e,t){var n={start:{x:0,y:0},last:{x:0,y:0},end:{x:0,y:0}};return n.start.x=n.last.x=n.end.x=t.pageX||t.clientX,n.start.y=n.last.y=n.end.y=t.pageY||t.clientY,G[e]=n}function Z(e){var t=void 0!==e.identifier?e.identifier:0,n=G[t]||null;return(n=null===n?h(t,e):n).last.x=n.end.x,n.last.y=n.end.y,n.end.x=e.pageX||e.clientX,n.end.y=e.pageY||e.clientY,n}function J(e){if(C[e])return C[e].distance}function a(e){return{direction:e,distance:0}}function ee(){return H-re}function te(e,t){var n=Math.abs(e.x-t.x),e=Math.abs(e.y-t.y);return Math.round(Math.sqrt(n*n+e*e))}function ne(e,t){var n,i;return n=t,(i=e).x==n.x&&i.y==n.y?pe:(i=t,t=(n=e).x-i.x,i=i.y-e.y,n=Math.atan2(i,t),i=(i=Math.round(180*n/Math.PI))<0?360-Math.abs(i):i,i<=45&&0<=i||i<=360&&315<=i?le:135<=i&&i<=225?ce:45<i&&i<135?de:ue)}function f(){return(new Date).getTime()}var l=ae.extend({},l),i=ke||He||!l.fallbackToMouseEvents,p=i?He?Ge?"MSPointerDown":"pointerdown":"touchstart":"mousedown",ie=i?He?Ge?"MSPointerMove":"pointermove":"touchmove":"mousemove",oe=i?He?Ge?"MSPointerUp":"pointerup":"touchend":"mouseup",g=!i||He?"mouseleave":null,v=He?Ge?"MSPointerCancel":"pointercancel":"touchcancel",m=0,b=null,y=null,T=0,S=0,x=0,P=1,w=0,A=0,C=null,M=ae(O),E="start",k=0,G={},re=0,H=0,B=0,se=0,I=0,L=null,D=null;try{M.bind(p,e),M.bind(v,o)}catch(e){ae.error("events not supported "+p+","+v+" on jQuery.swipe")}this.enable=function(){return this.disable(),M.bind(p,e),M.bind(v,o),M},this.disable=function(){return R(),M},this.destroy=function(){R(),M.data(Be,null),M=null},this.option=function(e,t){if("object"==_typeof(e))l=ae.extend(l,e);else if(void 0!==l[e]){if(void 0===t)return l[e];l[e]=t}else{if(!e)return l;ae.error("Option "+e+" does not exist on jQuery.swipe.options")}return null}}var le="left",ce="right",ue="up",de="down",he="in",fe="out",pe="none",ge="auto",ve="swipe",me="pinch",be="tap",ye="doubletap",Te="longtap",Se="horizontal",xe="vertical",Pe="all",we=10,Ae="start",Ce="move",Me="end",Ee="cancel",ke="ontouchstart"in window,Ge=window.navigator.msPointerEnabled&&!window.PointerEvent&&!ke,He=(window.PointerEvent||window.navigator.msPointerEnabled)&&!ke,Be="TouchSwipe";ae.fn.swipe=function(e){var t=ae(this),n=t.data(Be);if(n&&"string"==typeof e){if(n[e])return n[e].apply(n,Array.prototype.slice.call(arguments,1));ae.error("Method "+e+" does not exist on jQuery.swipe")}else if(n&&"object"==_typeof(e))n.option.apply(n,arguments);else if(!(n||"object"!=_typeof(e)&&e))return function(n){return!n||void 0!==n.allowPageScroll||void 0===n.swipe&&void 0===n.swipeStatus||(n.allowPageScroll=pe),void 0!==n.click&&void 0===n.tap&&(n.tap=n.click),n=n||{},n=ae.extend({},ae.fn.swipe.defaults,n),this.each(function(){var e,t=ae(this);t.data(Be)||(e=new i(this,n),t.data(Be,e))})}.apply(this,arguments);return t},ae.fn.swipe.version="1.6.18",ae.fn.swipe.defaults={fingers:1,threshold:75,cancelThreshold:null,pinchThreshold:20,maxTimeThreshold:null,fingerReleaseThreshold:250,longTapThreshold:500,doubleTapThreshold:200,swipe:null,swipeLeft:null,swipeRight:null,swipeUp:null,swipeDown:null,swipeStatus:null,pinchIn:null,pinchOut:null,pinchStatus:null,click:null,tap:null,doubleTap:null,longTap:null,hold:null,triggerOnTouchEnd:!0,triggerOnTouchLeave:!1,allowPageScroll:"auto",fallbackToMouseEvents:!0,excludedElements:".noSwipe",preventDefaultEvents:!0},ae.fn.swipe.phases={PHASE_START:Ae,PHASE_MOVE:Ce,PHASE_END:Me,PHASE_CANCEL:Ee},ae.fn.swipe.directions={LEFT:le,RIGHT:ce,UP:ue,DOWN:de,IN:he,OUT:fe},ae.fn.swipe.pageScroll={NONE:pe,HORIZONTAL:Se,VERTICAL:xe,AUTO:ge},ae.fn.swipe.fingers={ONE:1,TWO:2,THREE:3,FOUR:4,FIVE:5,ALL:Pe}}),function(p){(function(){if("undefined"!=typeof module&&module.exports)return function(e){module.exports=e()};if("function"==typeof define&&define.amd)return define;if("undefined"!=typeof window)return function(e){window.MobileDetect=e()};throw new Error("unknown environment")})()(function(){function t(e,t){return null!=e&&null!=t&&e.toLowerCase()===t.toLowerCase()}function n(e,t){var n,i,o=e.length;if(o&&t)for(n=t.toLowerCase(),i=0;i<o;++i)if(n===e[i].toLowerCase())return!0;return!1}function e(e){for(var t in e)d.call(e,t)&&(e[t]=new RegExp(e[t],"i"))}function o(e,t){this.ua=(e||"").substr(0,500),this._cache={},this.maxPhoneWidth=t||600}var i,r,s,a,l,c,u={mobileDetectRules:{phones:{iPhone:"\\biPhone\\b|\\biPod\\b",BlackBerry:"BlackBerry|\\bBB10\\b|rim[0-9]+|\\b(BBA100|BBB100|BBD100|BBE100|BBF100|STH100)\\b-[0-9]+",Pixel:"; \\bPixel\\b",HTC:"HTC|HTC.*(Sensation|Evo|Vision|Explorer|6800|8100|8900|A7272|S510e|C110e|Legend|Desire|T8282)|APX515CKT|Qtek9090|APA9292KT|HD_mini|Sensation.*Z710e|PG86100|Z715e|Desire.*(A8181|HD)|ADR6200|ADR6400L|ADR6425|001HT|Inspire 4G|Android.*\\bEVO\\b|T-Mobile G1|Z520m|Android [0-9.]+; Pixel",Nexus:"Nexus One|Nexus S|Galaxy.*Nexus|Android.*Nexus.*Mobile|Nexus 4|Nexus 5|Nexus 5X|Nexus 6",Dell:"Dell[;]? (Streak|Aero|Venue|Venue Pro|Flash|Smoke|Mini 3iX)|XCD28|XCD35|\\b001DL\\b|\\b101DL\\b|\\bGS01\\b",Motorola:"Motorola|DROIDX|DROID BIONIC|\\bDroid\\b.*Build|Android.*Xoom|HRI39|MOT-|A1260|A1680|A555|A853|A855|A953|A955|A956|Motorola.*ELECTRIFY|Motorola.*i1|i867|i940|MB200|MB300|MB501|MB502|MB508|MB511|MB520|MB525|MB526|MB611|MB612|MB632|MB810|MB855|MB860|MB861|MB865|MB870|ME501|ME502|ME511|ME525|ME600|ME632|ME722|ME811|ME860|ME863|ME865|MT620|MT710|MT716|MT720|MT810|MT870|MT917|Motorola.*TITANIUM|WX435|WX445|XT300|XT301|XT311|XT316|XT317|XT319|XT320|XT390|XT502|XT530|XT531|XT532|XT535|XT603|XT610|XT611|XT615|XT681|XT701|XT702|XT711|XT720|XT800|XT806|XT860|XT862|XT875|XT882|XT883|XT894|XT901|XT907|XT909|XT910|XT912|XT928|XT926|XT915|XT919|XT925|XT1021|\\bMoto E\\b|XT1068|XT1092|XT1052",Samsung:"\\bSamsung\\b|SM-G950F|SM-G955F|SM-G9250|GT-19300|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9082|GT-I9100|GT-I9103|GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|GT-S7710|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|SCH-I910|SCH-I920|SCH-I959|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|GT-N7105|SCH-I535|SM-N900A|SGH-I317|SGH-T999L|GT-S5360B|GT-I8262|GT-S6802|GT-S6312|GT-S6310|GT-S5312|GT-S5310|GT-I9105|GT-I8510|GT-S6790N|SM-G7105|SM-N9005|GT-S5301|GT-I9295|GT-I9195|SM-C101|GT-S7392|GT-S7560|GT-B7610|GT-I5510|GT-S7582|GT-S7530E|GT-I8750|SM-G9006V|SM-G9008V|SM-G9009D|SM-G900A|SM-G900D|SM-G900F|SM-G900H|SM-G900I|SM-G900J|SM-G900K|SM-G900L|SM-G900M|SM-G900P|SM-G900R4|SM-G900S|SM-G900T|SM-G900V|SM-G900W8|SHV-E160K|SCH-P709|SCH-P729|SM-T2558|GT-I9205|SM-G9350|SM-J120F|SM-G920F|SM-G920V|SM-G930F|SM-N910C|SM-A310F|GT-I9190|SM-J500FN|SM-G903F|SM-J330F|SM-G610F|SM-G981B|SM-G892A|SM-A530F",LG:"\\bLG\\b;|LG[- ]?(C800|C900|E400|E610|E900|E-900|F160|F180K|F180L|F180S|730|855|L160|LS740|LS840|LS970|LU6200|MS690|MS695|MS770|MS840|MS870|MS910|P500|P700|P705|VM696|AS680|AS695|AX840|C729|E970|GS505|272|C395|E739BK|E960|L55C|L75C|LS696|LS860|P769BK|P350|P500|P509|P870|UN272|US730|VS840|VS950|LN272|LN510|LS670|LS855|LW690|MN270|MN510|P509|P769|P930|UN200|UN270|UN510|UN610|US670|US740|US760|UX265|UX840|VN271|VN530|VS660|VS700|VS740|VS750|VS910|VS920|VS930|VX9200|VX11000|AX840A|LW770|P506|P925|P999|E612|D955|D802|MS323|M257)|LM-G710",Sony:"SonyST|SonyLT|SonyEricsson|SonyEricssonLT15iv|LT18i|E10i|LT28h|LT26w|SonyEricssonMT27i|C5303|C6902|C6903|C6906|C6943|D2533|SOV34|601SO|F8332",Asus:"Asus.*Galaxy|PadFone.*Mobile",Xiaomi:"^(?!.*\\bx11\\b).*xiaomi.*$|POCOPHONE F1|MI 8|Redmi Note 9S|Redmi Note 5A Prime|N2G47H|M2001J2G|M2001J2I|M1805E10A|M2004J11G|M1902F1G|M2002J9G|M2004J19G|M2003J6A1G",NokiaLumia:"Lumia [0-9]{3,4}",Micromax:"Micromax.*\\b(A210|A92|A88|A72|A111|A110Q|A115|A116|A110|A90S|A26|A51|A35|A54|A25|A27|A89|A68|A65|A57|A90)\\b",Palm:"PalmSource|Palm",Vertu:"Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature",Pantech:"PANTECH|IM-A850S|IM-A840S|IM-A830L|IM-A830K|IM-A830S|IM-A820L|IM-A810K|IM-A810S|IM-A800S|IM-T100K|IM-A725L|IM-A780L|IM-A775C|IM-A770K|IM-A760S|IM-A750K|IM-A740S|IM-A730S|IM-A720L|IM-A710K|IM-A690L|IM-A690S|IM-A650S|IM-A630K|IM-A600S|VEGA PTL21|PT003|P8010|ADR910L|P6030|P6020|P9070|P4100|P9060|P5000|CDM8992|TXT8045|ADR8995|IS11PT|P2030|P6010|P8000|PT002|IS06|CDM8999|P9050|PT001|TXT8040|P2020|P9020|P2000|P7040|P7000|C790",Fly:"IQ230|IQ444|IQ450|IQ440|IQ442|IQ441|IQ245|IQ256|IQ236|IQ255|IQ235|IQ245|IQ275|IQ240|IQ285|IQ280|IQ270|IQ260|IQ250",Wiko:"KITE 4G|HIGHWAY|GETAWAY|STAIRWAY|DARKSIDE|DARKFULL|DARKNIGHT|DARKMOON|SLIDE|WAX 4G|RAINBOW|BLOOM|SUNSET|GOA(?!nna)|LENNY|BARRY|IGGY|OZZY|CINK FIVE|CINK PEAX|CINK PEAX 2|CINK SLIM|CINK SLIM 2|CINK +|CINK KING|CINK PEAX|CINK SLIM|SUBLIM",iMobile:"i-mobile (IQ|i-STYLE|idea|ZAA|Hitz)",SimValley:"\\b(SP-80|XT-930|SX-340|XT-930|SX-310|SP-360|SP60|SPT-800|SP-120|SPT-800|SP-140|SPX-5|SPX-8|SP-100|SPX-8|SPX-12)\\b",Wolfgang:"AT-B24D|AT-AS50HD|AT-AS40W|AT-AS55HD|AT-AS45q2|AT-B26D|AT-AS50Q",Alcatel:"Alcatel",Nintendo:"Nintendo (3DS|Switch)",Amoi:"Amoi",INQ:"INQ",OnePlus:"ONEPLUS",GenericPhone:"Tapatalk|PDA;|SAGEM|\\bmmp\\b|pocket|\\bpsp\\b|symbian|Smartphone|smartfon|treo|up.browser|up.link|vodafone|\\bwap\\b|nokia|Series40|Series60|S60|SonyEricsson|N900|MAUI.*WAP.*Browser"},tablets:{iPad:"iPad|iPad.*Mobile",NexusTablet:"Android.*Nexus[\\s]+(7|9|10)",GoogleTablet:"Android.*Pixel C",SamsungTablet:"SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|GT-I9200|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-T337V|SM-T537V|SM-T707V|SM-T807V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|SM-T530|SM-T705|SM-T705C|SM-T535|SM-T331|SM-T800|SM-T700|SM-T537|SM-T807|SM-P907A|SM-T337A|SM-T537A|SM-T707A|SM-T807A|SM-T237|SM-T807P|SM-P607T|SM-T217T|SM-T337T|SM-T807T|SM-T116NQ|SM-T116BU|SM-P550|SM-T350|SM-T550|SM-T9000|SM-P9000|SM-T705Y|SM-T805|GT-P3113|SM-T710|SM-T810|SM-T815|SM-T360|SM-T533|SM-T113|SM-T335|SM-T715|SM-T560|SM-T670|SM-T677|SM-T377|SM-T567|SM-T357T|SM-T555|SM-T561|SM-T713|SM-T719|SM-T813|SM-T819|SM-T580|SM-T355Y?|SM-T280|SM-T817A|SM-T820|SM-W700|SM-P580|SM-T587|SM-P350|SM-P555M|SM-P355M|SM-T113NU|SM-T815Y|SM-T585|SM-T285|SM-T825|SM-W708|SM-T835|SM-T830|SM-T837V|SM-T720|SM-T510|SM-T387V|SM-P610|SM-T290|SM-T515|SM-T590|SM-T595|SM-T725|SM-T817P|SM-P585N0|SM-T395|SM-T295|SM-T865|SM-P610N|SM-P615|SM-T970|SM-T380|SM-T5950|SM-T905|SM-T231|SM-T500|SM-T860",Kindle:"Kindle|Silk.*Accelerated|Android.*\\b(KFOT|KFTT|KFJWI|KFJWA|KFOTE|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|WFJWAE|KFSAWA|KFSAWI|KFASWI|KFARWI|KFFOWI|KFGIWI|KFMEWI)\\b|Android.*Silk/[0-9.]+ like Chrome/[0-9.]+ (?!Mobile)",SurfaceTablet:"Windows NT [0-9.]+; ARM;.*(Tablet|ARMBJS)",HPTablet:"HP Slate (7|8|10)|HP ElitePad 900|hp-tablet|EliteBook.*Touch|HP 8|Slate 21|HP SlateBook 10",AsusTablet:"^.*PadFone((?!Mobile).)*$|Transformer|TF101|TF101G|TF300T|TF300TG|TF300TL|TF700T|TF700KL|TF701T|TF810C|ME171|ME301T|ME302C|ME371MG|ME370T|ME372MG|ME172V|ME173X|ME400C|Slider SL101|\\bK00F\\b|\\bK00C\\b|\\bK00E\\b|\\bK00L\\b|TX201LA|ME176C|ME102A|\\bM80TA\\b|ME372CL|ME560CG|ME372CG|ME302KL| K010 | K011 | K017 | K01E |ME572C|ME103K|ME170C|ME171C|\\bME70C\\b|ME581C|ME581CL|ME8510C|ME181C|P01Y|PO1MA|P01Z|\\bP027\\b|\\bP024\\b|\\bP00C\\b",BlackBerryTablet:"PlayBook|RIM Tablet",HTCtablet:"HTC_Flyer_P512|HTC Flyer|HTC Jetstream|HTC-P715a|HTC EVO View 4G|PG41200|PG09410",MotorolaTablet:"xoom|sholest|MZ615|MZ605|MZ505|MZ601|MZ602|MZ603|MZ604|MZ606|MZ607|MZ608|MZ609|MZ615|MZ616|MZ617",NookTablet:"Android.*Nook|NookColor|nook browser|BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2",AcerTablet:"Android.*; \\b(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700|A701|W500|W500P|W501|W501P|W510|W511|W700|G100|G100W|B1-A71|B1-710|B1-711|A1-810|A1-811|A1-830)\\b|W3-810|\\bA3-A10\\b|\\bA3-A11\\b|\\bA3-A20\\b|\\bA3-A30|A3-A40",ToshibaTablet:"Android.*(AT100|AT105|AT200|AT205|AT270|AT275|AT300|AT305|AT1S5|AT500|AT570|AT700|AT830)|TOSHIBA.*FOLIO",LGTablet:"\\bL-06C|LG-V909|LG-V900|LG-V700|LG-V510|LG-V500|LG-V410|LG-V400|LG-VK810\\b",FujitsuTablet:"Android.*\\b(F-01D|F-02F|F-05E|F-10D|M532|Q572)\\b",PrestigioTablet:"PMP3170B|PMP3270B|PMP3470B|PMP7170B|PMP3370B|PMP3570C|PMP5870C|PMP3670B|PMP5570C|PMP5770D|PMP3970B|PMP3870C|PMP5580C|PMP5880D|PMP5780D|PMP5588C|PMP7280C|PMP7280C3G|PMP7280|PMP7880D|PMP5597D|PMP5597|PMP7100D|PER3464|PER3274|PER3574|PER3884|PER5274|PER5474|PMP5097CPRO|PMP5097|PMP7380D|PMP5297C|PMP5297C_QUAD|PMP812E|PMP812E3G|PMP812F|PMP810E|PMP880TD|PMT3017|PMT3037|PMT3047|PMT3057|PMT7008|PMT5887|PMT5001|PMT5002",LenovoTablet:"Lenovo TAB|Idea(Tab|Pad)( A1|A10| K1|)|ThinkPad([ ]+)?Tablet|YT3-850M|YT3-X90L|YT3-X90F|YT3-X90X|Lenovo.*(S2109|S2110|S5000|S6000|K3011|A3000|A3500|A1000|A2107|A2109|A1107|A5500|A7600|B6000|B8000|B8080)(-|)(FL|F|HV|H|)|TB-X103F|TB-X304X|TB-X304F|TB-X304L|TB-X505F|TB-X505L|TB-X505X|TB-X605F|TB-X605L|TB-8703F|TB-8703X|TB-8703N|TB-8704N|TB-8704F|TB-8704X|TB-8704V|TB-7304F|TB-7304I|TB-7304X|Tab2A7-10F|Tab2A7-20F|TB2-X30L|YT3-X50L|YT3-X50F|YT3-X50M|YT-X705F|YT-X703F|YT-X703L|YT-X705L|YT-X705X|TB2-X30F|TB2-X30L|TB2-X30M|A2107A-F|A2107A-H|TB3-730F|TB3-730M|TB3-730X|TB-7504F|TB-7504X|TB-X704F|TB-X104F|TB3-X70F|TB-X705F|TB-8504F|TB3-X70L|TB3-710F|TB-X704L",DellTablet:"Venue 11|Venue 8|Venue 7|Dell Streak 10|Dell Streak 7",YarvikTablet:"Android.*\\b(TAB210|TAB211|TAB224|TAB250|TAB260|TAB264|TAB310|TAB360|TAB364|TAB410|TAB411|TAB420|TAB424|TAB450|TAB460|TAB461|TAB464|TAB465|TAB467|TAB468|TAB07-100|TAB07-101|TAB07-150|TAB07-151|TAB07-152|TAB07-200|TAB07-201-3G|TAB07-210|TAB07-211|TAB07-212|TAB07-214|TAB07-220|TAB07-400|TAB07-485|TAB08-150|TAB08-200|TAB08-201-3G|TAB08-201-30|TAB09-100|TAB09-211|TAB09-410|TAB10-150|TAB10-201|TAB10-211|TAB10-400|TAB10-410|TAB13-201|TAB274EUK|TAB275EUK|TAB374EUK|TAB462EUK|TAB474EUK|TAB9-200)\\b",MedionTablet:"Android.*\\bOYO\\b|LIFE.*(P9212|P9514|P9516|S9512)|LIFETAB",ArnovaTablet:"97G4|AN10G2|AN7bG3|AN7fG3|AN8G3|AN8cG3|AN7G3|AN9G3|AN7dG3|AN7dG3ST|AN7dG3ChildPad|AN10bG3|AN10bG3DT|AN9G2",IntensoTablet:"INM8002KP|INM1010FP|INM805ND|Intenso Tab|TAB1004",IRUTablet:"M702pro",MegafonTablet:"MegaFon V9|\\bZTE V9\\b|Android.*\\bMT7A\\b",EbodaTablet:"E-Boda (Supreme|Impresspeed|Izzycomm|Essential)",AllViewTablet:"Allview.*(Viva|Alldro|City|Speed|All TV|Frenzy|Quasar|Shine|TX1|AX1|AX2)",ArchosTablet:"\\b(101G9|80G9|A101IT)\\b|Qilive 97R|Archos5|\\bARCHOS (70|79|80|90|97|101|FAMILYPAD|)(b|c|)(G10| Cobalt| TITANIUM(HD|)| Xenon| Neon|XSK| 2| XS 2| PLATINUM| CARBON|GAMEPAD)\\b",AinolTablet:"NOVO7|NOVO8|NOVO10|Novo7Aurora|Novo7Basic|NOVO7PALADIN|novo9-Spark",NokiaLumiaTablet:"Lumia 2520",SonyTablet:"Sony.*Tablet|Xperia Tablet|Sony Tablet S|SO-03E|SGPT12|SGPT13|SGPT114|SGPT121|SGPT122|SGPT123|SGPT111|SGPT112|SGPT113|SGPT131|SGPT132|SGPT133|SGPT211|SGPT212|SGPT213|SGP311|SGP312|SGP321|EBRD1101|EBRD1102|EBRD1201|SGP351|SGP341|SGP511|SGP512|SGP521|SGP541|SGP551|SGP621|SGP641|SGP612|SOT31|SGP771|SGP611|SGP612|SGP712",PhilipsTablet:"\\b(PI2010|PI3000|PI3100|PI3105|PI3110|PI3205|PI3210|PI3900|PI4010|PI7000|PI7100)\\b",CubeTablet:"Android.*(K8GT|U9GT|U10GT|U16GT|U17GT|U18GT|U19GT|U20GT|U23GT|U30GT)|CUBE U8GT",CobyTablet:"MID1042|MID1045|MID1125|MID1126|MID7012|MID7014|MID7015|MID7034|MID7035|MID7036|MID7042|MID7048|MID7127|MID8042|MID8048|MID8127|MID9042|MID9740|MID9742|MID7022|MID7010",MIDTablet:"M9701|M9000|M9100|M806|M1052|M806|T703|MID701|MID713|MID710|MID727|MID760|MID830|MID728|MID933|MID125|MID810|MID732|MID120|MID930|MID800|MID731|MID900|MID100|MID820|MID735|MID980|MID130|MID833|MID737|MID960|MID135|MID860|MID736|MID140|MID930|MID835|MID733|MID4X10",MSITablet:"MSI \\b(Primo 73K|Primo 73L|Primo 81L|Primo 77|Primo 93|Primo 75|Primo 76|Primo 73|Primo 81|Primo 91|Primo 90|Enjoy 71|Enjoy 7|Enjoy 10)\\b",SMiTTablet:"Android.*(\\bMID\\b|MID-560|MTV-T1200|MTV-PND531|MTV-P1101|MTV-PND530)",RockChipTablet:"Android.*(RK2818|RK2808A|RK2918|RK3066)|RK2738|RK2808A",FlyTablet:"IQ310|Fly Vision",bqTablet:"Android.*(bq)?.*\\b(Elcano|Curie|Edison|Maxwell|Kepler|Pascal|Tesla|Hypatia|Platon|Newton|Livingstone|Cervantes|Avant|Aquaris ([E|M]10|M8))\\b|Maxwell.*Lite|Maxwell.*Plus",HuaweiTablet:"MediaPad|MediaPad 7 Youth|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|S7-201|S7-Slim|M2-A01L|BAH-L09|BAH-W09|AGS-L09|CMR-AL19",NecTablet:"\\bN-06D|\\bN-08D",PantechTablet:"Pantech.*P4100",BronchoTablet:"Broncho.*(N701|N708|N802|a710)",VersusTablet:"TOUCHPAD.*[78910]|\\bTOUCHTAB\\b",ZyncTablet:"z1000|Z99 2G|z930|z990|z909|Z919|z900",PositivoTablet:"TB07STA|TB10STA|TB07FTA|TB10FTA",NabiTablet:"Android.*\\bNabi",KoboTablet:"Kobo Touch|\\bK080\\b|\\bVox\\b Build|\\bArc\\b Build",DanewTablet:"DSlide.*\\b(700|701R|702|703R|704|802|970|971|972|973|974|1010|1012)\\b",TexetTablet:"NaviPad|TB-772A|TM-7045|TM-7055|TM-9750|TM-7016|TM-7024|TM-7026|TM-7041|TM-7043|TM-7047|TM-8041|TM-9741|TM-9747|TM-9748|TM-9751|TM-7022|TM-7021|TM-7020|TM-7011|TM-7010|TM-7023|TM-7025|TM-7037W|TM-7038W|TM-7027W|TM-9720|TM-9725|TM-9737W|TM-1020|TM-9738W|TM-9740|TM-9743W|TB-807A|TB-771A|TB-727A|TB-725A|TB-719A|TB-823A|TB-805A|TB-723A|TB-715A|TB-707A|TB-705A|TB-709A|TB-711A|TB-890HD|TB-880HD|TB-790HD|TB-780HD|TB-770HD|TB-721HD|TB-710HD|TB-434HD|TB-860HD|TB-840HD|TB-760HD|TB-750HD|TB-740HD|TB-730HD|TB-722HD|TB-720HD|TB-700HD|TB-500HD|TB-470HD|TB-431HD|TB-430HD|TB-506|TB-504|TB-446|TB-436|TB-416|TB-146SE|TB-126SE",PlaystationTablet:"Playstation.*(Portable|Vita)",TrekstorTablet:"ST10416-1|VT10416-1|ST70408-1|ST702xx-1|ST702xx-2|ST80208|ST97216|ST70104-2|VT10416-2|ST10216-2A|SurfTab",PyleAudioTablet:"\\b(PTBL10CEU|PTBL10C|PTBL72BC|PTBL72BCEU|PTBL7CEU|PTBL7C|PTBL92BC|PTBL92BCEU|PTBL9CEU|PTBL9CUK|PTBL9C)\\b",AdvanTablet:"Android.* \\b(E3A|T3X|T5C|T5B|T3E|T3C|T3B|T1J|T1F|T2A|T1H|T1i|E1C|T1-E|T5-A|T4|E1-B|T2Ci|T1-B|T1-D|O1-A|E1-A|T1-A|T3A|T4i)\\b ",DanyTechTablet:"Genius Tab G3|Genius Tab S2|Genius Tab Q3|Genius Tab G4|Genius Tab Q4|Genius Tab G-II|Genius TAB GII|Genius TAB GIII|Genius Tab S1",GalapadTablet:"Android [0-9.]+; [a-z-]+; \\bG1\\b",MicromaxTablet:"Funbook|Micromax.*\\b(P250|P560|P360|P362|P600|P300|P350|P500|P275)\\b",KarbonnTablet:"Android.*\\b(A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2)\\b",AllFineTablet:"Fine7 Genius|Fine7 Shine|Fine7 Air|Fine8 Style|Fine9 More|Fine10 Joy|Fine11 Wide",PROSCANTablet:"\\b(PEM63|PLT1023G|PLT1041|PLT1044|PLT1044G|PLT1091|PLT4311|PLT4311PL|PLT4315|PLT7030|PLT7033|PLT7033D|PLT7035|PLT7035D|PLT7044K|PLT7045K|PLT7045KB|PLT7071KG|PLT7072|PLT7223G|PLT7225G|PLT7777G|PLT7810K|PLT7849G|PLT7851G|PLT7852G|PLT8015|PLT8031|PLT8034|PLT8036|PLT8080K|PLT8082|PLT8088|PLT8223G|PLT8234G|PLT8235G|PLT8816K|PLT9011|PLT9045K|PLT9233G|PLT9735|PLT9760G|PLT9770G)\\b",YONESTablet:"BQ1078|BC1003|BC1077|RK9702|BC9730|BC9001|IT9001|BC7008|BC7010|BC708|BC728|BC7012|BC7030|BC7027|BC7026",ChangJiaTablet:"TPC7102|TPC7103|TPC7105|TPC7106|TPC7107|TPC7201|TPC7203|TPC7205|TPC7210|TPC7708|TPC7709|TPC7712|TPC7110|TPC8101|TPC8103|TPC8105|TPC8106|TPC8203|TPC8205|TPC8503|TPC9106|TPC9701|TPC97101|TPC97103|TPC97105|TPC97106|TPC97111|TPC97113|TPC97203|TPC97603|TPC97809|TPC97205|TPC10101|TPC10103|TPC10106|TPC10111|TPC10203|TPC10205|TPC10503",GUTablet:"TX-A1301|TX-M9002|Q702|kf026",PointOfViewTablet:"TAB-P506|TAB-navi-7-3G-M|TAB-P517|TAB-P-527|TAB-P701|TAB-P703|TAB-P721|TAB-P731N|TAB-P741|TAB-P825|TAB-P905|TAB-P925|TAB-PR945|TAB-PL1015|TAB-P1025|TAB-PI1045|TAB-P1325|TAB-PROTAB[0-9]+|TAB-PROTAB25|TAB-PROTAB26|TAB-PROTAB27|TAB-PROTAB26XL|TAB-PROTAB2-IPS9|TAB-PROTAB30-IPS9|TAB-PROTAB25XXL|TAB-PROTAB26-IPS10|TAB-PROTAB30-IPS10",OvermaxTablet:"OV-(SteelCore|NewBase|Basecore|Baseone|Exellen|Quattor|EduTab|Solution|ACTION|BasicTab|TeddyTab|MagicTab|Stream|TB-08|TB-09)|Qualcore 1027",HCLTablet:"HCL.*Tablet|Connect-3G-2.0|Connect-2G-2.0|ME Tablet U1|ME Tablet U2|ME Tablet G1|ME Tablet X1|ME Tablet Y2|ME Tablet Sync",DPSTablet:"DPS Dream 9|DPS Dual 7",VistureTablet:"V97 HD|i75 3G|Visture V4( HD)?|Visture V5( HD)?|Visture V10",CrestaTablet:"CTP(-)?810|CTP(-)?818|CTP(-)?828|CTP(-)?838|CTP(-)?888|CTP(-)?978|CTP(-)?980|CTP(-)?987|CTP(-)?988|CTP(-)?989",MediatekTablet:"\\bMT8125|MT8389|MT8135|MT8377\\b",ConcordeTablet:"Concorde([ ]+)?Tab|ConCorde ReadMan",GoCleverTablet:"GOCLEVER TAB|A7GOCLEVER|M1042|M7841|M742|R1042BK|R1041|TAB A975|TAB A7842|TAB A741|TAB A741L|TAB M723G|TAB M721|TAB A1021|TAB I921|TAB R721|TAB I720|TAB T76|TAB R70|TAB R76.2|TAB R106|TAB R83.2|TAB M813G|TAB I721|GCTA722|TAB I70|TAB I71|TAB S73|TAB R73|TAB R74|TAB R93|TAB R75|TAB R76.1|TAB A73|TAB A93|TAB A93.2|TAB T72|TAB R83|TAB R974|TAB R973|TAB A101|TAB A103|TAB A104|TAB A104.2|R105BK|M713G|A972BK|TAB A971|TAB R974.2|TAB R104|TAB R83.3|TAB A1042",ModecomTablet:"FreeTAB 9000|FreeTAB 7.4|FreeTAB 7004|FreeTAB 7800|FreeTAB 2096|FreeTAB 7.5|FreeTAB 1014|FreeTAB 1001 |FreeTAB 8001|FreeTAB 9706|FreeTAB 9702|FreeTAB 7003|FreeTAB 7002|FreeTAB 1002|FreeTAB 7801|FreeTAB 1331|FreeTAB 1004|FreeTAB 8002|FreeTAB 8014|FreeTAB 9704|FreeTAB 1003",VoninoTablet:"\\b(Argus[ _]?S|Diamond[ _]?79HD|Emerald[ _]?78E|Luna[ _]?70C|Onyx[ _]?S|Onyx[ _]?Z|Orin[ _]?HD|Orin[ _]?S|Otis[ _]?S|SpeedStar[ _]?S|Magnet[ _]?M9|Primus[ _]?94[ _]?3G|Primus[ _]?94HD|Primus[ _]?QS|Android.*\\bQ8\\b|Sirius[ _]?EVO[ _]?QS|Sirius[ _]?QS|Spirit[ _]?S)\\b",ECSTablet:"V07OT2|TM105A|S10OT1|TR10CS1",StorexTablet:"eZee[_']?(Tab|Go)[0-9]+|TabLC7|Looney Tunes Tab",VodafoneTablet:"SmartTab([ ]+)?[0-9]+|SmartTabII10|SmartTabII7|VF-1497|VFD 1400",EssentielBTablet:"Smart[ ']?TAB[ ]+?[0-9]+|Family[ ']?TAB2",RossMoorTablet:"RM-790|RM-997|RMD-878G|RMD-974R|RMT-705A|RMT-701|RME-601|RMT-501|RMT-711",iMobileTablet:"i-mobile i-note",TolinoTablet:"tolino tab [0-9.]+|tolino shine",AudioSonicTablet:"\\bC-22Q|T7-QC|T-17B|T-17P\\b",AMPETablet:"Android.* A78 ",SkkTablet:"Android.* (SKYPAD|PHOENIX|CYCLOPS)",TecnoTablet:"TECNO P9|TECNO DP8D",JXDTablet:"Android.* \\b(F3000|A3300|JXD5000|JXD3000|JXD2000|JXD300B|JXD300|S5800|S7800|S602b|S5110b|S7300|S5300|S602|S603|S5100|S5110|S601|S7100a|P3000F|P3000s|P101|P200s|P1000m|P200m|P9100|P1000s|S6600b|S908|P1000|P300|S18|S6600|S9100)\\b",iJoyTablet:"Tablet (Spirit 7|Essentia|Galatea|Fusion|Onix 7|Landa|Titan|Scooby|Deox|Stella|Themis|Argon|Unique 7|Sygnus|Hexen|Finity 7|Cream|Cream X2|Jade|Neon 7|Neron 7|Kandy|Scape|Saphyr 7|Rebel|Biox|Rebel|Rebel 8GB|Myst|Draco 7|Myst|Tab7-004|Myst|Tadeo Jones|Tablet Boing|Arrow|Draco Dual Cam|Aurix|Mint|Amity|Revolution|Finity 9|Neon 9|T9w|Amity 4GB Dual Cam|Stone 4GB|Stone 8GB|Andromeda|Silken|X2|Andromeda II|Halley|Flame|Saphyr 9,7|Touch 8|Planet|Triton|Unique 10|Hexen 10|Memphis 4GB|Memphis 8GB|Onix 10)",FX2Tablet:"FX2 PAD7|FX2 PAD10",XoroTablet:"KidsPAD 701|PAD[ ]?712|PAD[ ]?714|PAD[ ]?716|PAD[ ]?717|PAD[ ]?718|PAD[ ]?720|PAD[ ]?721|PAD[ ]?722|PAD[ ]?790|PAD[ ]?792|PAD[ ]?900|PAD[ ]?9715D|PAD[ ]?9716DR|PAD[ ]?9718DR|PAD[ ]?9719QR|PAD[ ]?9720QR|TelePAD1030|Telepad1032|TelePAD730|TelePAD731|TelePAD732|TelePAD735Q|TelePAD830|TelePAD9730|TelePAD795|MegaPAD 1331|MegaPAD 1851|MegaPAD 2151",ViewsonicTablet:"ViewPad 10pi|ViewPad 10e|ViewPad 10s|ViewPad E72|ViewPad7|ViewPad E100|ViewPad 7e|ViewSonic VB733|VB100a",VerizonTablet:"QTAQZ3|QTAIR7|QTAQTZ3|QTASUN1|QTASUN2|QTAXIA1",OdysTablet:"LOOX|XENO10|ODYS[ -](Space|EVO|Xpress|NOON)|\\bXELIO\\b|Xelio10Pro|XELIO7PHONETAB|XELIO10EXTREME|XELIOPT2|NEO_QUAD10",CaptivaTablet:"CAPTIVA PAD",IconbitTablet:"NetTAB|NT-3702|NT-3702S|NT-3702S|NT-3603P|NT-3603P|NT-0704S|NT-0704S|NT-3805C|NT-3805C|NT-0806C|NT-0806C|NT-0909T|NT-0909T|NT-0907S|NT-0907S|NT-0902S|NT-0902S",TeclastTablet:"T98 4G|\\bP80\\b|\\bX90HD\\b|X98 Air|X98 Air 3G|\\bX89\\b|P80 3G|\\bX80h\\b|P98 Air|\\bX89HD\\b|P98 3G|\\bP90HD\\b|P89 3G|X98 3G|\\bP70h\\b|P79HD 3G|G18d 3G|\\bP79HD\\b|\\bP89s\\b|\\bA88\\b|\\bP10HD\\b|\\bP19HD\\b|G18 3G|\\bP78HD\\b|\\bA78\\b|\\bP75\\b|G17s 3G|G17h 3G|\\bP85t\\b|\\bP90\\b|\\bP11\\b|\\bP98t\\b|\\bP98HD\\b|\\bG18d\\b|\\bP85s\\b|\\bP11HD\\b|\\bP88s\\b|\\bA80HD\\b|\\bA80se\\b|\\bA10h\\b|\\bP89\\b|\\bP78s\\b|\\bG18\\b|\\bP85\\b|\\bA70h\\b|\\bA70\\b|\\bG17\\b|\\bP18\\b|\\bA80s\\b|\\bA11s\\b|\\bP88HD\\b|\\bA80h\\b|\\bP76s\\b|\\bP76h\\b|\\bP98\\b|\\bA10HD\\b|\\bP78\\b|\\bP88\\b|\\bA11\\b|\\bA10t\\b|\\bP76a\\b|\\bP76t\\b|\\bP76e\\b|\\bP85HD\\b|\\bP85a\\b|\\bP86\\b|\\bP75HD\\b|\\bP76v\\b|\\bA12\\b|\\bP75a\\b|\\bA15\\b|\\bP76Ti\\b|\\bP81HD\\b|\\bA10\\b|\\bT760VE\\b|\\bT720HD\\b|\\bP76\\b|\\bP73\\b|\\bP71\\b|\\bP72\\b|\\bT720SE\\b|\\bC520Ti\\b|\\bT760\\b|\\bT720VE\\b|T720-3GE|T720-WiFi",OndaTablet:"\\b(V975i|Vi30|VX530|V701|Vi60|V701s|Vi50|V801s|V719|Vx610w|VX610W|V819i|Vi10|VX580W|Vi10|V711s|V813|V811|V820w|V820|Vi20|V711|VI30W|V712|V891w|V972|V819w|V820w|Vi60|V820w|V711|V813s|V801|V819|V975s|V801|V819|V819|V818|V811|V712|V975m|V101w|V961w|V812|V818|V971|V971s|V919|V989|V116w|V102w|V973|Vi40)\\b[\\s]+|V10 \\b4G\\b",JaytechTablet:"TPC-PA762",BlaupunktTablet:"Endeavour 800NG|Endeavour 1010",DigmaTablet:"\\b(iDx10|iDx9|iDx8|iDx7|iDxD7|iDxD8|iDsQ8|iDsQ7|iDsQ8|iDsD10|iDnD7|3TS804H|iDsQ11|iDj7|iDs10)\\b",EvolioTablet:"ARIA_Mini_wifi|Aria[ _]Mini|Evolio X10|Evolio X7|Evolio X8|\\bEvotab\\b|\\bNeura\\b",LavaTablet:"QPAD E704|\\bIvoryS\\b|E-TAB IVORY|\\bE-TAB\\b",AocTablet:"MW0811|MW0812|MW0922|MTK8382|MW1031|MW0831|MW0821|MW0931|MW0712",MpmanTablet:"MP11 OCTA|MP10 OCTA|MPQC1114|MPQC1004|MPQC994|MPQC974|MPQC973|MPQC804|MPQC784|MPQC780|\\bMPG7\\b|MPDCG75|MPDCG71|MPDC1006|MP101DC|MPDC9000|MPDC905|MPDC706HD|MPDC706|MPDC705|MPDC110|MPDC100|MPDC99|MPDC97|MPDC88|MPDC8|MPDC77|MP709|MID701|MID711|MID170|MPDC703|MPQC1010",CelkonTablet:"CT695|CT888|CT[\\s]?910|CT7 Tab|CT9 Tab|CT3 Tab|CT2 Tab|CT1 Tab|C820|C720|\\bCT-1\\b",WolderTablet:"miTab \\b(DIAMOND|SPACE|BROOKLYN|NEO|FLY|MANHATTAN|FUNK|EVOLUTION|SKY|GOCAR|IRON|GENIUS|POP|MINT|EPSILON|BROADWAY|JUMP|HOP|LEGEND|NEW AGE|LINE|ADVANCE|FEEL|FOLLOW|LIKE|LINK|LIVE|THINK|FREEDOM|CHICAGO|CLEVELAND|BALTIMORE-GH|IOWA|BOSTON|SEATTLE|PHOENIX|DALLAS|IN 101|MasterChef)\\b",MediacomTablet:"M-MPI10C3G|M-SP10EG|M-SP10EGP|M-SP10HXAH|M-SP7HXAH|M-SP10HXBH|M-SP8HXAH|M-SP8MXA",MiTablet:"\\bMI PAD\\b|\\bHM NOTE 1W\\b",NibiruTablet:"Nibiru M1|Nibiru Jupiter One",NexoTablet:"NEXO NOVA|NEXO 10|NEXO AVIO|NEXO FREE|NEXO GO|NEXO EVO|NEXO 3G|NEXO SMART|NEXO KIDDO|NEXO MOBI",LeaderTablet:"TBLT10Q|TBLT10I|TBL-10WDKB|TBL-10WDKBO2013|TBL-W230V2|TBL-W450|TBL-W500|SV572|TBLT7I|TBA-AC7-8G|TBLT79|TBL-8W16|TBL-10W32|TBL-10WKB|TBL-W100",UbislateTablet:"UbiSlate[\\s]?7C",PocketBookTablet:"Pocketbook",KocasoTablet:"\\b(TB-1207)\\b",HisenseTablet:"\\b(F5281|E2371)\\b",Hudl:"Hudl HT7S3|Hudl 2",TelstraTablet:"T-Hub2",GenericTablet:"Android.*\\b97D\\b|Tablet(?!.*PC)|BNTV250A|MID-WCDMA|LogicPD Zoom2|\\bA7EB\\b|CatNova8|A1_07|CT704|CT1002|\\bM721\\b|rk30sdk|\\bEVOTAB\\b|M758A|ET904|ALUMIUM10|Smartfren Tab|Endeavour 1010|Tablet-PC-4|Tagi Tab|\\bM6pro\\b|CT1020W|arc 10HD|\\bTP750\\b|\\bQTAQZ3\\b|WVT101|TM1088|KT107"},oss:{AndroidOS:"Android",BlackBerryOS:"blackberry|\\bBB10\\b|rim tablet os",PalmOS:"PalmOS|avantgo|blazer|elaine|hiptop|palm|plucker|xiino",SymbianOS:"Symbian|SymbOS|Series60|Series40|SYB-[0-9]+|\\bS60\\b",WindowsMobileOS:"Windows CE.*(PPC|Smartphone|Mobile|[0-9]{3}x[0-9]{3})|Windows Mobile|Windows Phone [0-9.]+|WCE;",WindowsPhoneOS:"Windows Phone 10.0|Windows Phone 8.1|Windows Phone 8.0|Windows Phone OS|XBLWP7|ZuneWP7|Windows NT 6.[23]; ARM;",iOS:"\\biPhone.*Mobile|\\biPod|\\biPad|AppleCoreMedia",iPadOS:"CPU OS 13",SailfishOS:"Sailfish",MeeGoOS:"MeeGo",MaemoOS:"Maemo",JavaOS:"J2ME/|\\bMIDP\\b|\\bCLDC\\b",webOS:"webOS|hpwOS",badaOS:"\\bBada\\b",BREWOS:"BREW"},uas:{Chrome:"\\bCrMo\\b|CriOS|Android.*Chrome/[.0-9]* (Mobile)?",Dolfin:"\\bDolfin\\b",Opera:"Opera.*Mini|Opera.*Mobi|Android.*Opera|Mobile.*OPR/[0-9.]+$|Coast/[0-9.]+",Skyfire:"Skyfire",Edge:"\\bEdgiOS\\b|Mobile Safari/[.0-9]* Edge",IE:"IEMobile|MSIEMobile",Firefox:"fennec|firefox.*maemo|(Mobile|Tablet).*Firefox|Firefox.*Mobile|FxiOS",Bolt:"bolt",TeaShark:"teashark",Blazer:"Blazer",Safari:"Version((?!\\bEdgiOS\\b).)*Mobile.*Safari|Safari.*Mobile|MobileSafari",WeChat:"\\bMicroMessenger\\b",UCBrowser:"UC.*Browser|UCWEB",baiduboxapp:"baiduboxapp",baidubrowser:"baidubrowser",DiigoBrowser:"DiigoBrowser",Mercury:"\\bMercury\\b",ObigoBrowser:"Obigo",NetFront:"NF-Browser",GenericBrowser:"NokiaBrowser|OviBrowser|OneBrowser|TwonkyBeamBrowser|SEMC.*Browser|FlyFlow|Minimo|NetFront|Novarra-Vision|MQQBrowser|MicroMessenger",PaleMoon:"Android.*PaleMoon|Mobile.*PaleMoon"},props:{Mobile:"Mobile/[VER]",Build:"Build/[VER]",Version:"Version/[VER]",VendorID:"VendorID/[VER]",iPad:"iPad.*CPU[a-z ]+[VER]",iPhone:"iPhone.*CPU[a-z ]+[VER]",iPod:"iPod.*CPU[a-z ]+[VER]",Kindle:"Kindle/[VER]",Chrome:["Chrome/[VER]","CriOS/[VER]","CrMo/[VER]"],Coast:["Coast/[VER]"],Dolfin:"Dolfin/[VER]",Firefox:["Firefox/[VER]","FxiOS/[VER]"],Fennec:"Fennec/[VER]",Edge:"Edge/[VER]",IE:["IEMobile/[VER];","IEMobile [VER]","MSIE [VER];","Trident/[0-9.]+;.*rv:[VER]"],NetFront:"NetFront/[VER]",NokiaBrowser:"NokiaBrowser/[VER]",Opera:[" OPR/[VER]","Opera Mini/[VER]","Version/[VER]"],"Opera Mini":"Opera Mini/[VER]","Opera Mobi":"Version/[VER]",UCBrowser:["UCWEB[VER]","UC.*Browser/[VER]"],MQQBrowser:"MQQBrowser/[VER]",MicroMessenger:"MicroMessenger/[VER]",baiduboxapp:"baiduboxapp/[VER]",baidubrowser:"baidubrowser/[VER]",SamsungBrowser:"SamsungBrowser/[VER]",Iron:"Iron/[VER]",Safari:["Version/[VER]","Safari/[VER]"],Skyfire:"Skyfire/[VER]",Tizen:"Tizen/[VER]",Webkit:"webkit[ /][VER]",PaleMoon:"PaleMoon/[VER]",SailfishBrowser:"SailfishBrowser/[VER]",Gecko:"Gecko/[VER]",Trident:"Trident/[VER]",Presto:"Presto/[VER]",Goanna:"Goanna/[VER]",iOS:" \\bi?OS\\b [VER][ ;]{1}",Android:"Android [VER]",Sailfish:"Sailfish [VER]",BlackBerry:["BlackBerry[\\w]+/[VER]","BlackBerry.*Version/[VER]","Version/[VER]"],BREW:"BREW [VER]",Java:"Java/[VER]","Windows Phone OS":["Windows Phone OS [VER]","Windows Phone [VER]"],"Windows Phone":"Windows Phone [VER]","Windows CE":"Windows CE/[VER]","Windows NT":"Windows NT [VER]",Symbian:["SymbianOS/[VER]","Symbian/[VER]"],webOS:["webOS/[VER]","hpwOS/[VER];"]},utils:{Bot:"Googlebot|facebookexternalhit|Google-AMPHTML|s~amp-validator|AdsBot-Google|Google Keyword Suggestion|Facebot|YandexBot|YandexMobileBot|bingbot|ia_archiver|AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|Exabot|MJ12bot|YandexImages|TurnitinBot|Pingdom|contentkingapp|AspiegelBot",MobileBot:"Googlebot-Mobile|AdsBot-Google-Mobile|YahooSeeker/M1A1-R2D2",DesktopMode:"WPDesktop",TV:"SonyDTV|HbbTV",WebKit:"(webkit)[ /]([\\w.]+)",Console:"\\b(Nintendo|Nintendo WiiU|Nintendo 3DS|Nintendo Switch|PLAYSTATION|Xbox)\\b",Watch:"SM-V700"}},detectMobileBrowsers:{fullPattern:/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,shortPattern:/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i,tabletPattern:/android|ipad|playbook|silk/i}},d=Object.prototype.hasOwnProperty,h=(u.FALLBACK_PHONE="UnknownPhone",u.FALLBACK_TABLET="UnknownTablet",u.FALLBACK_MOBILE="UnknownMobile","isArray"in Array?Array.isArray:function(e){return"[object Array]"===Object.prototype.toString.call(e)}),f=u.mobileDetectRules;for(i in f.props)if(d.call(f.props,i)){for(r=f.props[i],l=(r=h(r)?r:[r]).length,a=0;a<l;++a)0<=(c=(s=r[a]).indexOf("[VER]"))&&(s=s.substring(0,c)+"([\\w._\\+]+)"+s.substring(c+5)),r[a]=new RegExp(s,"i");f.props[i]=r}return e(f.oss),e(f.phones),e(f.tablets),e(f.uas),e(f.utils),f.oss0={WindowsPhoneOS:f.oss.WindowsPhoneOS,WindowsMobileOS:f.oss.WindowsMobileOS},u.findMatch=function(e,t){for(var n in e)if(d.call(e,n)&&e[n].test(t))return n;return null},u.findMatches=function(e,t){var n,i=[];for(n in e)d.call(e,n)&&e[n].test(t)&&i.push(n);return i},u.getVersionStr=function(e,t){var n,i,o,r,s=u.mobileDetectRules.props;if(d.call(s,e))for(o=(n=s[e]).length,i=0;i<o;++i)if(null!==(r=n[i].exec(t)))return r[1];return null},u.getVersion=function(e,t){e=u.getVersionStr(e,t);return e?u.prepareVersionNo(e):NaN},u.prepareVersionNo=function(e){var t=e.split(/[a-z._ \/\-]/i);return 1===t.length&&(e=t[0]),1<t.length&&(e=t[0]+".",t.shift(),e+=t.join("")),Number(e)},u.isMobileFallback=function(e){return u.detectMobileBrowsers.fullPattern.test(e)||u.detectMobileBrowsers.shortPattern.test(e.substr(0,4))},u.isTabletFallback=function(e){return u.detectMobileBrowsers.tabletPattern.test(e)},u.prepareDetectionCache=function(e,t,n){var i;if(e.mobile===p)return(i=u.findMatch(u.mobileDetectRules.tablets,t))?(e.mobile=e.tablet=i,void(e.phone=null)):(i=u.findMatch(u.mobileDetectRules.phones,t))?(e.mobile=e.phone=i,void(e.tablet=null)):void(u.isMobileFallback(t)?(i=o.isPhoneSized(n))===p?(e.mobile=u.FALLBACK_MOBILE,e.tablet=e.phone=null):i?(e.mobile=e.phone=u.FALLBACK_PHONE,e.tablet=null):(e.mobile=e.tablet=u.FALLBACK_TABLET,e.phone=null):u.isTabletFallback(t)?(e.mobile=e.tablet=u.FALLBACK_TABLET,e.phone=null):e.mobile=e.tablet=e.phone=null)},u.mobileGrade=function(e){var t=null!==e.mobile();return e.os("iOS")&&4.3<=e.version("iPad")||e.os("iOS")&&3.1<=e.version("iPhone")||e.os("iOS")&&3.1<=e.version("iPod")||2.1<e.version("Android")&&e.is("Webkit")||7<=e.version("Windows Phone OS")||e.is("BlackBerry")&&6<=e.version("BlackBerry")||e.match("Playbook.*Tablet")||1.4<=e.version("webOS")&&e.match("Palm|Pre|Pixi")||e.match("hp.*TouchPad")||e.is("Firefox")&&12<=e.version("Firefox")||e.is("Chrome")&&e.is("AndroidOS")&&4<=e.version("Android")||e.is("Skyfire")&&4.1<=e.version("Skyfire")&&e.is("AndroidOS")&&2.3<=e.version("Android")||e.is("Opera")&&11<e.version("Opera Mobi")&&e.is("AndroidOS")||e.is("MeeGoOS")||e.is("Tizen")||e.is("Dolfin")&&2<=e.version("Bada")||(e.is("UC Browser")||e.is("Dolfin"))&&2.3<=e.version("Android")||e.match("Kindle Fire")||e.is("Kindle")&&3<=e.version("Kindle")||e.is("AndroidOS")&&e.is("NookTablet")||11<=e.version("Chrome")&&!t||5<=e.version("Safari")&&!t||4<=e.version("Firefox")&&!t||7<=e.version("MSIE")&&!t||10<=e.version("Opera")&&!t?"A":e.os("iOS")&&e.version("iPad")<4.3||e.os("iOS")&&e.version("iPhone")<3.1||e.os("iOS")&&e.version("iPod")<3.1||e.is("Blackberry")&&5<=e.version("BlackBerry")&&e.version("BlackBerry")<6||5<=e.version("Opera Mini")&&e.version("Opera Mini")<=6.5&&(2.3<=e.version("Android")||e.is("iOS"))||e.match("NokiaN8|NokiaC7|N97.*Series60|Symbian/3")||11<=e.version("Opera Mobi")&&e.is("SymbianOS")?"B":(e.version("BlackBerry")<5||e.match("MSIEMobile|Windows CE.*Mobile")||e.version("Windows Mobile"),"C")},u.detectOS=function(e){return u.findMatch(u.mobileDetectRules.oss0,e)||u.findMatch(u.mobileDetectRules.oss,e)},u.getDeviceSmallerSide=function(){return window.screen.width<window.screen.height?window.screen.width:window.screen.height},o.prototype={constructor:o,mobile:function(){return u.prepareDetectionCache(this._cache,this.ua,this.maxPhoneWidth),this._cache.mobile},phone:function(){return u.prepareDetectionCache(this._cache,this.ua,this.maxPhoneWidth),this._cache.phone},tablet:function(){return u.prepareDetectionCache(this._cache,this.ua,this.maxPhoneWidth),this._cache.tablet},userAgent:function(){return this._cache.userAgent===p&&(this._cache.userAgent=u.findMatch(u.mobileDetectRules.uas,this.ua)),this._cache.userAgent},userAgents:function(){return this._cache.userAgents===p&&(this._cache.userAgents=u.findMatches(u.mobileDetectRules.uas,this.ua)),this._cache.userAgents},os:function(){return this._cache.os===p&&(this._cache.os=u.detectOS(this.ua)),this._cache.os},version:function(e){return u.getVersion(e,this.ua)},versionStr:function(e){return u.getVersionStr(e,this.ua)},is:function(e){return n(this.userAgents(),e)||t(e,this.os())||t(e,this.phone())||t(e,this.tablet())||n(u.findMatches(u.mobileDetectRules.utils,this.ua),e)},match:function(e){return(e=e instanceof RegExp?e:new RegExp(e,"i")).test(this.ua)},isPhoneSized:function(e){return o.isPhoneSized(e||this.maxPhoneWidth)},mobileGrade:function(){return this._cache.grade===p&&(this._cache.grade=u.mobileGrade(this)),this._cache.grade}},"undefined"!=typeof window&&window.screen?o.isPhoneSized=function(e){return e<0?p:u.getDeviceSmallerSide()<=e}:o.isPhoneSized=function(){},o._impl=u,o.version="1.4.5 2021-03-13",o})}(),function(){function i(e){var t;S||(S=!0,t=x(e),P(e),b.css({transform:"translateY(".concat(t,"%)")}),w(m,e,"active"),setTimeout(function(){S=!1,w(T,e,"fix-nav__item--active")},1300))}function n(){var e=m.filter(".active"),t=e.next(),n=e.prev();return{next:function(){t.length&&i(t.index())},prev:function(){n.length&&i(n.index())}}}var t,e,o=document.querySelector(".menu--adaptive"),r=document.querySelector(".gamburger"),s=document.querySelector(".close"),r=(r.addEventListener("click",function(e){o.style.display="block"}),s.addEventListener("click",function(e){o.style.display="none"}),$(".menu__link").on("click",function(e){o.style.display="none"}),$(".people__name")),a=$(".people"),l=(r.on("click",function(e){$(e.currentTarget).closest(a).toggleClass("people--active").siblings().removeClass("people--active")}),$(".reviews__switcher-link").on("click",function(e){e.preventDefault();var e=$(e.currentTarget).closest(".reviews__switcher-item"),t=e.index(),n=$(".reviews__display-inner");e.addClass("reviews__switcher-item--active").siblings().removeClass("reviews__switcher-item--active"),n.eq(t).addClass("reviews__display-inner--active").siblings().removeClass("reviews__display-inner--active")}),$(".products__list").bxSlider({pager:!1,controls:!1})),c=($(".left-buttun").click(function(e){l.goToPrevSlide()}),$(".right-buttun").click(function(e){l.goToNextSlide()}),$(".form").submit(function(e){e.preventDefault();var e=$(e.currentTarget),t=e.find("[name='name']"),n=e.find("[name='phone']"),i=e.find("[name='comment']"),o=e.find("[name='to']"),r=$("#modal").find(".modal__text");$(".modal__container").removeClass("modal-text--error"),e=e,[t,n,i,o].forEach(function(e){e.removeClass("input--error"),""===e.val().trim()&&e.addClass("input--error")}),0===e.find(".input--error").length&&$.ajax({url:"https://webdev-api.loftschool.com/sendmail",method:"post",data:{name:t.val(),phone:n.val(),comment:i.val(),to:o.val()},success:function(e){r.text(e.message),Fancybox.show([{src:"#modal",type:"inline"}])},error:function(e){r.text(e.message||"ÐÑÐ¸Ð±ÐºÐ° Ð½Ð° ÑÑÐ¾ÑÐ¾Ð½Ðµ ÑÐµÑÐ²ÐµÑÐ°"),$(".modal__container").addClass("modal-text--error"),Fancybox.show([{src:"#modal",type:"inline"}])}})}),$(".js-button").click(function(e){e.preventDefault(),Fancybox.close()}),$(".colors__title")),u=$(".colors__content"),d=$(".colors__item"),h=window.matchMedia("(max-width: 768px)").matches,f=(c.on("click",function(e){e.preventDefault();var t=$(e.currentTarget).next(u),e=$(e.currentTarget).closest(".colors__item"),e=d.not(e);u.css("width","0"),h&&e.css("display","none"),t.hasClass("colors__content--active")?(u.removeClass("colors__content--active"),e.css("display","flex")):(t.css("width",f),t.addClass("colors__content--active"))}),function(e){var t=$(window).width(),n=c.closest(".colors").find(".colors__title"),n=c.width()*n.length,i=c.first().width();return h?t-i:t-n}),p=document.getElementById("player__video"),g=$(".player"),v=($(".player__sp, .player-play, .player__splash, #player__video").click(function(e){e.preventDefault(),g.hasClass("paused")?(g.removeClass("paused"),p.pause(),g.removeClass("player--active")):(g.addClass("paused"),p.play(),g.addClass("player--active"))}),$(".player__playback").click(function(e){var t=$(e.currentTarget),e=e.originalEvent.layerX/t.width()*100,t=p.duration/100*e;$(".player__playback-button").css({left:"".concat(e,"%")}),p.currentTime=t}),t=p.duration,setInterval(function(){var e=p.currentTime/t*100;$(".player__playback-button").css({left:"".concat(e,"%")}),$(".playback__width").css({width:"".concat(e,"%")})},1e3),$(".allVolume")),m=(v.click(function(e){e.preventDefault(),v.hasClass("volumeOff")?(v.removeClass("volumeOff"),p.muted=!1):(v.addClass("volumeOff"),p.muted=!0)}),$(".volume__bar").click(function(e){var t=$(e.currentTarget),e=e.originalEvent.layerX/t.width()*100;p.volume=e/100,$(".volume__button").css({left:"".concat(e,"%")}),$(".volume__width").css({width:"".concat(e,"%")}),0==e?v.addClass("volumeOff"):v.removeClass("volumeOff")}),$("section")),b=$(".maincontent"),y=$(".fix-nav"),T=y.find(".fix-nav__item"),s=new MobileDetect(window.navigator.userAgent).mobile(),S=!1,x=(m.first().addClass("active"),function(e){e*=-100;return isNaN(e)?(console.log("Ð¿ÐµÑÐµÐ´Ð°Ð½Ð¾ Ð½ÐµÐ²ÐµÑÐ½Ð¾Ðµ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ Ð² countSectionPosition"),0):e}),P=function(e){var t="fix-nav--white";"white"===m.eq(e).attr("data-fixNav-theme")?y.addClass(t):y.removeClass(t)},w=function(e,t,n){e.eq(t).addClass(n).siblings().removeClass(n)};$(window).on("wheel",function(e){var e=e.originalEvent.deltaY,t=n();0<e&&t.next(),e<0&&t.prev()}),$(window).on("keydown",function(e){var t=e.target.tagName.toLowerCase(),t="input"===t||"textarea"===t;n();if(!t)switch(e.keyCode){case 38:case 40:n()}}),$(".wrapper").on("touchmove",function(e){return e.preventDefault()}),$("[data-scroll-to]").click(function(e){e.preventDefault();e=$(e.currentTarget).attr("data-scroll-to"),e=$("[data-section-id=".concat(e,"]"));i(e.index())}),s&&$("body").swipe({swipe:function(e,t){n()["down"===t?"prev":"up"===t?"next":""]()}});ymaps.ready(function(){e=new ymaps.Map("map",{center:[55.749771,37.600128],zoom:14,controls:[]});var t=new ymaps.GeoObjectCollection({},{iconLayout:"default#image",iconImageHref:"../img/content/marker.svg",iconImageSize:[58,73],iconImageOffset:[-3,-42],draggable:!1});[[55.742863,37.581273],[55.758417,37.583148],[55.750153,37.604501],[55.755447,37.617683]].forEach(function(e){t.add(new ymaps.Placemark(e))}),e.geoObjects.add(t),e.behaviors.disable("scrollZoom")})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
